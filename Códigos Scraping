{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "00cb5989",
   "metadata": {},
   "source": [
    "# üß≠ Trip Mallorca ‚Äî *Tu c√≥digo, seccionado con t√≠tulos y pocas partes*\n",
    "Separ√© en **pocas** celdas por funcionalidad principal (sin cambiar tu l√≥gica), para que sea legible y funcional."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7c2c58a",
   "metadata": {},
   "source": [
    "## üß∞ Librer√≠as e importaciones"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "256d0e7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from selenium import webdriver\n",
    "from selenium.webdriver.chrome.service import Service\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.common.action_chains import ActionChains\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "from selenium.common.exceptions import TimeoutException\n",
    "import time\n",
    "import csv\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a3614f9d-ce32-47f0-9d73-0baf7601beac",
   "metadata": {},
   "outputs": [],
   "source": [
    "def close_all_known_popups(driver):\n",
    "    try:\n",
    "        boton = driver.find_element(By.CSS_SELECTOR, '[aria-label=\"Cerrar\"]')\n",
    "        boton.click()\n",
    "    except:\n",
    "        pass\n",
    "\n",
    "def safe_get(func):\n",
    "    try:\n",
    "        return func()\n",
    "    except:\n",
    "        return None\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "407accef",
   "metadata": {},
   "source": [
    "## üíª Iniciar sesi√≥n del navegador"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "14176522",
   "metadata": {},
   "outputs": [],
   "source": [
    "driver = webdriver.Chrome(service=Service())\n",
    "driver.get(\"https://www.tripadvisor.es/Attractions-g187463-Activities-c42-Palma_de_Mallorca_Majorca_Balearic_Islands.html\")\n",
    "time.sleep(2)\n",
    "close_all_known_popups(driver)\n",
    "\n",
    "# Aceptar cookies\n",
    "try:\n",
    "    WebDriverWait(driver, 10).until(\n",
    "        EC.element_to_be_clickable((By.ID, \"onetrust-accept-btn-handler\"))\n",
    "    ).click()\n",
    "    print(\"Cookies aceptadas.\")\n",
    "except:\n",
    "    print(\"Banner de cookies no apareci√≥.\")\n",
    "\n",
    "# Cerrar modal de inicio de sesi√≥n\n",
    "try:\n",
    "    WebDriverWait(driver, 10).until(\n",
    "        EC.element_to_be_clickable((By.CSS_SELECTOR, '[role=\"dialog\"] button[aria-label=\"Dismiss sign-in info.\"]'))\n",
    "    ).click()\n",
    "except:\n",
    "    print(\"No apareci√≥ modal de inicio de sesi√≥n.\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae275415",
   "metadata": {},
   "source": [
    "## üîé Scrapping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b5776123",
   "metadata": {},
   "outputs": [],
   "source": [
    "experiencias = []\n",
    "max_paginas = 50\n",
    "\n",
    "for pagina in range(max_paginas):\n",
    "    time.sleep(2)\n",
    "    close_all_known_popups(driver)\n",
    "\n",
    "    tarjetas = driver.find_elements(By.CSS_SELECTOR, 'section[data-automation=\"WebPresentation_SingleFlexCardSection\"]')\n",
    "    print(f\"üìÑ P√°gina {pagina+1}: {len(tarjetas)} tarjetas encontradas.\")\n",
    "\n",
    "    if len(tarjetas) == 0:\n",
    "        print(\"No se encontraron tarjetas. Fin del scraping.\")\n",
    "        break\n",
    "\n",
    "    for i, tarjeta in enumerate(tarjetas):\n",
    "        try:\n",
    "            ActionChains(driver).move_to_element(tarjeta).perform()\n",
    "            time.sleep(0.5)\n",
    "\n",
    "            nombre = safe_get(lambda: tarjeta.find_element(By.CSS_SELECTOR, 'h3').text.strip())\n",
    "            enlace = safe_get(lambda: tarjeta.find_element(By.CSS_SELECTOR, 'a[target=\"_blank\"]').get_attribute(\"href\"))\n",
    "\n",
    "            puntuacion = None\n",
    "            for span in tarjeta.find_elements(By.CSS_SELECTOR, 'span[aria-hidden=\"true\"]'):\n",
    "                texto = span.text.strip()\n",
    "                if re.match(r\"^\\d+,\\d$\", texto):\n",
    "                    puntuacion = float(texto.replace(\",\", \".\"))\n",
    "                    break\n",
    "\n",
    "            precio = safe_get(lambda: tarjeta.find_element(By.XPATH, \".//*[contains(text(),'‚Ç¨')]\").text.strip())\n",
    "\n",
    "            numero_reviews = None\n",
    "            try:\n",
    "                for div in tarjeta.find_elements(By.CSS_SELECTOR, 'div.biGQs._P.pZUbB.ZNjnF'):\n",
    "                    texto = div.text.strip().replace('.', '')\n",
    "                    if texto.isdigit():\n",
    "                        numero_reviews = int(texto)\n",
    "                        break\n",
    "            except:\n",
    "                pass\n",
    "\n",
    "            descripcion = safe_get(lambda: tarjeta.find_element(By.CSS_SELECTOR, 'span.SwTtt').text.strip())\n",
    "\n",
    "            cancelacion_gratis = False\n",
    "            try:\n",
    "                texto_cancel = tarjeta.find_element(By.CSS_SELECTOR, 'span.biGQs._P.pZUbB.egaXP.ZNjnF').text\n",
    "                if \"Cancelaci√≥n gratuita\" in texto_cancel:\n",
    "                    cancelacion_gratis = True\n",
    "            except:\n",
    "                pass\n",
    "\n",
    "            imagen = safe_get(lambda: tarjeta.find_element(By.CSS_SELECTOR, 'img').get_attribute(\"src\"))\n",
    "\n",
    "            experiencia = {\n",
    "                \"nombre_experiencia\": nombre,\n",
    "                \"enlace_experiencia\": enlace,\n",
    "                \"puntuacion_experiencia\": puntuacion,\n",
    "                \"precio\": precio,\n",
    "                \"numero_reviews\": numero_reviews,\n",
    "                \"descripcion\": descripcion,\n",
    "                \"cancelacion_gratis\": cancelacion_gratis,\n",
    "                \"url_imagen_experiencia\": imagen\n",
    "            }\n",
    "\n",
    "            experiencias.append(experiencia)\n",
    "            print(f\" #{len(experiencias)}: {nombre}\")\n",
    "\n",
    "        except Exception as e:\n",
    "            print(f\"Error en tarjeta #{i+1}: {e}\")\n",
    "\n",
    "    # Pasar a la siguiente p√°gina (m√©todo robusto con href como respaldo)\n",
    "    try:\n",
    "        boton_siguiente = WebDriverWait(driver, 10).until(\n",
    "            EC.presence_of_element_located((By.CSS_SELECTOR, 'a[data-smoke-attr=\"pagination-next-arrow\"]'))\n",
    "        )\n",
    "\n",
    "        href = boton_siguiente.get_attribute(\"href\")\n",
    "        if href:\n",
    "            print(\"Clic en bot√≥n 'Siguiente'\")\n",
    "            driver.get(href)\n",
    "            time.sleep(3)\n",
    "        else:\n",
    "            print(\"No se encontr√≥ href en bot√≥n 'Siguiente'.\")\n",
    "            break\n",
    "\n",
    "    except Exception as e:\n",
    "        print(f\"No se pudo pasar a la siguiente p√°gina: {e}\")\n",
    "        break"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3cb4dbb-e8c6-4c66-b229-575f64ab4092",
   "metadata": {},
   "source": [
    "## üíæ Guardar Archivo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "54b0a392-1223-49b1-b095-3a1e996d9d19",
   "metadata": {},
   "outputs": [],
   "source": [
    "archivo = \"experiencias_tripadvisor_mallorca.csv\"\n",
    "with open(archivo, \"w\", newline=\"\", encoding=\"utf-8\") as f:\n",
    "    campos = [\n",
    "        \"nombre_experiencia\",\n",
    "        \"enlace_experiencia\",\n",
    "        \"puntuacion_experiencia\",\n",
    "        \"precio\",\n",
    "        \"numero_reviews\",\n",
    "        \"descripcion\",\n",
    "        \"cancelacion_gratis\",\n",
    "        \"url_imagen_experiencia\"\n",
    "    ]\n",
    "    writer = csv.DictWriter(f, fieldnames=campos)\n",
    "    writer.writeheader()\n",
    "    writer.writerows(experiencias)\n",
    "\n",
    "driver.quit()\n",
    "print(f\"‚úÖ Scraping completado. Total: {len(experiencias)} experiencias guardadas en {archivo}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d2e44e56-443d-4d1a-b496-b662555c4c34",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "e1f7bf87-b9f7-43a2-b9c1-806745d4aff6",
   "metadata": {},
   "source": [
    "## üß∞ Librer√≠as e importaciones"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d1cb3051-65a5-46d2-b274-9e3471678d0f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import re\n",
    "import time\n",
    "import pandas as pd\n",
    "import dateparser\n",
    "from selenium import webdriver\n",
    "from selenium.webdriver.chrome.service import Service\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.chrome.options import Options\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "from selenium.common.exceptions import StaleElementReferenceException\n",
    "from webdriver_manager.chrome import ChromeDriverManager"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6aa7963-545e-4249-a72e-3ac5d2ba5ae2",
   "metadata": {},
   "source": [
    "## üíª Iniciar sesi√≥n del navegador"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c01f7962-16f7-4619-84c3-353ecb0da923",
   "metadata": {},
   "outputs": [],
   "source": [
    "options = Options()\n",
    "options.add_argument(\"--start-maximized\")\n",
    "driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4b6b38e5-b4cf-4bb0-8cd3-ff91710c5f5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"experiencias_tripadvisor_mallorca_limpio.csv\")  # CSV con columna \"enlace_experiencia\"\n",
    "comentarios_df = pd.DataFrame(columns=[\n",
    "    \"titulo\", \"usuario\", \"pais\", \"comentario\", \"fecha\", \"categoria\", \"review_score\"\n",
    "])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72515518-a663-424e-95e2-b092c1254d83",
   "metadata": {},
   "source": [
    "## üß© Funciones auxiliares"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ad8e531-0698-4f88-8fb6-05f213c6afd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def extract_comment(card):\n",
    "    try:\n",
    "        return card.find_element(By.CSS_SELECTOR, 'div.biGQs._P.pZUbB.AWdfh').text.strip()\n",
    "    except:\n",
    "        return \"\"\n",
    "\n",
    "def extract_user(card):\n",
    "    try:\n",
    "        return card.find_element(By.CSS_SELECTOR, 'span.biGQs._P.ezezH a').text.strip()\n",
    "    except:\n",
    "        return \"\"\n",
    "\n",
    "def extract_country(card):\n",
    "    try:\n",
    "        country_div = card.find_elements(By.CSS_SELECTOR, 'div.vYLts div.biGQs._P.navcl')\n",
    "        if country_div and len(country_div) > 1:\n",
    "            return country_div[1].text.strip()\n",
    "        elif country_div:\n",
    "            return country_div[0].text.strip()\n",
    "    except:\n",
    "        pass\n",
    "    return \"\"\n",
    "\n",
    "\n",
    "def extract_score(card):\n",
    "    try:\n",
    "        svg = card.find_element(By.CSS_SELECTOR, 'svg[data-automation=\"bubbleRatingImage\"]')\n",
    "        title_tag = svg.find_element(By.TAG_NAME, 'title')\n",
    "        score_text = title_tag.get_attribute(\"innerText\")  # ejemplo: \"5 of 5 bubbles\"\n",
    "        m = re.search(r'(\\d+)\\s*of\\s*5', score_text)\n",
    "        if m:\n",
    "            return int(m.group(1))\n",
    "    except:\n",
    "        pass\n",
    "    return None\n",
    "\n",
    "def extract_date_and_categoria(card):\n",
    "    try:\n",
    "        fecha_div = card.find_element(By.CSS_SELECTOR, 'div.RpeCd').text.strip()\n",
    "        if '‚Ä¢' in fecha_div:\n",
    "            fecha_raw, categoria_raw = map(str.strip, fecha_div.split('‚Ä¢'))\n",
    "        else:\n",
    "            fecha_raw = fecha_div\n",
    "            categoria_raw = \"\"\n",
    "        fecha_dt = dateparser.parse(fecha_raw, languages=['es','en'])\n",
    "        fecha = fecha_dt.strftime('%Y-%m-%d') if fecha_dt else \"\"\n",
    "        return fecha, categoria_raw\n",
    "    except:\n",
    "        return \"\", \"\"\n",
    "\n",
    "def parse_review(card, titulo_experiencia):\n",
    "    fecha, categoria = extract_date_and_categoria(card)\n",
    "    return {\n",
    "        \"titulo\": titulo_experiencia,\n",
    "        \"usuario\": extract_user(card),\n",
    "        \"pais\": extract_country(card),\n",
    "        \"comentario\": extract_comment(card),\n",
    "        \"fecha\": fecha,\n",
    "        \"categoria\": categoria,\n",
    "        \"review_score\": extract_score(card)\n",
    "    }\n",
    "\n",
    "\n",
    "def click_ver_todos():\n",
    "    try:\n",
    "        btn = driver.find_elements(By.XPATH, '//a[contains(text(), \"Ver todos los comentarios\") or contains(text(), \"See all reviews\")]')\n",
    "        if btn:\n",
    "            driver.execute_script(\"arguments[0].scrollIntoView({block:'center'});\", btn[0])\n",
    "            time.sleep(1.5)\n",
    "            btn[0].click()\n",
    "            time.sleep(2)\n",
    "            return True\n",
    "    except:\n",
    "        pass\n",
    "    return False\n",
    "\n",
    "def click_next_page():\n",
    "    try:\n",
    "        next_btn = driver.find_element(By.CSS_SELECTOR, 'div.HXmEd a[data-smoke-attr=\"pagination-next-arrow\"]')\n",
    "        driver.execute_script(\"arguments[0].scrollIntoView({block:'center'});\", next_btn)\n",
    "        time.sleep(1.5)\n",
    "        next_btn.click()\n",
    "        time.sleep(2)\n",
    "        return True\n",
    "    except:\n",
    "        return False\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f9bdc65-cb0a-436c-9424-11ab783a9a7d",
   "metadata": {},
   "source": [
    "## üîé Scrapping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b2b270ea-b1af-42d1-bf8a-eb77c965ebd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrapear_experiencia(url):\n",
    "    driver.get(url)\n",
    "    time.sleep(3)\n",
    "    \n",
    "    # Cerrar cookies\n",
    "    try:\n",
    "        WebDriverWait(driver, 3).until(\n",
    "            EC.element_to_be_clickable((By.ID, \"onetrust-accept-btn-handler\"))\n",
    "        ).click()\n",
    "    except:\n",
    "        pass\n",
    "    \n",
    "    # Click \"Ver todos los comentarios\"\n",
    "    click_ver_todos()\n",
    "    \n",
    "    # T√≠tulo de la experiencia\n",
    "    try:\n",
    "        titulo = driver.find_element(By.CSS_SELECTOR, 'h1[data-automation=\"mainH1\"]').text.strip()\n",
    "    except:\n",
    "        titulo = \"Sin t√≠tulo\"\n",
    "    \n",
    "    comentarios = []\n",
    "    \n",
    "    while True:\n",
    "        # Scroll lento para cargar tarjetas\n",
    "        driver.execute_script(\"window.scrollBy(0, 500);\")\n",
    "        time.sleep(1)\n",
    "        \n",
    "        cards = driver.find_elements(By.CSS_SELECTOR, 'div._c[data-automation=\"reviewCard\"]')\n",
    "        if not cards:\n",
    "            break\n",
    "        for card in cards:\n",
    "            try:\n",
    "                data = parse_review(card, titulo)\n",
    "                comentarios.append(data)\n",
    "            except StaleElementReferenceException:\n",
    "                continue\n",
    "        if not click_next_page():\n",
    "            break\n",
    "    return comentarios\n",
    "\n",
    "for idx, row in df.iterrows():\n",
    "    url = row[\"enlace_experiencia\"]\n",
    "    print(f\"Procesando {idx+1}/{len(df)}: {url}\")\n",
    "    resultados = scrapear_experiencia(url)\n",
    "    if resultados:\n",
    "        comentarios_df = pd.concat([comentarios_df, pd.DataFrame(resultados)], ignore_index=True)\n",
    "    time.sleep(1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d06965b-6345-455d-a35e-2faf434d9c1a",
   "metadata": {},
   "source": [
    "## üíæ Guardar CSV final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "50a9a0eb-9f9e-4f0a-bef0-10fd64521bb0",
   "metadata": {},
   "outputs": [],
   "source": [
    "comentarios_df[\"review_score\"] = pd.to_numeric(comentarios_df[\"review_score\"], errors=\"coerce\")\n",
    "comentarios_df.to_csv(\"trip_reviews_mallorca.csv\", index=False)\n",
    "print(\"Archivo guardado: trip_reviews_valencia.csv\")\n",
    "\n",
    "driver.quit()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

{"cells":[{"cell_type":"markdown","id":"31ee604f-2046-476a-aeb3-135c016d609e","metadata":{"id":"31ee604f-2046-476a-aeb3-135c016d609e"},"source":["# üìå Scraping de Twitter"]},{"cell_type":"markdown","id":"c45fd7bd","metadata":{"id":"c45fd7bd"},"source":["\n","Este notebook realiza scraping en Twitter/X para recorrer distintas ciudades y varias palabras clave.\n","\n","Incluye:\n","- Recolecci√≥n de texto, fecha, ciudad, keyword y query por combinaci√≥n ciudad√ókeyword.\n","- Manejo de m√∫ltiples combinaciones con conteo de tweets por query.\n","- Construcci√≥n de un nombre de archivo por ciudad (para guardar resultados).\n","- Posibilidad de ejecuci√≥n as√≠ncrona para acelerar la recolecci√≥n cuando hay muchas peticiones.\n"]},{"cell_type":"markdown","id":"c9267538","metadata":{"id":"c9267538"},"source":["# üì• Imports y configuraci√≥n inicial"]},{"cell_type":"code","execution_count":null,"id":"001617eb-05c6-4852-9704-fc7218ab48d1","metadata":{"id":"001617eb-05c6-4852-9704-fc7218ab48d1"},"outputs":[],"source":["from playwright.sync_api import sync_playwright\n","import nest_asyncio\n","nest_asyncio.apply()\n","import asyncio\n","from playwright.async_api import async_playwright\n","from datetime import datetime\n","import pytz"]},{"cell_type":"markdown","id":"472b233d","metadata":{"id":"472b233d"},"source":["# ‚öôÔ∏è Definici√≥n de funciones auxiliares"]},{"cell_type":"markdown","id":"36e3e4f7","metadata":{"id":"36e3e4f7"},"source":["# ‚ñ∂Ô∏è Ejecuci√≥n del scraping"]},{"cell_type":"code","execution_count":null,"id":"875212de-6c99-4e4d-81e7-2810c999a1ff","metadata":{"id":"875212de-6c99-4e4d-81e7-2810c999a1ff","outputId":"6960d91a-c714-4cd3-f100-3e24391c2042"},"outputs":[{"name":"stdout","output_type":"stream","text":["Inicia sesi√≥n manualmente...\n","Esperando que cargue el feed...\n","Feed detectado. Guardando sesi√≥n...\n","Sesi√≥n guardada.\n","Puedes cerrar el navegador manualmente ahora.\n"]}],"source":["async def guardar_sesion_twitter_async():\n","    async with async_playwright() as p:\n","        browser = await p.chromium.launch(headless=False)\n","        context = await browser.new_context()\n","        page = await context.new_page()\n","\n","        await page.goto(\"https://twitter.com/login\")\n","\n","        print(\"Inicia sesi√≥n manualmente...\")\n","\n","        # Espera que cargue un tweet en el feed\n","        print(\"Esperando que cargue el feed...\")\n","        await page.wait_for_selector('div[data-testid=\"cellInnerDiv\"]', timeout=120_000)\n","        print(\"Feed detectado. Guardando sesi√≥n...\")\n","\n","        await context.storage_state(path=\"twitter_sesion.json\")\n","        print(\"Sesi√≥n guardada.\")\n","        print(\"Puedes cerrar el navegador manualmente ahora.\")\n","\n","await guardar_sesion_twitter_async()"]},{"cell_type":"markdown","id":"fd34be5a","metadata":{"id":"fd34be5a"},"source":["# üïµÔ∏è L√≥gica de scraping principal"]},{"cell_type":"code","execution_count":null,"id":"1e876611-6acf-4534-9578-3cdcab709fe6","metadata":{"id":"1e876611-6acf-4534-9578-3cdcab709fe6"},"outputs":[],"source":["async def scrape_tweets_con_sesion_async(query, max_tweets=200):\n","    async with async_playwright() as p:\n","        browser = await p.chromium.launch(headless=True)\n","        context = await browser.new_context(storage_state=\"twitter_sesion.json\")\n","        page = await context.new_page()\n","\n","        search_url = f\"https://twitter.com/search?q={query}&src=typed_query&f=live\"\n","        await page.goto(search_url)\n","        print(f\"Buscando: {query}\")\n","\n","        try:\n","            accept_button = await page.wait_for_selector(\n","                'div[role=\"button\"]:has-text(\"Aceptar todas las cookies\")', timeout=5000\n","            )\n","            await accept_button.click()\n","            print(\"Cookies aceptadas.\")\n","        except:\n","            print(\"No aparecieron cookies.\")\n","\n","        await asyncio.sleep(3)\n","\n","        tweets = []\n","        tweets_set = set()\n","        intentos_sin_nuevos = 0\n","\n","        while len(tweets) < max_tweets and intentos_sin_nuevos < 5:\n","            old_count = len(tweets)\n","\n","            await page.keyboard.press(\"PageDown\")\n","            await asyncio.sleep(2)\n","\n","            tweet_containers = await page.query_selector_all('article[data-testid=\"tweet\"]')\n","            for container in tweet_containers:\n","\n","                # Expandir tweet si hay \"Show more\"\n","                try:\n","                    show_more_btn = await container.query_selector('button[data-testid=\"tweet-text-show-more-link\"]')\n","                    if show_more_btn:\n","                        await show_more_btn.click()\n","                        await asyncio.sleep(0.3)\n","                except:\n","                    pass\n","\n","                # Texto del tweet\n","                text_el = await container.query_selector('[data-testid=\"tweetText\"]')\n","                text = await text_el.inner_text() if text_el else None\n","\n","                # Fecha del tweet (convertir UTC -> Madrid)\n","                fecha_local = None\n","                time_el = await container.query_selector('time')\n","                if time_el:\n","                    fecha_str = await time_el.get_attribute('datetime')\n","                    if fecha_str:\n","                        try:\n","                            fecha_utc = datetime.fromisoformat(fecha_str.replace(\"Z\", \"+00:00\"))\n","                            tz_madrid = pytz.timezone(\"Europe/Madrid\")\n","                            fecha_local = fecha_utc.astimezone(tz_madrid).strftime(\"%Y-%m-%d %H:%M:%S\")\n","                        except Exception as e:\n","                            fecha_local = fecha_str\n","\n","                if text and (text, fecha_local) not in tweets_set:\n","                    tweets.append({\n","                        \"tweet\": text,\n","                        \"fecha\": fecha_local\n","                    })\n","                    tweets_set.add((text, fecha_local))\n","\n","            if len(tweets) == old_count:\n","                intentos_sin_nuevos += 1\n","            else:\n","                intentos_sin_nuevos = 0\n","\n","        print(f\"Se extrajeron {len(tweets)} tweets.\")\n","        await browser.close()\n","        return tweets[:max_tweets]"]},{"cell_type":"code","execution_count":null,"id":"895bd4ce-4ba8-4798-b924-f3da98cb4040","metadata":{"id":"895bd4ce-4ba8-4798-b924-f3da98cb4040"},"outputs":[],"source":["import json\n","from datetime import datetime"]},{"cell_type":"code","execution_count":null,"id":"0e8a9131-4e87-4d27-a214-d35b7385f9d9","metadata":{"id":"0e8a9131-4e87-4d27-a214-d35b7385f9d9"},"outputs":[],"source":["ciudades = ['Tenerife', 'Barcelona', 'Madrid', 'Malaga', 'Gran Canaria', 'Seville', 'Valencia', 'Palma de Mallorca']\n","palabras_clave = [\n","    \"turismo\", \"viajar\", \"qu√© hacer\", \"actividades\", \"atracciones\",\n","    \"hoteles\", \"restaurantes\", \"experiencias\", \"vacaciones\", \"monumentos\", \"lugares\"\n","]"]},{"cell_type":"markdown","id":"32377681","metadata":{"id":"32377681"},"source":["# üíæ Guardado de resultados"]},{"cell_type":"code","execution_count":null,"id":"1468cd45-baa6-4ed4-a5b0-fcaaac298808","metadata":{"id":"1468cd45-baa6-4ed4-a5b0-fcaaac298808"},"outputs":[],"source":["  async def recolectar_tweets_por_combinacion():\n","      for ciudad in ciudades:\n","          print(f\"Procesando ciudad: {ciudad}\")\n","          tweets_totales = []\n","\n","          for keyword in palabras_clave:\n","              await asyncio.sleep(3)\n","              query = f\"{ciudad} {keyword}\"\n","              print(f\"Buscando: {query}\")\n","\n","              try:\n","                  tweets = await scrape_tweets_con_sesion_async(query, max_tweets=500)\n","              except Exception as e:\n","                  print(f\"Error con '{query}': {e}\")\n","                  tweets = []\n","\n","              for text in tweets:\n","                  tweets_totales.append({\n","                      \"tweet\": text,\n","                      \"fecha\": \"2025-08-09T14:32:00.000Z\",\n","                      \"ciudad\": ciudad,\n","                      \"keyword\": keyword,\n","                      \"query\": query\n","                  })\n","\n","              print(f\"{len(tweets)} tweets de '{query}'\")\n","\n","          # Guardar en archivo por ciudad\n","          timestamp = datetime.now().strftime(\"%Y%m%d\")\n","          filename = f\"{ciudad.replace(' ', '_')}_tweets_{timestamp}.json\"\n","          with open(filename, \"w\", encoding=\"utf-8\") as f:\n","              json.dump(tweets_totales, f, ensure_ascii=False, indent=2)\n","\n","          print(f\"Guardado {len(tweets_totales)} tweets en {filename}\\n\")"]},{"cell_type":"code","execution_count":null,"id":"bfd0d0d0-6114-4dbd-a828-2eee6bfcec7e","metadata":{"id":"bfd0d0d0-6114-4dbd-a828-2eee6bfcec7e","outputId":"f3a088af-5ed1-4287-8be2-08ecf383f81a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Procesando ciudad: Tenerife\n","Buscando: Tenerife turismo\n","Buscando: Tenerife turismo\n","No aparecieron cookies.\n","Se extrajeron 504 tweets.\n","500 tweets de 'Tenerife turismo'\n","Buscando: Tenerife viajar\n","Buscando: Tenerife viajar\n","No aparecieron cookies.\n","Se extrajeron 473 tweets.\n","473 tweets de 'Tenerife viajar'\n","Buscando: Tenerife qu√© hacer\n","Buscando: Tenerife qu√© hacer\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Tenerife qu√© hacer'\n","Buscando: Tenerife actividades\n","Buscando: Tenerife actividades\n","No aparecieron cookies.\n","Se extrajeron 180 tweets.\n","180 tweets de 'Tenerife actividades'\n","Buscando: Tenerife atracciones\n","Buscando: Tenerife atracciones\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Tenerife atracciones'\n","Buscando: Tenerife hoteles\n","Buscando: Tenerife hoteles\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Tenerife hoteles'\n","Buscando: Tenerife restaurantes\n","Buscando: Tenerife restaurantes\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Tenerife restaurantes'\n","Buscando: Tenerife experiencias\n","Buscando: Tenerife experiencias\n","No aparecieron cookies.\n","Se extrajeron 503 tweets.\n","500 tweets de 'Tenerife experiencias'\n","Buscando: Tenerife vacaciones\n","Buscando: Tenerife vacaciones\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Tenerife vacaciones'\n","Buscando: Tenerife monumentos\n","Buscando: Tenerife monumentos\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Tenerife monumentos'\n","Buscando: Tenerife lugares\n","Buscando: Tenerife lugares\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Tenerife lugares'\n","Guardado 4653 tweets en Tenerife_tweets_20250810.json\n","\n","Procesando ciudad: Barcelona\n","Buscando: Barcelona turismo\n","Buscando: Barcelona turismo\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Barcelona turismo'\n","Buscando: Barcelona viajar\n","Buscando: Barcelona viajar\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Barcelona viajar'\n","Buscando: Barcelona qu√© hacer\n","Buscando: Barcelona qu√© hacer\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Barcelona qu√© hacer'\n","Buscando: Barcelona actividades\n","Buscando: Barcelona actividades\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Barcelona actividades'\n","Buscando: Barcelona atracciones\n","Buscando: Barcelona atracciones\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Barcelona atracciones'\n","Buscando: Barcelona hoteles\n","Buscando: Barcelona hoteles\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Barcelona hoteles'\n","Buscando: Barcelona restaurantes\n","Buscando: Barcelona restaurantes\n","No aparecieron cookies.\n","Se extrajeron 503 tweets.\n","500 tweets de 'Barcelona restaurantes'\n","Buscando: Barcelona experiencias\n","Buscando: Barcelona experiencias\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Barcelona experiencias'\n","Buscando: Barcelona vacaciones\n","Buscando: Barcelona vacaciones\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Barcelona vacaciones'\n","Buscando: Barcelona monumentos\n","Buscando: Barcelona monumentos\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Barcelona monumentos'\n","Buscando: Barcelona lugares\n","Buscando: Barcelona lugares\n","No aparecieron cookies.\n","Se extrajeron 503 tweets.\n","500 tweets de 'Barcelona lugares'\n","Guardado 5500 tweets en Barcelona_tweets_20250810.json\n","\n","Procesando ciudad: Madrid\n","Buscando: Madrid turismo\n","Buscando: Madrid turismo\n","No aparecieron cookies.\n","Se extrajeron 503 tweets.\n","500 tweets de 'Madrid turismo'\n","Buscando: Madrid viajar\n","Buscando: Madrid viajar\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Madrid viajar'\n","Buscando: Madrid qu√© hacer\n","Buscando: Madrid qu√© hacer\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Madrid qu√© hacer'\n","Buscando: Madrid actividades\n","Buscando: Madrid actividades\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Madrid actividades'\n","Buscando: Madrid atracciones\n","Buscando: Madrid atracciones\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Madrid atracciones'\n","Buscando: Madrid hoteles\n","Buscando: Madrid hoteles\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Madrid hoteles'\n","Buscando: Madrid restaurantes\n","Buscando: Madrid restaurantes\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Madrid restaurantes'\n","Buscando: Madrid experiencias\n","Buscando: Madrid experiencias\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Madrid experiencias'\n","Buscando: Madrid vacaciones\n","Buscando: Madrid vacaciones\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Madrid vacaciones'\n","Buscando: Madrid monumentos\n","Buscando: Madrid monumentos\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Madrid monumentos'\n","Buscando: Madrid lugares\n","Buscando: Madrid lugares\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Madrid lugares'\n","Guardado 5500 tweets en Madrid_tweets_20250810.json\n","\n","Procesando ciudad: Malaga\n","Buscando: Malaga turismo\n","Buscando: Malaga turismo\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Malaga turismo'\n","Buscando: Malaga viajar\n","Buscando: Malaga viajar\n","No aparecieron cookies.\n","Se extrajeron 503 tweets.\n","500 tweets de 'Malaga viajar'\n","Buscando: Malaga qu√© hacer\n","Buscando: Malaga qu√© hacer\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Malaga qu√© hacer'\n","Buscando: Malaga actividades\n","Buscando: Malaga actividades\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Malaga actividades'\n","Buscando: Malaga atracciones\n","Buscando: Malaga atracciones\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Malaga atracciones'\n","Buscando: Malaga hoteles\n","Buscando: Malaga hoteles\n","No aparecieron cookies.\n","Se extrajeron 503 tweets.\n","500 tweets de 'Malaga hoteles'\n","Buscando: Malaga restaurantes\n","Buscando: Malaga restaurantes\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Malaga restaurantes'\n","Buscando: Malaga experiencias\n","Buscando: Malaga experiencias\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Malaga experiencias'\n","Buscando: Malaga vacaciones\n","Buscando: Malaga vacaciones\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Malaga vacaciones'\n","Buscando: Malaga monumentos\n","Buscando: Malaga monumentos\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Malaga monumentos'\n","Buscando: Malaga lugares\n","Buscando: Malaga lugares\n","No aparecieron cookies.\n","Se extrajeron 503 tweets.\n","500 tweets de 'Malaga lugares'\n","Guardado 5500 tweets en Malaga_tweets_20250810.json\n","\n","Procesando ciudad: Gran Canaria\n","Buscando: Gran Canaria turismo\n","Buscando: Gran Canaria turismo\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Gran Canaria turismo'\n","Buscando: Gran Canaria viajar\n","Buscando: Gran Canaria viajar\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Gran Canaria viajar'\n","Buscando: Gran Canaria qu√© hacer\n","Buscando: Gran Canaria qu√© hacer\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Gran Canaria qu√© hacer'\n","Buscando: Gran Canaria actividades\n","Buscando: Gran Canaria actividades\n","No aparecieron cookies.\n","Se extrajeron 336 tweets.\n","336 tweets de 'Gran Canaria actividades'\n","Buscando: Gran Canaria atracciones\n","Buscando: Gran Canaria atracciones\n","No aparecieron cookies.\n","Se extrajeron 293 tweets.\n","293 tweets de 'Gran Canaria atracciones'\n","Buscando: Gran Canaria hoteles\n","Buscando: Gran Canaria hoteles\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Gran Canaria hoteles'\n","Buscando: Gran Canaria restaurantes\n","Buscando: Gran Canaria restaurantes\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Gran Canaria restaurantes'\n","Buscando: Gran Canaria experiencias\n","Buscando: Gran Canaria experiencias\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Gran Canaria experiencias'\n","Buscando: Gran Canaria vacaciones\n","Buscando: Gran Canaria vacaciones\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Gran Canaria vacaciones'\n","Buscando: Gran Canaria monumentos\n","Buscando: Gran Canaria monumentos\n","No aparecieron cookies.\n","Se extrajeron 271 tweets.\n","271 tweets de 'Gran Canaria monumentos'\n","Buscando: Gran Canaria lugares\n","Buscando: Gran Canaria lugares\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Gran Canaria lugares'\n","Guardado 4900 tweets en Gran_Canaria_tweets_20250811.json\n","\n","Procesando ciudad: Seville\n","Buscando: Seville turismo\n","Buscando: Seville turismo\n","No aparecieron cookies.\n","Se extrajeron 46 tweets.\n","46 tweets de 'Seville turismo'\n","Buscando: Seville viajar\n","Buscando: Seville viajar\n","No aparecieron cookies.\n","Se extrajeron 38 tweets.\n","38 tweets de 'Seville viajar'\n","Buscando: Seville qu√© hacer\n","Buscando: Seville qu√© hacer\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Seville qu√© hacer'\n","Buscando: Seville actividades\n","Buscando: Seville actividades\n","No aparecieron cookies.\n","Se extrajeron 254 tweets.\n","254 tweets de 'Seville actividades'\n","Buscando: Seville atracciones\n","Buscando: Seville atracciones\n","No aparecieron cookies.\n","Se extrajeron 24 tweets.\n","24 tweets de 'Seville atracciones'\n","Buscando: Seville hoteles\n","Buscando: Seville hoteles\n","No aparecieron cookies.\n","Se extrajeron 502 tweets.\n","500 tweets de 'Seville hoteles'\n","Buscando: Seville restaurantes\n","Buscando: Seville restaurantes\n","No aparecieron cookies.\n","Se extrajeron 198 tweets.\n","198 tweets de 'Seville restaurantes'\n","Buscando: Seville experiencias\n","Buscando: Seville experiencias\n","No aparecieron cookies.\n","Se extrajeron 136 tweets.\n","136 tweets de 'Seville experiencias'\n","Buscando: Seville vacaciones\n","Buscando: Seville vacaciones\n","No aparecieron cookies.\n","Se extrajeron 500 tweets.\n","500 tweets de 'Seville vacaciones'\n","Buscando: Seville monumentos\n","Buscando: Seville monumentos\n","No aparecieron cookies.\n","Se extrajeron 267 tweets.\n","267 tweets de 'Seville monumentos'\n","Buscando: Seville lugares\n","Buscando: Seville lugares\n","No aparecieron cookies.\n","Se extrajeron 417 tweets.\n","417 tweets de 'Seville lugares'\n","Guardado 2880 tweets en Seville_tweets_20250811.json\n","\n","Procesando ciudad: Valencia\n","Buscando: Valencia turismo\n","Buscando: Valencia turismo\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Valencia turismo'\n","Buscando: Valencia viajar\n","Buscando: Valencia viajar\n","No aparecieron cookies.\n","Se extrajeron 501 tweets.\n","500 tweets de 'Valencia viajar'\n","Buscando: Valencia qu√© hacer\n","Buscando: Valencia qu√© hacer\n","No aparecieron cookies.\n","Se extrajeron 207 tweets.\n","207 tweets de 'Valencia qu√© hacer'\n","Buscando: Valencia actividades\n","Buscando: Valencia actividades\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Valencia actividades'\n","Buscando: Valencia atracciones\n","Buscando: Valencia atracciones\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Valencia atracciones'\n","Buscando: Valencia hoteles\n","Buscando: Valencia hoteles\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Valencia hoteles'\n","Buscando: Valencia restaurantes\n","Buscando: Valencia restaurantes\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Valencia restaurantes'\n","Buscando: Valencia experiencias\n","Buscando: Valencia experiencias\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Valencia experiencias'\n","Buscando: Valencia vacaciones\n","Buscando: Valencia vacaciones\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Valencia vacaciones'\n","Buscando: Valencia monumentos\n","Buscando: Valencia monumentos\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Valencia monumentos'\n","Buscando: Valencia lugares\n","Buscando: Valencia lugares\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Valencia lugares'\n","Guardado 1207 tweets en Valencia_tweets_20250811.json\n","\n","Procesando ciudad: Palma de Mallorca\n","Buscando: Palma de Mallorca turismo\n","Buscando: Palma de Mallorca turismo\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca turismo'\n","Buscando: Palma de Mallorca viajar\n","Buscando: Palma de Mallorca viajar\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca viajar'\n","Buscando: Palma de Mallorca qu√© hacer\n","Buscando: Palma de Mallorca qu√© hacer\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca qu√© hacer'\n","Buscando: Palma de Mallorca actividades\n","Buscando: Palma de Mallorca actividades\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca actividades'\n","Buscando: Palma de Mallorca atracciones\n","Buscando: Palma de Mallorca atracciones\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca atracciones'\n","Buscando: Palma de Mallorca hoteles\n","Buscando: Palma de Mallorca hoteles\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca hoteles'\n","Buscando: Palma de Mallorca restaurantes\n","Buscando: Palma de Mallorca restaurantes\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca restaurantes'\n","Buscando: Palma de Mallorca experiencias\n","Buscando: Palma de Mallorca experiencias\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca experiencias'\n","Buscando: Palma de Mallorca vacaciones\n","Buscando: Palma de Mallorca vacaciones\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca vacaciones'\n","Buscando: Palma de Mallorca monumentos\n","Buscando: Palma de Mallorca monumentos\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca monumentos'\n","Buscando: Palma de Mallorca lugares\n","Buscando: Palma de Mallorca lugares\n","No aparecieron cookies.\n","Se extrajeron 0 tweets.\n","0 tweets de 'Palma de Mallorca lugares'\n","Guardado 0 tweets en Palma_de_Mallorca_tweets_20250811.json\n","\n"]}],"source":["await recolectar_tweets_por_combinacion()"]},{"cell_type":"code","execution_count":null,"id":"cd3f079f-dbc8-4e34-a79c-718148ada9ba","metadata":{"id":"cd3f079f-dbc8-4e34-a79c-718148ada9ba"},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python [conda env:base] *","language":"python","name":"conda-base-py"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.7"}},"nbformat":4,"nbformat_minor":5}
{"cells":[{"cell_type":"markdown","id":"d0d1e272","metadata":{"id":"d0d1e272"},"source":["# üå¶Ô∏è AEMET: Descarga clim√°tica diaria\n","\n","Este notebook usa el endpoint de **AEMET OpenData** para descargar datos **diarios** de una **estaci√≥n (idema)** en bloques de ~6 meses, guarda cada bloque como CSV en una carpeta por ciudad, y luego concatena todo en un √∫nico CSV por ciudad.\n","\n","Lo tenemos que hacer de 6 en 6 meses porque es lo maximo que nos deja descargar AEMET."]},{"cell_type":"markdown","id":"c5694a3e","metadata":{"id":"c5694a3e"},"source":["## üß∞ Intalaci√≥n"]},{"cell_type":"code","execution_count":null,"id":"d1ea3ad4-c886-48dc-ba78-a7b42f3ce0c6","metadata":{"id":"d1ea3ad4-c886-48dc-ba78-a7b42f3ce0c6","outputId":"04ae8e8a-032f-43cb-deda-e73df447c4dc"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: requests in /opt/anaconda3/lib/python3.12/site-packages (2.32.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /opt/anaconda3/lib/python3.12/site-packages (from requests) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /opt/anaconda3/lib/python3.12/site-packages (from requests) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/anaconda3/lib/python3.12/site-packages (from requests) (2.5.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /opt/anaconda3/lib/python3.12/site-packages (from requests) (2025.7.14)\n","Note: you may need to restart the kernel to use updated packages.\n"]}],"source":["pip install requests"]},{"cell_type":"markdown","id":"616d20b0","metadata":{"id":"616d20b0"},"source":["## ‚öôÔ∏è Configuraci√≥n\n","\n","- **Rango temporal**: (2017-01-01 a 2025-12-31.\n","- **Chunking**:  **bloques de ~182 d√≠as** (‚âà6 meses) es lo m√°ximo que deja descragar aemet.\n","- **Endpoint**: `valores/climatologicos/diarios/datos/fechaini/{...}/fechafin/{...}/estacion/{idema}`\n"]},{"cell_type":"code","execution_count":null,"id":"4ffa6583","metadata":{"id":"4ffa6583"},"outputs":[],"source":["import os\n","import time\n","import glob\n","import requests\n","import pandas as pd\n","from datetime import datetime, timedelta\n","from typing import List, Dict, Any, Optional\n","\n","# üîê Tu API Key (usa variable de entorno si prefieres)\n","API_KEY = os.getenv(\"AEMET_API_KEY\", \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbGVuYWFlbWhAZ21haWwuY29tIiwianRpIjoiMWMzYThhZWQtNDJiNC00OTdiLThkMmUtNTI4Y2QzYjBkNWY0IiwiaXNzIjoiQUVNRVQiLCJpYXQiOjE3NTc3NjY3NTYsInVzZXJJZCI6IjFjM2E4YWVkLTQyYjQtNDk3Yi04ZDJlLTUyOGNkM2IwZDVmNCIsInJvbGUiOiIifQ.S3EPS2nAdEuJYcIth_amTuXws0Eytr-xwIpwJJAX4Ms\")\n","\n","# üóìÔ∏è Rango global (igual al original)\n","START_DATE = datetime(2017, 1, 1)\n","END_DATE   = datetime(2025, 12, 31)\n","\n","# üèôÔ∏è Orden de ciudades solicitado\n","CITY_ORDER = [\n","    \"Tenerife\", \"Barcelona\", \"Madrid\", \"Malaga\",\n","    \"Gran Canaria\", \"Sevilla\", \"Valencia\", \"Palma de Mallorca\"\n","]\n","\n","# üõ∞Ô∏è Mapeo ciudad ‚ûú idema (c√≥digos de estaci√≥n AEMET)\n","\n","IDEMA_MAP: Dict[str, Optional[str]] = {\n","    \"Madrid\": \"3195\",\n","    \"Sevilla\": \"5783\",\n","    \"Valencia\": \"8416Y\",\n","    \"Barcelona\": \"0201D\",\n","    \"Tenerife\": \"C449C\",\n","    \"Malaga\": \"6156X\",\n","    \"Gran Canaria\": \"C649I\",\n","    \"Palma de Mallorca\": \"B228\",\n","}\n","\n","# üìÇ Carpeta base de salida\n","BASE_DIR = \".\"\n","\n","# üîó Endpoint (mismo patr√≥n que el original)\n","ENDPOINT_FMT = (\n","    \"https://opendata.aemet.es/opendata/api/valores/\"\n","    \"climatologicos/diarios/datos/fechaini/{fechaini}/fechafin/{fechafin}/estacion/{idema}/\"\n","    \"?api_key={API_KEY}\"\n",")\n"]},{"cell_type":"markdown","id":"a2f8efa1","metadata":{"id":"a2f8efa1"},"source":["## üîß Funciones auxiliares"]},{"cell_type":"code","execution_count":null,"id":"12e73a9e","metadata":{"id":"12e73a9e"},"outputs":[],"source":["def get_datos_periodo(idema: str, fecha_ini: datetime, fecha_fin: datetime, reintentos: int = 3):\n","    \"\"\"Descarga JSON diario desde AEMET para [fecha_ini, fecha_fin] en una estaci√≥n (idema).\"\"\"\n","    fechaini = fecha_ini.strftime(\"%Y-%m-%dT00:00:00UTC\")\n","    fechafin = fecha_fin.strftime(\"%Y-%m-%dT23:59:59UTC\")\n","    url = ENDPOINT_FMT.format(fechaini=fechaini, fechafin=fechafin, idema=idema, API_KEY=API_KEY)\n","\n","    for intento in range(reintentos):\n","        try:\n","            # Paso 1: pedir URL temporal\n","            resp = requests.get(url, timeout=30)\n","            resp.raise_for_status()\n","            data = resp.json()\n","            datos_url = data.get(\"datos\")\n","            if not datos_url:\n","                return []\n","\n","            # Paso 2: pedir los datos a la URL temporal\n","            resp2 = requests.get(datos_url, timeout=60)\n","            resp2.raise_for_status()\n","            return resp2.json()\n","        except Exception as e:\n","            print(f\"‚ö†Ô∏è Error {intento+1}/{reintentos} en {fecha_ini.date()}-{fecha_fin.date()}: {e}\")\n","            time.sleep(5)\n","    return []\n","\n","\n","def slugify(name: str) -> str:\n","    s = name.lower()\n","    s = s.replace(\" \", \"_\").replace(\"√°\", \"a\").replace(\"√©\", \"e\").replace(\"√≠\", \"i\").replace(\"√≥\", \"o\").replace(\"√∫\", \"u\").replace(\"√º\", \"u\").replace(\"√±\", \"n\")\n","    s = s.replace(\"-\", \"_\")\n","    return s\n"]},{"cell_type":"markdown","id":"0ebd24dc","metadata":{"id":"0ebd24dc"},"source":["## üï∏Ô∏è Descarga por ciudad (misma mec√°nica del original)\n","\n","- Crea una carpeta `datos_<slug>` por ciudad.\n","- Descarga en bloques de ~182 d√≠as.\n","- Guarda cada bloque como CSV con el nombre `<slug>_<inicio>_<fin>.csv`.\n"]},{"cell_type":"code","execution_count":null,"id":"83bd999a","metadata":{"id":"83bd999a"},"outputs":[],"source":["def descargar_ciudad(ciudad: str, idema: str, start: datetime = START_DATE, end: datetime = END_DATE) -> str:\n","    slug = slugify(ciudad)\n","    carpeta = os.path.join(BASE_DIR, f\"datos_{slug}\")\n","    os.makedirs(carpeta, exist_ok=True)\n","\n","    current = start\n","    while current < end:\n","        next_date = current + timedelta(days=182)  # ~6 meses\n","        if next_date > end:\n","            next_date = end\n","\n","        print(f\"‚è≥ {ciudad}: {current.date()} ‚Üí {next_date.date()}\")\n","        datos = get_datos_periodo(idema, current, next_date)\n","\n","        if datos:\n","            df = pd.DataFrame(datos)\n","            fname = os.path.join(carpeta, f\"{slug}_{current.date()}_{next_date.date()}.csv\")\n","            df.to_csv(fname, index=False)\n","            print(f\"‚úÖ Guardado {fname} ({len(df)} registros)\")\n","        else:\n","            print(f\"‚ùå Sin datos {current.date()} ‚Üí {next_date.date()}\")\n","\n","        current = next_date + timedelta(days=1)\n","\n","    return carpeta\n"]},{"cell_type":"markdown","id":"92f73211","metadata":{"id":"92f73211"},"source":["## üß© Unificaci√≥n de CSVs por ciudad"]},{"cell_type":"code","execution_count":null,"id":"2010e691","metadata":{"id":"2010e691"},"outputs":[],"source":["def unificar_ciudad(ciudad: str) -> Optional[str]:\n","    slug = slugify(ciudad)\n","    carpeta = os.path.join(BASE_DIR, f\"datos_{slug}\")\n","    if not os.path.isdir(carpeta):\n","        print(f\"‚ö†Ô∏è Carpeta no encontrada: {carpeta}\")\n","        return None\n","\n","    archivos = glob.glob(os.path.join(carpeta, \"*.csv\"))\n","    print(f\"üìö {ciudad}: {len(archivos)} archivos CSV encontrados\")\n","    if not archivos:\n","        return None\n","\n","    dfs = []\n","    for path in archivos:\n","        try:\n","            dfs.append(pd.read_csv(path))\n","        except Exception as e:\n","            print(f\"‚ö†Ô∏è Error leyendo {path}: {e}\")\n","\n","    if not dfs:\n","        print(f\"‚ö†Ô∏è No se pudieron leer CSVs para {ciudad}\")\n","        return None\n","\n","    df_final = pd.concat(dfs, ignore_index=True)\n","    out_path = os.path.join(BASE_DIR, f\"datos_{slug}_unificado.csv\")\n","    df_final.to_csv(out_path, index=False, encoding=\"utf-8\")\n","    print(f\"üéâ {ciudad}: unificado ‚Üí {out_path} ({len(df_final)} filas)\")\n","    return out_path\n"]},{"cell_type":"markdown","id":"ced3e3bb","metadata":{"id":"ced3e3bb"},"source":["## ‚ñ∂Ô∏è Ejecutar para las 8 ciudades\n","\n","Se recorre el orden solicitado."]},{"cell_type":"code","execution_count":null,"id":"5f971831","metadata":{"id":"5f971831","outputId":"1b29f891-e712-4b87-b6a3-176d7a964a06"},"outputs":[{"name":"stdout","output_type":"stream","text":["‚è≥ Tenerife: 2017-01-01 ‚Üí 2017-07-02\n","‚úÖ Guardado ./datos_tenerife/tenerife_2017-01-01_2017-07-02.csv (183 registros)\n","‚è≥ Tenerife: 2017-07-03 ‚Üí 2018-01-01\n","‚úÖ Guardado ./datos_tenerife/tenerife_2017-07-03_2018-01-01.csv (183 registros)\n","‚è≥ Tenerife: 2018-01-02 ‚Üí 2018-07-03\n","‚ö†Ô∏è Error 1/3 en 2018-01-02-2018-07-03: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\n","‚ö†Ô∏è Error 2/3 en 2018-01-02-2018-07-03: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\n","‚úÖ Guardado ./datos_tenerife/tenerife_2018-01-02_2018-07-03.csv (183 registros)\n","‚è≥ Tenerife: 2018-07-04 ‚Üí 2019-01-02\n","‚úÖ Guardado ./datos_tenerife/tenerife_2018-07-04_2019-01-02.csv (183 registros)\n","‚è≥ Tenerife: 2019-01-03 ‚Üí 2019-07-04\n","‚úÖ Guardado ./datos_tenerife/tenerife_2019-01-03_2019-07-04.csv (183 registros)\n","‚è≥ Tenerife: 2019-07-05 ‚Üí 2020-01-03\n","‚úÖ Guardado ./datos_tenerife/tenerife_2019-07-05_2020-01-03.csv (183 registros)\n","‚è≥ Tenerife: 2020-01-04 ‚Üí 2020-07-04\n","‚úÖ Guardado ./datos_tenerife/tenerife_2020-01-04_2020-07-04.csv (183 registros)\n","‚è≥ Tenerife: 2020-07-05 ‚Üí 2021-01-03\n","‚úÖ Guardado ./datos_tenerife/tenerife_2020-07-05_2021-01-03.csv (183 registros)\n","‚è≥ Tenerife: 2021-01-04 ‚Üí 2021-07-05\n","‚úÖ Guardado ./datos_tenerife/tenerife_2021-01-04_2021-07-05.csv (183 registros)\n","‚è≥ Tenerife: 2021-07-06 ‚Üí 2022-01-04\n","‚úÖ Guardado ./datos_tenerife/tenerife_2021-07-06_2022-01-04.csv (183 registros)\n","‚è≥ Tenerife: 2022-01-05 ‚Üí 2022-07-06\n","‚úÖ Guardado ./datos_tenerife/tenerife_2022-01-05_2022-07-06.csv (183 registros)\n","‚è≥ Tenerife: 2022-07-07 ‚Üí 2023-01-05\n","‚úÖ Guardado ./datos_tenerife/tenerife_2022-07-07_2023-01-05.csv (183 registros)\n","‚è≥ Tenerife: 2023-01-06 ‚Üí 2023-07-07\n","‚úÖ Guardado ./datos_tenerife/tenerife_2023-01-06_2023-07-07.csv (183 registros)\n","‚è≥ Tenerife: 2023-07-08 ‚Üí 2024-01-06\n","‚ö†Ô∏è Error 1/3 en 2023-07-08-2024-01-06: HTTPSConnectionPool(host='opendata.aemet.es', port=443): Read timed out. (read timeout=30)\n","‚ö†Ô∏è Error 2/3 en 2023-07-08-2024-01-06: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\n","‚ö†Ô∏è Error 3/3 en 2023-07-08-2024-01-06: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\n","‚ùå Sin datos 2023-07-08 ‚Üí 2024-01-06\n","‚è≥ Tenerife: 2024-01-07 ‚Üí 2024-07-07\n","‚úÖ Guardado ./datos_tenerife/tenerife_2024-01-07_2024-07-07.csv (183 registros)\n","‚è≥ Tenerife: 2024-07-08 ‚Üí 2025-01-06\n","‚úÖ Guardado ./datos_tenerife/tenerife_2024-07-08_2025-01-06.csv (183 registros)\n","‚è≥ Tenerife: 2025-01-07 ‚Üí 2025-07-08\n","‚úÖ Guardado ./datos_tenerife/tenerife_2025-01-07_2025-07-08.csv (183 registros)\n","‚è≥ Tenerife: 2025-07-09 ‚Üí 2025-12-31\n","‚úÖ Guardado ./datos_tenerife/tenerife_2025-07-09_2025-12-31.csv (65 registros)\n","üìö Tenerife: 17 archivos CSV encontrados\n","üéâ Tenerife: unificado ‚Üí ./datos_tenerife_unificado.csv (2993 filas)\n","‚è≥ Barcelona: 2017-01-01 ‚Üí 2017-07-02\n","‚úÖ Guardado ./datos_barcelona/barcelona_2017-01-01_2017-07-02.csv (183 registros)\n","‚è≥ Barcelona: 2017-07-03 ‚Üí 2018-01-01\n","‚úÖ Guardado ./datos_barcelona/barcelona_2017-07-03_2018-01-01.csv (183 registros)\n","‚è≥ Barcelona: 2018-01-02 ‚Üí 2018-07-03\n","‚úÖ Guardado ./datos_barcelona/barcelona_2018-01-02_2018-07-03.csv (183 registros)\n","‚è≥ Barcelona: 2018-07-04 ‚Üí 2019-01-02\n","‚úÖ Guardado ./datos_barcelona/barcelona_2018-07-04_2019-01-02.csv (183 registros)\n","‚è≥ Barcelona: 2019-01-03 ‚Üí 2019-07-04\n","‚úÖ Guardado ./datos_barcelona/barcelona_2019-01-03_2019-07-04.csv (183 registros)\n","‚è≥ Barcelona: 2019-07-05 ‚Üí 2020-01-03\n","‚úÖ Guardado ./datos_barcelona/barcelona_2019-07-05_2020-01-03.csv (183 registros)\n","‚è≥ Barcelona: 2020-01-04 ‚Üí 2020-07-04\n","‚úÖ Guardado ./datos_barcelona/barcelona_2020-01-04_2020-07-04.csv (183 registros)\n","‚è≥ Barcelona: 2020-07-05 ‚Üí 2021-01-03\n","‚úÖ Guardado ./datos_barcelona/barcelona_2020-07-05_2021-01-03.csv (183 registros)\n","‚è≥ Barcelona: 2021-01-04 ‚Üí 2021-07-05\n","‚úÖ Guardado ./datos_barcelona/barcelona_2021-01-04_2021-07-05.csv (183 registros)\n","‚è≥ Barcelona: 2021-07-06 ‚Üí 2022-01-04\n","‚úÖ Guardado ./datos_barcelona/barcelona_2021-07-06_2022-01-04.csv (183 registros)\n","‚è≥ Barcelona: 2022-01-05 ‚Üí 2022-07-06\n","‚úÖ Guardado ./datos_barcelona/barcelona_2022-01-05_2022-07-06.csv (177 registros)\n","‚è≥ Barcelona: 2022-07-07 ‚Üí 2023-01-05\n","‚ùå Sin datos 2022-07-07 ‚Üí 2023-01-05\n","‚è≥ Barcelona: 2023-01-06 ‚Üí 2023-07-07\n","‚úÖ Guardado ./datos_barcelona/barcelona_2023-01-06_2023-07-07.csv (63 registros)\n","‚è≥ Barcelona: 2023-07-08 ‚Üí 2024-01-06\n","‚úÖ Guardado ./datos_barcelona/barcelona_2023-07-08_2024-01-06.csv (183 registros)\n","‚è≥ Barcelona: 2024-01-07 ‚Üí 2024-07-07\n","‚úÖ Guardado ./datos_barcelona/barcelona_2024-01-07_2024-07-07.csv (183 registros)\n","‚è≥ Barcelona: 2024-07-08 ‚Üí 2025-01-06\n","‚úÖ Guardado ./datos_barcelona/barcelona_2024-07-08_2025-01-06.csv (183 registros)\n","‚è≥ Barcelona: 2025-01-07 ‚Üí 2025-07-08\n","‚ö†Ô∏è Error 1/3 en 2025-01-07-2025-07-08: HTTPSConnectionPool(host='opendata.aemet.es', port=443): Max retries exceeded with url: /opendata/sh/fa27c59b (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x12d060920>, 'Connection to opendata.aemet.es timed out. (connect timeout=60)'))\n","‚úÖ Guardado ./datos_barcelona/barcelona_2025-01-07_2025-07-08.csv (183 registros)\n","‚è≥ Barcelona: 2025-07-09 ‚Üí 2025-12-31\n","‚úÖ Guardado ./datos_barcelona/barcelona_2025-07-09_2025-12-31.csv (65 registros)\n","üìö Barcelona: 17 archivos CSV encontrados\n","üéâ Barcelona: unificado ‚Üí ./datos_barcelona_unificado.csv (2867 filas)\n","‚è≥ Madrid: 2017-01-01 ‚Üí 2017-07-02\n","‚úÖ Guardado ./datos_madrid/madrid_2017-01-01_2017-07-02.csv (183 registros)\n","‚è≥ Madrid: 2017-07-03 ‚Üí 2018-01-01\n","‚úÖ Guardado ./datos_madrid/madrid_2017-07-03_2018-01-01.csv (183 registros)\n","‚è≥ Madrid: 2018-01-02 ‚Üí 2018-07-03\n","‚úÖ Guardado ./datos_madrid/madrid_2018-01-02_2018-07-03.csv (183 registros)\n","‚è≥ Madrid: 2018-07-04 ‚Üí 2019-01-02\n","‚úÖ Guardado ./datos_madrid/madrid_2018-07-04_2019-01-02.csv (183 registros)\n","‚è≥ Madrid: 2019-01-03 ‚Üí 2019-07-04\n","‚úÖ Guardado ./datos_madrid/madrid_2019-01-03_2019-07-04.csv (183 registros)\n","‚è≥ Madrid: 2019-07-05 ‚Üí 2020-01-03\n","‚úÖ Guardado ./datos_madrid/madrid_2019-07-05_2020-01-03.csv (183 registros)\n","‚è≥ Madrid: 2020-01-04 ‚Üí 2020-07-04\n","‚úÖ Guardado ./datos_madrid/madrid_2020-01-04_2020-07-04.csv (183 registros)\n","‚è≥ Madrid: 2020-07-05 ‚Üí 2021-01-03\n","‚úÖ Guardado ./datos_madrid/madrid_2020-07-05_2021-01-03.csv (183 registros)\n","‚è≥ Madrid: 2021-01-04 ‚Üí 2021-07-05\n","‚úÖ Guardado ./datos_madrid/madrid_2021-01-04_2021-07-05.csv (183 registros)\n","‚è≥ Madrid: 2021-07-06 ‚Üí 2022-01-04\n","‚úÖ Guardado ./datos_madrid/madrid_2021-07-06_2022-01-04.csv (183 registros)\n","‚è≥ Madrid: 2022-01-05 ‚Üí 2022-07-06\n","‚úÖ Guardado ./datos_madrid/madrid_2022-01-05_2022-07-06.csv (182 registros)\n","‚è≥ Madrid: 2022-07-07 ‚Üí 2023-01-05\n","‚úÖ Guardado ./datos_madrid/madrid_2022-07-07_2023-01-05.csv (183 registros)\n","‚è≥ Madrid: 2023-01-06 ‚Üí 2023-07-07\n","‚úÖ Guardado ./datos_madrid/madrid_2023-01-06_2023-07-07.csv (183 registros)\n","‚è≥ Madrid: 2023-07-08 ‚Üí 2024-01-06\n","‚úÖ Guardado ./datos_madrid/madrid_2023-07-08_2024-01-06.csv (183 registros)\n","‚è≥ Madrid: 2024-01-07 ‚Üí 2024-07-07\n","‚úÖ Guardado ./datos_madrid/madrid_2024-01-07_2024-07-07.csv (183 registros)\n","‚è≥ Madrid: 2024-07-08 ‚Üí 2025-01-06\n","‚úÖ Guardado ./datos_madrid/madrid_2024-07-08_2025-01-06.csv (183 registros)\n","‚è≥ Madrid: 2025-01-07 ‚Üí 2025-07-08\n","‚úÖ Guardado ./datos_madrid/madrid_2025-01-07_2025-07-08.csv (183 registros)\n","‚è≥ Madrid: 2025-07-09 ‚Üí 2025-12-31\n","‚úÖ Guardado ./datos_madrid/madrid_2025-07-09_2025-12-31.csv (65 registros)\n","üìö Madrid: 18 archivos CSV encontrados\n","üéâ Madrid: unificado ‚Üí ./datos_madrid_unificado.csv (3175 filas)\n","‚è≥ Malaga: 2017-01-01 ‚Üí 2017-07-02\n","‚úÖ Guardado ./datos_malaga/malaga_2017-01-01_2017-07-02.csv (183 registros)\n","‚è≥ Malaga: 2017-07-03 ‚Üí 2018-01-01\n","‚úÖ Guardado ./datos_malaga/malaga_2017-07-03_2018-01-01.csv (183 registros)\n","‚è≥ Malaga: 2018-01-02 ‚Üí 2018-07-03\n","‚ö†Ô∏è Error 1/3 en 2018-01-02-2018-07-03: 429 Client Error: Too Many Requests for url: https://opendata.aemet.es/opendata/api/valores/climatologicos/diarios/datos/fechaini/2018-01-02T00:00:00UTC/fechafin/2018-07-03T23:59:59UTC/estacion/6156X/?api_key=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbGVuYWFlbWhAZ21haWwuY29tIiwianRpIjoiMWMzYThhZWQtNDJiNC00OTdiLThkMmUtNTI4Y2QzYjBkNWY0IiwiaXNzIjoiQUVNRVQiLCJpYXQiOjE3NTc3NjY3NTYsInVzZXJJZCI6IjFjM2E4YWVkLTQyYjQtNDk3Yi04ZDJlLTUyOGNkM2IwZDVmNCIsInJvbGUiOiIifQ.S3EPS2nAdEuJYcIth_amTuXws0Eytr-xwIpwJJAX4Ms\n","‚ö†Ô∏è Error 2/3 en 2018-01-02-2018-07-03: 429 Client Error: Too Many Requests for url: https://opendata.aemet.es/opendata/api/valores/climatologicos/diarios/datos/fechaini/2018-01-02T00:00:00UTC/fechafin/2018-07-03T23:59:59UTC/estacion/6156X/?api_key=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbGVuYWFlbWhAZ21haWwuY29tIiwianRpIjoiMWMzYThhZWQtNDJiNC00OTdiLThkMmUtNTI4Y2QzYjBkNWY0IiwiaXNzIjoiQUVNRVQiLCJpYXQiOjE3NTc3NjY3NTYsInVzZXJJZCI6IjFjM2E4YWVkLTQyYjQtNDk3Yi04ZDJlLTUyOGNkM2IwZDVmNCIsInJvbGUiOiIifQ.S3EPS2nAdEuJYcIth_amTuXws0Eytr-xwIpwJJAX4Ms\n","‚ö†Ô∏è Error 3/3 en 2018-01-02-2018-07-03: 429 Client Error: Too Many Requests for url: https://opendata.aemet.es/opendata/api/valores/climatologicos/diarios/datos/fechaini/2018-01-02T00:00:00UTC/fechafin/2018-07-03T23:59:59UTC/estacion/6156X/?api_key=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbGVuYWFlbWhAZ21haWwuY29tIiwianRpIjoiMWMzYThhZWQtNDJiNC00OTdiLThkMmUtNTI4Y2QzYjBkNWY0IiwiaXNzIjoiQUVNRVQiLCJpYXQiOjE3NTc3NjY3NTYsInVzZXJJZCI6IjFjM2E4YWVkLTQyYjQtNDk3Yi04ZDJlLTUyOGNkM2IwZDVmNCIsInJvbGUiOiIifQ.S3EPS2nAdEuJYcIth_amTuXws0Eytr-xwIpwJJAX4Ms\n","‚ùå Sin datos 2018-01-02 ‚Üí 2018-07-03\n","‚è≥ Malaga: 2018-07-04 ‚Üí 2019-01-02\n","‚ö†Ô∏è Error 1/3 en 2018-07-04-2019-01-02: HTTPSConnectionPool(host='opendata.aemet.es', port=443): Max retries exceeded with url: /opendata/api/valores/climatologicos/diarios/datos/fechaini/2018-07-04T00:00:00UTC/fechafin/2019-01-02T23:59:59UTC/estacion/6156X/?api_key=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbGVuYWFlbWhAZ21haWwuY29tIiwianRpIjoiMWMzYThhZWQtNDJiNC00OTdiLThkMmUtNTI4Y2QzYjBkNWY0IiwiaXNzIjoiQUVNRVQiLCJpYXQiOjE3NTc3NjY3NTYsInVzZXJJZCI6IjFjM2E4YWVkLTQyYjQtNDk3Yi04ZDJlLTUyOGNkM2IwZDVmNCIsInJvbGUiOiIifQ.S3EPS2nAdEuJYcIth_amTuXws0Eytr-xwIpwJJAX4Ms (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x12d0262a0>, 'Connection to opendata.aemet.es timed out. (connect timeout=30)'))\n","‚úÖ Guardado ./datos_malaga/malaga_2018-07-04_2019-01-02.csv (183 registros)\n","‚è≥ Malaga: 2019-01-03 ‚Üí 2019-07-04\n","‚úÖ Guardado ./datos_malaga/malaga_2019-01-03_2019-07-04.csv (183 registros)\n","‚è≥ Malaga: 2019-07-05 ‚Üí 2020-01-03\n","‚úÖ Guardado ./datos_malaga/malaga_2019-07-05_2020-01-03.csv (183 registros)\n","‚è≥ Malaga: 2020-01-04 ‚Üí 2020-07-04\n","‚úÖ Guardado ./datos_malaga/malaga_2020-01-04_2020-07-04.csv (183 registros)\n","‚è≥ Malaga: 2020-07-05 ‚Üí 2021-01-03\n","‚úÖ Guardado ./datos_malaga/malaga_2020-07-05_2021-01-03.csv (183 registros)\n","‚è≥ Malaga: 2021-01-04 ‚Üí 2021-07-05\n","‚úÖ Guardado ./datos_malaga/malaga_2021-01-04_2021-07-05.csv (183 registros)\n","‚è≥ Malaga: 2021-07-06 ‚Üí 2022-01-04\n","‚úÖ Guardado ./datos_malaga/malaga_2021-07-06_2022-01-04.csv (183 registros)\n","‚è≥ Malaga: 2022-01-05 ‚Üí 2022-07-06\n","‚úÖ Guardado ./datos_malaga/malaga_2022-01-05_2022-07-06.csv (183 registros)\n","‚è≥ Malaga: 2022-07-07 ‚Üí 2023-01-05\n","‚úÖ Guardado ./datos_malaga/malaga_2022-07-07_2023-01-05.csv (183 registros)\n","‚è≥ Malaga: 2023-01-06 ‚Üí 2023-07-07\n","‚úÖ Guardado ./datos_malaga/malaga_2023-01-06_2023-07-07.csv (183 registros)\n","‚è≥ Malaga: 2023-07-08 ‚Üí 2024-01-06\n","‚úÖ Guardado ./datos_malaga/malaga_2023-07-08_2024-01-06.csv (183 registros)\n","‚è≥ Malaga: 2024-01-07 ‚Üí 2024-07-07\n","‚úÖ Guardado ./datos_malaga/malaga_2024-01-07_2024-07-07.csv (183 registros)\n","‚è≥ Malaga: 2024-07-08 ‚Üí 2025-01-06\n","‚úÖ Guardado ./datos_malaga/malaga_2024-07-08_2025-01-06.csv (183 registros)\n","‚è≥ Malaga: 2025-01-07 ‚Üí 2025-07-08\n","‚úÖ Guardado ./datos_malaga/malaga_2025-01-07_2025-07-08.csv (183 registros)\n","‚è≥ Malaga: 2025-07-09 ‚Üí 2025-12-31\n","‚úÖ Guardado ./datos_malaga/malaga_2025-07-09_2025-12-31.csv (65 registros)\n","üìö Malaga: 17 archivos CSV encontrados\n","üéâ Malaga: unificado ‚Üí ./datos_malaga_unificado.csv (2993 filas)\n","‚è≥ Gran Canaria: 2017-01-01 ‚Üí 2017-07-02\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2017-01-01_2017-07-02.csv (183 registros)\n","‚è≥ Gran Canaria: 2017-07-03 ‚Üí 2018-01-01\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2017-07-03_2018-01-01.csv (183 registros)\n","‚è≥ Gran Canaria: 2018-01-02 ‚Üí 2018-07-03\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2018-01-02_2018-07-03.csv (183 registros)\n","‚è≥ Gran Canaria: 2018-07-04 ‚Üí 2019-01-02\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2018-07-04_2019-01-02.csv (183 registros)\n","‚è≥ Gran Canaria: 2019-01-03 ‚Üí 2019-07-04\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2019-01-03_2019-07-04.csv (183 registros)\n","‚è≥ Gran Canaria: 2019-07-05 ‚Üí 2020-01-03\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2019-07-05_2020-01-03.csv (183 registros)\n","‚è≥ Gran Canaria: 2020-01-04 ‚Üí 2020-07-04\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2020-01-04_2020-07-04.csv (183 registros)\n","‚è≥ Gran Canaria: 2020-07-05 ‚Üí 2021-01-03\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2020-07-05_2021-01-03.csv (183 registros)\n","‚è≥ Gran Canaria: 2021-01-04 ‚Üí 2021-07-05\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2021-01-04_2021-07-05.csv (183 registros)\n","‚è≥ Gran Canaria: 2021-07-06 ‚Üí 2022-01-04\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2021-07-06_2022-01-04.csv (183 registros)\n","‚è≥ Gran Canaria: 2022-01-05 ‚Üí 2022-07-06\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2022-01-05_2022-07-06.csv (183 registros)\n","‚è≥ Gran Canaria: 2022-07-07 ‚Üí 2023-01-05\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2022-07-07_2023-01-05.csv (183 registros)\n","‚è≥ Gran Canaria: 2023-01-06 ‚Üí 2023-07-07\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2023-01-06_2023-07-07.csv (183 registros)\n","‚è≥ Gran Canaria: 2023-07-08 ‚Üí 2024-01-06\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2023-07-08_2024-01-06.csv (183 registros)\n","‚è≥ Gran Canaria: 2024-01-07 ‚Üí 2024-07-07\n","‚ö†Ô∏è Error 1/3 en 2024-01-07-2024-07-07: HTTPSConnectionPool(host='opendata.aemet.es', port=443): Read timed out.\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2024-01-07_2024-07-07.csv (183 registros)\n","‚è≥ Gran Canaria: 2024-07-08 ‚Üí 2025-01-06\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2024-07-08_2025-01-06.csv (183 registros)\n","‚è≥ Gran Canaria: 2025-01-07 ‚Üí 2025-07-08\n","‚ö†Ô∏è Error 1/3 en 2025-01-07-2025-07-08: HTTPSConnectionPool(host='opendata.aemet.es', port=443): Read timed out. (read timeout=30)\n","‚ö†Ô∏è Error 2/3 en 2025-01-07-2025-07-08: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\n","‚ö†Ô∏è Error 3/3 en 2025-01-07-2025-07-08: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\n","‚ùå Sin datos 2025-01-07 ‚Üí 2025-07-08\n","‚è≥ Gran Canaria: 2025-07-09 ‚Üí 2025-12-31\n","‚ö†Ô∏è Error 1/3 en 2025-07-09-2025-12-31: 500 Server Error: Internal Server Error for url: https://opendata.aemet.es/opendata/api/valores/climatologicos/diarios/datos/fechaini/2025-07-09T00:00:00UTC/fechafin/2025-12-31T23:59:59UTC/estacion/C649I/?api_key=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbGVuYWFlbWhAZ21haWwuY29tIiwianRpIjoiMWMzYThhZWQtNDJiNC00OTdiLThkMmUtNTI4Y2QzYjBkNWY0IiwiaXNzIjoiQUVNRVQiLCJpYXQiOjE3NTc3NjY3NTYsInVzZXJJZCI6IjFjM2E4YWVkLTQyYjQtNDk3Yi04ZDJlLTUyOGNkM2IwZDVmNCIsInJvbGUiOiIifQ.S3EPS2nAdEuJYcIth_amTuXws0Eytr-xwIpwJJAX4Ms\n","‚úÖ Guardado ./datos_gran_canaria/gran_canaria_2025-07-09_2025-12-31.csv (65 registros)\n","üìö Gran Canaria: 17 archivos CSV encontrados\n","üéâ Gran Canaria: unificado ‚Üí ./datos_gran_canaria_unificado.csv (2993 filas)\n","‚è≥ Seville: 2017-01-01 ‚Üí 2017-07-02\n","‚úÖ Guardado ./datos_seville/seville_2017-01-01_2017-07-02.csv (183 registros)\n","‚è≥ Seville: 2017-07-03 ‚Üí 2018-01-01\n","‚úÖ Guardado ./datos_seville/seville_2017-07-03_2018-01-01.csv (183 registros)\n","‚è≥ Seville: 2018-01-02 ‚Üí 2018-07-03\n","‚úÖ Guardado ./datos_seville/seville_2018-01-02_2018-07-03.csv (183 registros)\n","‚è≥ Seville: 2018-07-04 ‚Üí 2019-01-02\n","‚úÖ Guardado ./datos_seville/seville_2018-07-04_2019-01-02.csv (183 registros)\n","‚è≥ Seville: 2019-01-03 ‚Üí 2019-07-04\n","‚úÖ Guardado ./datos_seville/seville_2019-01-03_2019-07-04.csv (183 registros)\n","‚è≥ Seville: 2019-07-05 ‚Üí 2020-01-03\n","‚úÖ Guardado ./datos_seville/seville_2019-07-05_2020-01-03.csv (183 registros)\n","‚è≥ Seville: 2020-01-04 ‚Üí 2020-07-04\n","‚úÖ Guardado ./datos_seville/seville_2020-01-04_2020-07-04.csv (183 registros)\n","‚è≥ Seville: 2020-07-05 ‚Üí 2021-01-03\n","‚úÖ Guardado ./datos_seville/seville_2020-07-05_2021-01-03.csv (183 registros)\n","‚è≥ Seville: 2021-01-04 ‚Üí 2021-07-05\n","‚úÖ Guardado ./datos_seville/seville_2021-01-04_2021-07-05.csv (183 registros)\n","‚è≥ Seville: 2021-07-06 ‚Üí 2022-01-04\n","‚úÖ Guardado ./datos_seville/seville_2021-07-06_2022-01-04.csv (183 registros)\n","‚è≥ Seville: 2022-01-05 ‚Üí 2022-07-06\n","‚úÖ Guardado ./datos_seville/seville_2022-01-05_2022-07-06.csv (183 registros)\n","‚è≥ Seville: 2022-07-07 ‚Üí 2023-01-05\n","‚úÖ Guardado ./datos_seville/seville_2022-07-07_2023-01-05.csv (183 registros)\n","‚è≥ Seville: 2023-01-06 ‚Üí 2023-07-07\n","‚úÖ Guardado ./datos_seville/seville_2023-01-06_2023-07-07.csv (183 registros)\n","‚è≥ Seville: 2023-07-08 ‚Üí 2024-01-06\n","‚úÖ Guardado ./datos_seville/seville_2023-07-08_2024-01-06.csv (183 registros)\n","‚è≥ Seville: 2024-01-07 ‚Üí 2024-07-07\n","‚úÖ Guardado ./datos_seville/seville_2024-01-07_2024-07-07.csv (183 registros)\n","‚è≥ Seville: 2024-07-08 ‚Üí 2025-01-06\n","‚úÖ Guardado ./datos_seville/seville_2024-07-08_2025-01-06.csv (183 registros)\n","‚è≥ Seville: 2025-01-07 ‚Üí 2025-07-08\n","‚úÖ Guardado ./datos_seville/seville_2025-01-07_2025-07-08.csv (183 registros)\n","‚è≥ Seville: 2025-07-09 ‚Üí 2025-12-31\n","‚úÖ Guardado ./datos_seville/seville_2025-07-09_2025-12-31.csv (65 registros)\n","üìö Seville: 18 archivos CSV encontrados\n","üéâ Seville: unificado ‚Üí ./datos_seville_unificado.csv (3176 filas)\n","‚è≥ Valencia: 2017-01-01 ‚Üí 2017-07-02\n","‚úÖ Guardado ./datos_valencia/valencia_2017-01-01_2017-07-02.csv (183 registros)\n","‚è≥ Valencia: 2017-07-03 ‚Üí 2018-01-01\n"]}],"source":["def run_all_cities(city_order = CITY_ORDER, idema_map = IDEMA_MAP):\n","    resultados = []\n","    for city in city_order:\n","        idema = idema_map.get(city)\n","        if not idema:\n","            print(f\"üõà Sin idema para '{city}'. A√±√°delo en IDEMA_MAP y vuelve a ejecutar.\")\n","            resultados.append((city, None, None))\n","            continue\n","\n","        try:\n","            carpeta = descargar_ciudad(city, idema)\n","            unificado = unificar_ciudad(city)\n","            resultados.append((city, carpeta, unificado))\n","        except Exception as e:\n","            print(f\"‚ùå Error con {city}: {e}\")\n","            resultados.append((city, None, None))\n","    return resultados\n","\n","\n","run_all_cities()\n"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.7"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}
{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ILTkFCq8TVHe"
      },
      "source": [
        "#  üì• Scraping de Booking"
      ],
      "id": "ILTkFCq8TVHe"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Wth_Bwl5TVHg"
      },
      "source": [
        "## üß∞ Librer√≠as e importaciones"
      ],
      "id": "Wth_Bwl5TVHg"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "907655f9-c100-4616-9eb9-c22c56478d72",
      "metadata": {
        "id": "907655f9-c100-4616-9eb9-c22c56478d72"
      },
      "outputs": [],
      "source": [
        "from selenium import webdriver\n",
        "from selenium.webdriver.chrome.service import Service"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5d721158-dbe0-4244-b018-3c8dd6e7962a",
      "metadata": {
        "id": "5d721158-dbe0-4244-b018-3c8dd6e7962a"
      },
      "outputs": [],
      "source": [
        "from selenium.webdriver.support.ui import WebDriverWait\n",
        "from selenium.webdriver.support import expected_conditions as EC\n",
        "from selenium.webdriver.common.by import By\n",
        "from selenium.common.exceptions import TimeoutException"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "65caf5b3-ac70-4efa-9a43-7e020383f8bb",
      "metadata": {
        "id": "65caf5b3-ac70-4efa-9a43-7e020383f8bb"
      },
      "outputs": [],
      "source": [
        "from selenium.common.exceptions import NoSuchElementException\n",
        "import csv"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5ffade60-2d71-425a-b6b9-336a4559b47b",
      "metadata": {
        "id": "5ffade60-2d71-425a-b6b9-336a4559b47b"
      },
      "outputs": [],
      "source": [
        "import time"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ac1c179e-8497-49dc-a254-562c45f07b13",
      "metadata": {
        "id": "ac1c179e-8497-49dc-a254-562c45f07b13"
      },
      "outputs": [],
      "source": [
        "import re"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0f58c629-096b-48e8-a421-07f0d3399ff1",
      "metadata": {
        "id": "0f58c629-096b-48e8-a421-07f0d3399ff1"
      },
      "outputs": [],
      "source": [
        "from selenium.common.exceptions import ElementClickInterceptedException"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CND7mf3gTVHk"
      },
      "source": [
        "## üîß Funciones auxiliares"
      ],
      "id": "CND7mf3gTVHk"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "887b9613-a9fe-438e-bcb4-a27ba6952c84",
      "metadata": {
        "id": "887b9613-a9fe-438e-bcb4-a27ba6952c84"
      },
      "outputs": [],
      "source": [
        "def handle_no_such_element_exception(data_extraction_task):\n",
        "    try:\n",
        "        return data_extraction_task()\n",
        "    except NoSuchElementException as e:\n",
        "        return None"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1df437f5-ec0a-4465-9a8f-226598f574b4",
      "metadata": {
        "id": "1df437f5-ec0a-4465-9a8f-226598f574b4"
      },
      "outputs": [],
      "source": [
        "from selenium.webdriver.common.action_chains import ActionChains"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9bfe1e10-d2b9-4f70-b4fb-4c3fb8127b27",
      "metadata": {
        "id": "9bfe1e10-d2b9-4f70-b4fb-4c3fb8127b27"
      },
      "source": [
        "def auto_scroll(driver, pause_time=2, max_scrolls=10):\n",
        "    last_height = driver.execute_script(\"return document.body.scrollHeight\")\n",
        "\n",
        "    for i in range(max_scrolls):\n",
        "        time.sleep(0.3)\n",
        "        print(f\"Haciendo scroll {i+1}/{max_scrolls}...\")\n",
        "        driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n",
        "        time.sleep(pause_time)\n",
        "\n",
        "        new_height = driver.execute_script(\"return document.body.scrollHeight\")\n",
        "        if new_height == last_height:\n",
        "            print(\"No se carg√≥ m√°s contenido.\")\n",
        "            break\n",
        "        last_height = new_height"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b528e70b-3e6f-47c4-95d7-b164a285e4d3",
      "metadata": {
        "id": "b528e70b-3e6f-47c4-95d7-b164a285e4d3"
      },
      "source": [
        "def paginar_todas(driver, delay=3, max_pages=20):\n",
        "    from selenium.common.exceptions import ElementClickInterceptedException\n",
        "    page = 1\n",
        "    while page <= max_pages:\n",
        "        try:\n",
        "            next_button = WebDriverWait(driver, 10).until(\n",
        "                EC.element_to_be_clickable((By.XPATH, '//button[.//span[text()=\"Ver m√°s\"]]'))\n",
        "            )\n",
        "            print(f\"Haciendo clic en p√°gina {page}\")\n",
        "            next_button.click()\n",
        "            time.sleep(delay)\n",
        "            page += 1\n",
        "        except:\n",
        "            print(\"No hay m√°s p√°ginas o no se pudo hacer clic.\")\n",
        "            break"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7dc4922e-215c-4233-b077-4afacf2d4ab5",
      "metadata": {
        "id": "7dc4922e-215c-4233-b077-4afacf2d4ab5"
      },
      "outputs": [],
      "source": [
        "def scroll_and_click_all(driver, max_cycles=30, delay=3, max_scrolls=10, pause_time=2):\n",
        "    last_height = driver.execute_script(\"return document.body.scrollHeight\")\n",
        "    page = 1\n",
        "\n",
        "    for cycle in range(max_cycles):\n",
        "        print(f\"‚Üí Ciclo {cycle + 1}/{max_cycles} de scroll + clic\")\n",
        "\n",
        "        # Scroll al fondo varias veces\n",
        "        for i in range(max_scrolls):\n",
        "            driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n",
        "            time.sleep(pause_time)\n",
        "            new_height = driver.execute_script(\"return document.body.scrollHeight\")\n",
        "            if new_height == last_height:\n",
        "                print(\"üìâ No se carg√≥ m√°s contenido al hacer scroll.\")\n",
        "                break\n",
        "            last_height = new_height\n",
        "\n",
        "        try:\n",
        "            # Asegurarse de que el bot√≥n \"Ver m√°s\" est√© presente y visible\n",
        "            next_button = WebDriverWait(driver, 10).until(\n",
        "                EC.presence_of_element_located((By.XPATH, '//button[.//span[text()=\"Ver m√°s\"]]'))\n",
        "            )\n",
        "\n",
        "            # Moverse al bot√≥n para que est√© en vista\n",
        "            try:\n",
        "                driver.execute_script(\"arguments[0].scrollIntoView({block: 'center'});\", next_button)\n",
        "                time.sleep(1)\n",
        "                print(\"Intentando hacer clic en 'Ver m√°s'...\")\n",
        "\n",
        "                WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH, '//button[.//span[text()=\"Ver m√°s\"]]')))\n",
        "                next_button.click()\n",
        "                print(f\"‚úÖ Clic exitoso en p√°gina {page}\")\n",
        "                page += 1\n",
        "                time.sleep(delay)\n",
        "\n",
        "            except ElementClickInterceptedException:\n",
        "                print(\"‚ö†Ô∏è ElementClickInterceptedException: Intentando con JavaScript...\")\n",
        "                driver.execute_script(\"arguments[0].click();\", next_button)\n",
        "                time.sleep(delay)\n",
        "                page += 1\n",
        "\n",
        "        except TimeoutException:\n",
        "            print(\"‚õî Timeout: No se encontr√≥ el bot√≥n 'Ver m√°s'. Probablemente ya no hay m√°s.\")\n",
        "            break\n",
        "        except NoSuchElementException:\n",
        "            print(\"‚õî NoSuchElementException: No hay m√°s bot√≥n 'Ver m√°s'\")\n",
        "            break"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VltDVDpxTVHm"
      },
      "source": [
        "## üöó Driver y utilidades de navegaci√≥n"
      ],
      "id": "VltDVDpxTVHm"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7604b992-e1df-48a1-9608-29eeac590164",
      "metadata": {
        "id": "7604b992-e1df-48a1-9608-29eeac590164"
      },
      "outputs": [],
      "source": [
        "def close_all_known_popups(driver):\n",
        "    popups_closed = 0\n",
        "    try:\n",
        "        # Popup de inicio de sesi√≥n\n",
        "        close_button = driver.find_element(By.CSS_SELECTOR, '[role=\"dialog\"] button[aria-label=\"Dismiss sign-in info.\"]')\n",
        "        close_button.click()\n",
        "        print(\"Popup de inicio de sesi√≥n cerrado.\")\n",
        "        popups_closed += 1\n",
        "    except:\n",
        "        pass\n",
        "\n",
        "    try:\n",
        "        # Popup de \"Instala nuestra app\"\n",
        "        app_popup = driver.find_element(By.CSS_SELECTOR, 'button[aria-label=\"Cerrar ventana emergente\"]')\n",
        "        app_popup.click()\n",
        "        print(\"Popup de app cerrado.\")\n",
        "        popups_closed += 1\n",
        "    except:\n",
        "        pass\n",
        "\n",
        "    try:\n",
        "        # Otro tipo gen√©rico de modal (ajustable seg√∫n el sitio)\n",
        "        generic_popup = driver.find_element(By.CSS_SELECTOR, '.modal-mask button')\n",
        "        generic_popup.click()\n",
        "        print(\"Popup gen√©rico cerrado.\")\n",
        "        popups_closed += 1\n",
        "    except:\n",
        "        pass\n",
        "\n",
        "    if popups_closed == 0:\n",
        "        print(\"No se detectaron popups.\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oztdPrsPTVHn"
      },
      "source": [
        "## üï∑Ô∏è Scraper de una ciudad y exportaci√≥n CSV"
      ],
      "id": "oztdPrsPTVHn"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "527790ba-5baa-4d02-9cea-376d3662c312",
      "metadata": {
        "id": "527790ba-5baa-4d02-9cea-376d3662c312",
        "outputId": "4ce25ffa-8d1c-4428-874e-de58f67c9c86"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "No se detectaron popups.\n",
            "Cookies aceptadas.\n",
            "Sign-in modal did not appear, continuing...\n",
            "‚Üí Ciclo 1/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 1\n",
            "‚Üí Ciclo 2/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 2\n",
            "‚Üí Ciclo 3/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 3\n",
            "‚Üí Ciclo 4/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 4\n",
            "‚Üí Ciclo 5/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 5\n",
            "‚Üí Ciclo 6/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 6\n",
            "‚Üí Ciclo 7/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 7\n",
            "‚Üí Ciclo 8/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 8\n",
            "‚Üí Ciclo 9/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 9\n",
            "‚Üí Ciclo 10/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 10\n",
            "‚Üí Ciclo 11/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 11\n",
            "‚Üí Ciclo 12/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 12\n",
            "‚Üí Ciclo 13/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 13\n",
            "‚Üí Ciclo 14/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 14\n",
            "‚Üí Ciclo 15/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 15\n",
            "‚Üí Ciclo 16/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 16\n",
            "‚Üí Ciclo 17/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 17\n",
            "‚Üí Ciclo 18/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 18\n",
            "‚Üí Ciclo 19/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 19\n",
            "‚Üí Ciclo 20/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 20\n",
            "‚Üí Ciclo 21/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 21\n",
            "‚Üí Ciclo 22/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 22\n",
            "‚Üí Ciclo 23/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 23\n",
            "‚Üí Ciclo 24/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 24\n",
            "‚Üí Ciclo 25/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 25\n",
            "‚Üí Ciclo 26/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 26\n",
            "‚Üí Ciclo 27/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 27\n",
            "‚Üí Ciclo 28/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 28\n",
            "‚Üí Ciclo 29/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 29\n",
            "‚Üí Ciclo 30/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 30\n",
            "‚Üí Ciclo 31/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 31\n",
            "‚Üí Ciclo 32/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 32\n",
            "‚Üí Ciclo 33/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 33\n",
            "‚Üí Ciclo 34/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 34\n",
            "‚Üí Ciclo 35/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 35\n",
            "‚Üí Ciclo 36/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 36\n",
            "‚Üí Ciclo 37/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 37\n",
            "‚Üí Ciclo 38/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 38\n",
            "‚Üí Ciclo 39/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 39\n",
            "‚Üí Ciclo 40/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 40\n",
            "‚Üí Ciclo 41/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 41\n",
            "‚Üí Ciclo 42/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 42\n",
            "‚Üí Ciclo 43/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 43\n",
            "‚Üí Ciclo 44/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 44\n",
            "‚Üí Ciclo 45/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 45\n",
            "‚Üí Ciclo 46/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 46\n",
            "‚Üí Ciclo 47/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 47\n",
            "‚Üí Ciclo 48/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 48\n",
            "‚Üí Ciclo 49/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 49\n",
            "‚Üí Ciclo 50/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 50\n",
            "‚Üí Ciclo 51/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 51\n",
            "‚Üí Ciclo 52/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 52\n",
            "‚Üí Ciclo 53/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 53\n",
            "‚Üí Ciclo 54/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 54\n",
            "‚Üí Ciclo 55/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 55\n",
            "‚Üí Ciclo 56/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 56\n",
            "‚Üí Ciclo 57/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 57\n",
            "‚Üí Ciclo 58/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 58\n",
            "‚Üí Ciclo 59/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 59\n",
            "‚Üí Ciclo 60/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 60\n",
            "‚Üí Ciclo 61/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "Intentando hacer clic en 'Ver m√°s'...\n",
            "‚úÖ Clic exitoso en p√°gina 61\n",
            "‚Üí Ciclo 62/70 de scroll + clic\n",
            "üìâ No se carg√≥ m√°s contenido al hacer scroll.\n",
            "‚õî Timeout: No se encontr√≥ el bot√≥n 'Ver m√°s'. Probablemente ya no hay m√°s.\n",
            "No se detectaron popups.\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 3\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 4\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 5\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 6\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 7\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 8\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 9\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 10\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 11\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 12\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 13\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 14\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 15\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 16\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 17\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 18\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 19\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 20\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 21\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 22\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 23\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 24\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 25\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 26\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 27\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 28\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 29\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 30\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 31\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 32\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 33\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 34\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 35\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 36\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 37\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 38\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 39\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 40\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 41\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 42\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 43\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 44\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 45\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 46\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 47\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 48\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 49\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 50\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 51\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 52\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 53\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 54\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 55\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 56\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 57\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 58\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 59\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 60\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 61\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 62\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 63\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 64\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 65\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 66\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 67\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 68\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 69\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 70\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 71\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 72\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 73\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 74\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 75\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 76\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 77\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 78\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 79\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 80\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 81\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 82\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 83\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 84\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 85\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 86\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 87\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 88\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 89\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 90\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 91\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 92\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 93\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 94\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 95\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 96\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 97\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 98\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 99\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 100\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 101\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 102\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 103\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 104\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 105\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 106\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 107\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 108\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 109\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 110\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 111\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 112\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 113\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 114\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 115\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 116\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 117\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 118\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 119\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 120\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 121\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 122\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 123\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 124\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 125\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 126\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 127\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 128\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 129\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 130\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 131\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 132\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 133\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 134\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 135\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 136\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 137\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 138\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 139\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 140\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 141\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 142\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 143\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 144\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 145\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 146\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 147\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 148\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 149\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 150\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 151\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 152\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 153\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 154\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 155\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 156\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 157\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 158\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 159\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 160\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 161\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 162\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 163\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 164\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 165\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 166\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 167\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 168\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 169\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 170\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 171\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 172\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 173\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 174\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 175\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 176\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 177\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 178\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 179\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 180\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 181\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 182\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 183\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 184\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 185\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 186\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 187\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 188\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 189\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 190\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 191\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 192\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 193\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 194\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 195\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 196\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 197\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 198\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 199\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 200\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 201\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 202\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 203\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 204\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 205\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 206\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 207\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 208\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 209\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 210\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 211\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 212\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 213\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 214\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 215\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 216\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 217\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 218\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 219\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 220\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 221\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 222\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 223\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 224\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 225\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 226\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 227\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 228\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 229\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 230\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 231\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 232\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 233\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 234\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 235\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 236\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 237\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 238\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 239\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 240\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 241\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 242\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 243\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 244\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 245\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 246\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 247\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 248\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 249\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 250\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 251\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 252\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 253\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 254\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 255\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 256\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 257\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 258\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 259\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 260\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 261\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 262\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 263\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 264\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 265\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 266\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 267\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 268\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 269\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 270\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 271\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 272\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 273\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 274\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 275\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 276\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 277\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 278\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 279\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 280\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 281\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 282\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 283\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 284\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 285\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 286\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 287\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 288\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 289\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 290\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 291\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 292\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 293\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 294\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 295\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 296\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 297\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 298\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 299\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 300\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 301\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 302\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 303\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 304\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 305\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 306\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 307\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 308\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 309\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 310\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 311\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 312\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 313\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 314\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 315\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 316\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 317\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 318\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 319\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 320\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 321\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 322\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 323\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 324\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 325\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 326\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 327\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 328\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 329\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 330\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 331\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 332\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 333\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 334\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 335\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 336\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 337\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 338\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 339\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 340\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 341\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 342\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 343\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 344\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 345\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 346\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 347\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 348\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 349\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 350\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 351\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 352\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 353\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 354\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 355\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 356\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 357\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 358\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 359\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 360\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 361\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 362\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 363\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 364\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 365\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 366\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 367\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 368\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 369\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 370\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 371\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 372\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 373\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 374\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 375\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 376\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 377\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 378\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 379\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 380\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 381\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 382\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 383\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 384\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 385\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 386\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 387\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 388\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 389\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 390\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 391\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 392\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 393\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 394\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 395\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 396\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 397\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 398\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 399\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 400\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 401\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 402\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 403\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 404\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 405\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 406\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 407\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 408\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 409\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 410\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 411\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 412\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 413\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 414\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 415\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 416\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 417\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 418\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 419\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 420\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 421\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 422\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 423\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 424\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 425\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 426\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 427\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 428\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 429\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 430\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 431\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 432\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 433\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 434\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 435\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 436\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 437\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 438\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 439\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 440\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 441\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 442\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 443\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 444\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 445\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 446\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 447\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 448\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 449\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 450\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 451\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 452\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 453\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 454\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 455\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 456\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 457\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 458\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 459\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 460\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 461\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 462\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 463\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 464\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 465\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 466\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 467\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 468\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 469\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 470\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 471\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 472\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 473\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 474\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 475\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 476\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 477\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 478\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 479\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 480\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 481\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 482\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 483\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 484\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 485\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 486\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 487\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 488\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 489\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 490\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 491\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 492\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 493\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 494\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 495\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 496\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 497\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 498\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 499\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 500\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 501\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 502\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 503\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 504\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 505\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 506\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 507\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 508\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 509\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 510\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 511\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 512\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 513\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 514\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 515\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 516\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 517\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 518\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 519\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 520\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 521\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 522\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 523\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 524\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 525\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 526\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 527\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 528\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 529\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 530\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 531\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 532\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 533\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 534\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 535\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 536\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 537\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 538\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 539\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 540\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 541\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 542\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 543\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 544\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 545\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 546\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 547\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 548\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 549\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 550\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 551\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 552\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 553\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 554\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 555\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 556\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 557\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 558\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 559\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 560\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 561\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 562\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 563\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 564\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 565\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 566\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 567\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 568\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 569\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 570\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 571\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 572\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 573\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 574\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 575\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 576\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 577\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 578\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 579\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 580\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 581\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 582\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 583\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 584\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 585\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 586\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 587\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 588\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 589\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 590\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 591\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 592\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 593\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 594\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 595\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 596\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 597\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 598\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 599\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 600\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 601\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 602\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 603\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 604\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 605\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 606\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 607\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 608\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 609\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 610\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 611\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 612\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 613\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 614\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 615\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 616\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 617\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 618\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 619\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 620\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 621\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 622\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 623\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 624\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 625\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 626\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 627\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 628\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 629\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 630\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 631\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 632\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 633\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 634\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 635\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 636\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 637\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 638\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 639\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 640\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 641\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 642\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 643\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 644\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 645\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 646\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 647\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 648\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 649\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 650\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 651\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 652\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 653\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 654\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 655\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 656\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 657\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 658\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 659\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 660\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 661\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 662\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 663\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 664\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 665\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 666\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 667\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 668\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 669\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 670\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 671\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 672\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 673\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 674\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 675\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 676\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 677\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 678\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 679\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 680\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 681\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 682\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 683\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 684\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 685\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 686\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 687\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 688\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 689\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 690\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 691\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 692\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 693\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 694\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 695\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 696\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 697\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 698\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 699\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 700\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 701\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 702\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 703\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 704\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 705\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 706\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 707\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 708\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 709\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 710\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 711\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 712\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 713\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 714\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 715\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 716\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 717\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 718\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 719\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 720\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 721\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 722\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 723\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 724\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 725\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 726\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 727\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 728\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 729\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 730\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 731\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 732\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 733\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 734\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 735\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 736\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 737\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 738\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 739\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 740\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 741\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 742\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 743\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 744\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 745\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 746\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 747\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 748\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 749\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 750\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 751\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 752\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 753\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 754\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 755\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 756\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 757\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 758\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 759\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 760\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 761\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 762\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 763\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 764\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 765\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 766\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 767\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 768\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 769\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 770\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 771\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 772\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 773\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 774\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 775\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 776\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 777\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 778\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 779\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 780\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 781\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 782\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 783\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 784\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 785\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 786\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 787\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 788\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 789\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 790\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 791\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 792\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 793\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 794\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 795\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 796\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 797\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 798\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 799\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 800\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 801\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 802\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 803\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 804\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 805\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 806\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 807\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 808\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 809\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 810\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 811\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 812\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 813\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 814\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 815\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 816\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 817\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 818\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 819\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 820\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 821\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 822\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 823\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 824\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 825\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 826\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 827\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 828\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 829\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 830\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 831\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 832\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 833\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 834\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 835\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 836\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 837\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 838\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 839\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 840\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 841\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 842\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 843\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 844\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 845\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 846\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 847\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 848\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 849\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 850\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 851\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 852\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 853\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 854\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 855\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 856\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 857\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 858\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 859\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 860\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 861\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 862\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 863\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 864\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 865\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 866\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 867\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 868\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 869\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 870\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 871\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 872\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 873\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 874\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 875\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 876\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 877\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 878\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 879\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 880\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 881\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 882\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 883\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 884\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 885\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 886\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 887\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 888\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 889\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 890\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 891\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 892\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 893\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 894\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 895\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 896\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 897\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 898\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 899\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 900\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 901\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 902\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 903\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 904\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 905\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 906\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 907\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 908\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 909\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 910\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 911\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 912\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 913\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 914\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 915\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 916\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 917\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 918\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 919\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 920\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 921\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 922\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 923\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 924\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 925\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 926\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 927\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 928\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 929\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 930\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 931\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 932\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 933\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 934\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 935\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 936\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 937\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 938\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 939\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 940\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 941\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 942\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 943\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 944\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 945\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 946\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 947\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 948\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 949\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 950\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 951\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 952\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 953\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 954\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 955\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 956\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 957\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 958\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 959\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 960\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 961\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 962\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 963\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 964\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 965\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 966\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 967\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 968\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 969\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 970\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 971\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 972\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 973\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 974\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 975\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 976\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 977\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 978\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 979\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 980\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 981\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 982\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 983\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 984\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 985\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 986\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 987\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 988\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 989\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 990\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 991\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 992\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 993\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 994\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 995\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 996\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 997\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 998\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 999\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1000\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1001\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1002\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1003\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1004\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1005\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1006\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1007\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1008\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1009\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1010\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1011\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1012\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1013\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1014\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1015\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1016\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1017\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1018\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1019\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1020\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1021\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1022\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1023\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1024\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1025\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1026\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1027\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1028\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1029\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1030\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1031\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1032\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1033\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1034\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1035\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1036\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1037\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1038\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1039\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1040\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1041\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1042\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1043\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1044\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1045\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1046\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1047\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1048\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1049\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1050\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1051\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1052\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1053\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1054\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1055\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1056\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1057\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1058\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1059\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1060\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1061\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1062\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1063\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1064\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1065\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1066\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1067\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1068\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1069\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1070\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1071\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1072\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1073\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1074\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1075\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1076\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1077\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1078\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1079\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1080\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1081\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1082\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1083\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1084\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1085\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1086\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1087\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1088\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1089\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1090\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1091\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1092\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1093\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1094\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1095\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1096\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1097\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1098\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1099\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1100\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1101\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1102\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1103\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1104\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1105\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1106\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1107\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1108\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1109\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1110\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1111\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1112\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1113\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1114\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1115\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1116\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1117\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1118\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1119\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1120\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1121\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1122\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1123\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1124\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1125\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1126\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1127\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1128\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1129\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1130\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1131\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1132\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1133\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1134\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1135\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1136\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1137\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1138\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1139\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1140\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1141\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1142\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1143\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1144\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1145\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1146\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1147\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1148\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1149\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1150\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1151\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1152\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1153\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1154\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1155\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1156\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1157\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1158\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1159\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1160\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1161\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1162\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1163\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1164\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1165\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1166\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1167\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1168\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1169\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1170\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1171\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1172\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1173\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1174\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1175\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1176\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1177\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1178\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1179\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1180\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1181\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1182\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1183\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1184\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1185\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1186\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1187\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1188\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1189\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1190\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1191\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1192\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1193\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1194\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1195\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1196\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1197\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1198\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1199\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1200\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1201\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1202\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1203\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1204\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1205\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1206\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1207\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1208\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1209\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1210\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1211\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1212\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1213\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1214\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1215\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1216\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1217\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1218\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1219\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1220\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1221\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1222\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1223\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1224\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1225\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1226\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1227\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1228\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1229\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1230\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1231\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1232\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1233\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1234\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1235\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1236\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1237\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1238\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1239\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1240\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1241\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1242\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1243\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1244\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1245\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1246\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1247\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1248\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1249\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1250\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1251\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1252\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1253\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1254\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1255\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1256\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1257\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1258\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1259\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1260\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1261\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1262\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1263\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1264\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1265\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1266\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1267\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1268\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1269\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1270\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1271\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1272\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1273\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1274\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1275\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1276\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1277\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1278\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1279\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1280\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1281\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1282\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1283\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1284\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1285\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1286\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1287\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1288\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1289\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1290\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1291\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1292\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1293\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1294\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1295\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1296\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1297\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1298\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1299\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1300\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1301\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1302\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1303\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1304\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1305\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1306\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1307\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1308\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1309\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1310\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1311\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1312\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1313\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1314\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1315\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1316\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1317\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1318\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1319\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1320\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1321\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1322\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1323\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1324\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1325\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1326\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1327\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1328\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1329\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1330\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1331\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1332\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1333\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1334\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1335\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1336\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1337\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1338\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1339\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1340\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1341\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1342\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1343\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1344\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1345\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1346\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1347\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1348\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1349\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1350\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1351\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1352\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1353\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1354\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1355\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1356\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1357\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1358\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1359\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1360\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1361\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1362\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1363\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1364\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1365\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1366\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1367\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1368\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1369\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1370\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1371\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1372\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1373\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1374\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1375\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1376\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1377\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1378\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1379\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1380\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1381\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1382\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1383\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1384\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1385\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1386\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1387\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1388\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1389\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1390\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1391\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1392\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1393\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1394\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1395\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1396\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1397\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1398\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1399\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1400\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1401\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1402\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1403\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1404\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1405\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1406\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1407\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1408\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1409\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1410\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1411\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1412\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1413\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1414\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1415\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1416\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1417\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1418\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1419\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1420\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1421\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1422\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1423\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1424\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1425\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1426\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1427\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1428\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1429\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1430\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1431\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1432\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1433\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1434\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1435\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1436\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1437\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1438\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1439\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1440\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1441\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1442\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1443\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1444\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1445\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1446\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1447\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1448\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1449\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1450\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1451\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1452\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1453\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1454\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1455\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1456\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1457\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1458\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1459\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1460\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1461\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1462\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1463\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1464\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1465\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1466\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1467\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1468\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1469\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1470\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1471\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1472\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1473\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1474\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1475\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1476\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1477\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1478\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1479\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1480\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1481\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1482\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1483\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1484\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1485\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1486\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1487\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1488\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1489\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1490\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1491\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1492\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1493\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1494\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1495\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1496\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1497\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1498\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1499\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1500\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1501\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1502\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1503\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1504\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1505\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1506\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1507\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1508\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1509\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1510\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1511\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1512\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1513\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1514\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1515\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1516\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1517\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1518\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1519\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1520\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1521\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1522\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1523\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1524\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1525\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1526\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1527\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1528\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1529\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1530\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1531\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1532\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1533\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1534\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1535\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1536\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1537\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1538\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1539\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1540\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1541\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1542\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1543\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1544\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1545\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1546\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1547\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1548\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1549\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1550\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1551\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1552\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1553\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1554\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1555\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1556\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1557\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1558\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1559\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1560\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1561\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1562\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1563\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1564\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1565\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1566\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1567\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1568\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1569\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1570\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1571\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1572\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1573\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1574\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1575\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1576\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1577\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1578\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1579\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1580\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1581\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1582\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1583\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1584\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1585\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1586\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1587\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1588\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1589\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1590\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1591\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1592\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1593\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1594\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1595\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1596\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1597\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1598\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1599\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1600\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1601\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1602\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1603\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1604\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1605\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1606\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1607\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1608\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1609\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1610\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1611\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1612\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1613\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1614\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1615\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1616\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1617\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1618\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1619\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1620\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1621\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1622\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1623\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1624\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1625\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1626\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1627\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1628\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1629\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1630\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1631\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1632\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1633\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1634\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1635\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1636\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1637\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1638\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1639\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1640\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1641\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1642\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1643\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1644\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1645\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1646\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1647\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1648\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1649\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1650\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1651\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1652\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1653\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1654\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1655\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1656\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1657\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1658\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1659\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1660\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1661\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1662\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1663\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1664\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1665\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1666\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1667\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1668\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1669\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1670\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1671\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1672\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1673\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1674\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1675\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1676\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1677\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1678\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1679\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1680\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1681\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1682\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1683\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1684\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1685\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1686\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1687\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1688\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1689\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1690\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1691\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1692\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1693\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1694\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1695\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1696\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1697\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1698\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1699\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1700\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1701\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1702\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1703\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1704\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1705\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1706\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1707\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1708\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1709\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1710\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1711\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1712\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1713\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1714\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1715\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1716\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1717\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1718\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1719\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1720\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1721\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1722\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1723\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1724\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1725\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1726\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1727\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1728\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1729\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1730\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1731\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1732\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1733\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1734\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1735\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1736\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1737\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1738\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1739\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1740\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1741\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1742\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1743\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1744\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1745\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1746\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1747\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1748\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1749\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1750\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1751\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1752\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1753\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1754\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1755\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1756\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1757\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1758\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1759\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1760\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1761\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1762\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1763\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1764\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1765\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1766\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1767\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1768\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1769\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1770\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1771\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1772\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1773\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1774\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1775\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1776\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1777\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1778\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1779\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1780\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1781\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1782\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1783\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1784\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1785\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1786\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1787\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1788\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1789\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1790\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1791\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1792\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1793\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1794\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1795\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1796\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1797\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1798\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1799\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1800\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1801\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1802\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1803\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1804\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1805\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1806\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1807\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1808\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1809\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1810\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1811\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1812\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1813\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1814\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1815\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1816\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1817\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1818\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1819\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1820\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1821\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1822\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1823\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1824\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1825\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1826\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1827\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1828\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1829\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1830\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1831\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1832\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1833\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1834\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1835\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1836\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1837\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1838\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1839\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1840\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1841\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1842\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1843\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1844\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1845\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1846\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1847\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1848\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1849\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1850\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1851\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1852\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1853\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1854\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1855\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1856\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1857\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1858\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1859\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1860\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1861\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1862\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1863\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1864\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1865\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1866\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1867\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1868\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1869\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1870\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1871\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1872\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1873\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1874\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1875\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1876\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1877\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1878\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1879\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1880\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1881\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1882\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1883\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1884\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1885\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1886\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1887\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1888\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1889\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1890\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1891\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1892\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1893\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1894\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1895\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1896\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1897\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1898\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1899\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1900\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1901\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1902\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1903\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1904\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1905\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1906\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1907\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1908\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1909\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1910\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1911\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1912\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1913\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1914\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1915\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1916\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1917\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1918\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1919\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1920\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1921\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1922\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1923\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1924\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1925\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1926\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1927\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1928\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1929\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1930\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1931\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1932\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1933\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1934\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1935\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1936\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1937\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1938\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1939\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1940\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1941\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1942\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1943\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1944\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1945\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1946\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1947\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1948\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1949\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1950\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1951\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1952\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1953\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1954\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1955\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1956\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1957\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1958\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1959\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1960\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1961\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1962\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1963\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1964\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1965\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1966\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1967\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1968\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1969\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1970\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1971\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1972\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1973\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1974\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1975\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1976\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1977\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1978\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1979\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1980\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1981\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1982\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1983\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1984\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1985\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1986\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1987\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1988\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1989\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1990\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1991\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1992\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1993\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1994\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1995\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1996\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1997\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1998\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 1999\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2000\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2001\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2002\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2003\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2004\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2005\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2006\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2007\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2008\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2009\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2010\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2011\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2012\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2013\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2014\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2015\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2016\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2017\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2018\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2019\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2020\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2021\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2022\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2023\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2024\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2025\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2026\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2027\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2028\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2029\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2030\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2031\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2032\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2033\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2034\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2035\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2036\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2037\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2038\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2039\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2040\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2041\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2042\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2043\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2044\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2045\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2046\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2047\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2048\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2049\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2050\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2051\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2052\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2053\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2054\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2055\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2056\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2057\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2058\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2059\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2060\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2061\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2062\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2063\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2064\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2065\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2066\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2067\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2068\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2069\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2070\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2071\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2072\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2073\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2074\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2075\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2076\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2077\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2078\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2079\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2080\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2081\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2082\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2083\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2084\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2085\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2086\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2087\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2088\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2089\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2090\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2091\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2092\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2093\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2094\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2095\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2096\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2097\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2098\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2099\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2100\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2101\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2102\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2103\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2104\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2105\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2106\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2107\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2108\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2109\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2110\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2111\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2112\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2113\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2114\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2115\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2116\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2117\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2118\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2119\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2120\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2121\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2122\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2123\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2124\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2125\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2126\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2127\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2128\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2129\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2130\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2131\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2132\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2133\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2134\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2135\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2136\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2137\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2138\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2139\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2140\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2141\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2142\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2143\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2144\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2145\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2146\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2147\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2148\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2149\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2150\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2151\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2152\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2153\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2154\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2155\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2156\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2157\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2158\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2159\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2160\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2161\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2162\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2163\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2164\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2165\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2166\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2167\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2168\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2169\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2170\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2171\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2172\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2173\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2174\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2175\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2176\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2177\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2178\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2179\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2180\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2181\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2182\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2183\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2184\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2185\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2186\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2187\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2188\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2189\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2190\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2191\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2192\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2193\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2194\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2195\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2196\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2197\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2198\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2199\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2200\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2201\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2202\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2203\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2204\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2205\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2206\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2207\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2208\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2209\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2210\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2211\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2212\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2213\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2214\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2215\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2216\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2217\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2218\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2219\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2220\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2221\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2222\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2223\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2224\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2225\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2226\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2227\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2228\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2229\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2230\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2231\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2232\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2233\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2234\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2235\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2236\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2237\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2238\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2239\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2240\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2241\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2242\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2243\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2244\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2245\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2246\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2247\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2248\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2249\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2250\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2251\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2252\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2253\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2254\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2255\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2256\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2257\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2258\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2259\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2260\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2261\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2262\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2263\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2264\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2265\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2266\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2267\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2268\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2269\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2270\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2271\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2272\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2273\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2274\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2275\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2276\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2277\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2278\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2279\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2280\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2281\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2282\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2283\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2284\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2285\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2286\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2287\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2288\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2289\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2290\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2291\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2292\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2293\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2294\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2295\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2296\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2297\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2298\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2299\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2300\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2301\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2302\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2303\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2304\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2305\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2306\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2307\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2308\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2309\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2310\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2311\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2312\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2313\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2314\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2315\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2316\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2317\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2318\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2319\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2320\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2321\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2322\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2323\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2324\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2325\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2326\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2327\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2328\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2329\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2330\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2331\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2332\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2333\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2334\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2335\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2336\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2337\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2338\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2339\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2340\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2341\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2342\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2343\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2344\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2345\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2346\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2347\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2348\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2349\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2350\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2351\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2352\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2353\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2354\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2355\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2356\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2357\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2358\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2359\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2360\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2361\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2362\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2363\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2364\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2365\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2366\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2367\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2368\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2369\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2370\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2371\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2372\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2373\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2374\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2375\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2376\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2377\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2378\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2379\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2380\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2381\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2382\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2383\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2384\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2385\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2386\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2387\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2388\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2389\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2390\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2391\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2392\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2393\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2394\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2395\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2396\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2397\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2398\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2399\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2400\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2401\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2402\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2403\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2404\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2405\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2406\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2407\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2408\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2409\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2410\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2411\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2412\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2413\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2414\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2415\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2416\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2417\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2418\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2419\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2420\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2421\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2422\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2423\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2424\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2425\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2426\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2427\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2428\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2429\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2430\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2431\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2432\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2433\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2434\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2435\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2436\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2437\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2438\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2439\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2440\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2441\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2442\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2443\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2444\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2445\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2446\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2447\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2448\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2449\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2450\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2451\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2452\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2453\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2454\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2455\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2456\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2457\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2458\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2459\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2460\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2461\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2462\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2463\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2464\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2465\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2466\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2467\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2468\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2469\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2470\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2471\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2472\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2473\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2474\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2475\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2476\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2477\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2478\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2479\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2480\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2481\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2482\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2483\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2484\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2485\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2486\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2487\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2488\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2489\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2490\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2491\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2492\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2493\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2494\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2495\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2496\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2497\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2498\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2499\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2500\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2501\n",
            "No se detectaron popups.\n",
            "Se hizo el cuadro numero 2502\n"
          ]
        }
      ],
      "source": [
        "driver = webdriver.Chrome(service=Service())\n",
        "\n",
        "driver.get(\"https://www.booking.com/attractions/searchresults/es/barcelona.es.html?adplat=www-index-web_shell_header-attraction-missing_creative-1zwEmyAV9Sm0av9pzjIUKp&label=gen173nr-1BCAEoggI46AdIM1gEaEaIAQGYAQq4ARfIAQzYAQHoAQGIAgGoAgO4AuSv-sMGwAIB0gIkMzQzOWUzMjItNGVmMC00NmVjLTg0NTAtMWVlMGI1OWMzMzU02AIF4AIB&distribution_id=1zwEmyAV9Sm0av9pzjIUKp&aid=304142&client_name=b-web-shell-bff&source=search_box&start_date=2025-07-21&end_date=2026-01-16\")\n",
        "close_all_known_popups(driver)\n",
        "# Aceptar cookies si aparece el banner\n",
        "try:\n",
        "    accept_cookies_btn = WebDriverWait(driver, 10).until(\n",
        "        EC.element_to_be_clickable((By.ID, \"onetrust-accept-btn-handler\"))\n",
        "    )\n",
        "    accept_cookies_btn.click()\n",
        "    print(\"Cookies aceptadas.\")\n",
        "except:\n",
        "    print(\"No apareci√≥ el banner de cookies.\")\n",
        "\n",
        "# handle the sign-in alert\n",
        "try:\n",
        "    # wait up to 20 seconds for the sign-in alert to appear\n",
        "    close_button = WebDriverWait(driver, 20).until(\n",
        "        EC.presence_of_element_located((By.CSS_SELECTOR, '[role=\"dialog\"] button[aria-label=\"Dismiss sign-in info.\"]'))\n",
        "    )\n",
        "    # click the close button\n",
        "    close_button.click()\n",
        "except:\n",
        "    print(\"Sign-in modal did not appear, continuing...\")\n",
        "\n",
        "scroll_and_click_all(driver, max_cycles=70, delay = 5, max_scrolls= 30)\n",
        "close_all_known_popups(driver)\n",
        "# where to store the scraped data\n",
        "items = []\n",
        "\n",
        "# select all property items on the page\n",
        "property_items = driver.find_elements(By.CSS_SELECTOR, '[data-testid=\"card\"]')\n",
        "\n",
        "# iterate over the property items and\n",
        "# extract data from them\n",
        "i = 0\n",
        "\n",
        "for idx, property_item in enumerate(property_items):\n",
        "    close_all_known_popups(driver)\n",
        "    # Scroll hacia la tarjeta individual para asegurarse de que cargue\n",
        "    try:\n",
        "        ActionChains(driver).move_to_element(property_item).perform()\n",
        "        time.sleep(1.5)\n",
        "    except:\n",
        "        print(\"No se pudo hacer scroll a la tarjeta.\")\n",
        "\n",
        "    # Esperar expl√≠citamente a que haya imagen u otro contenido\n",
        "\n",
        "    url = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR, 'a').get_attribute(\"href\"))\n",
        "\n",
        "\n",
        "    title = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR, '[data-testid=\"card-title\"]').text)\n",
        "\n",
        "\n",
        "    spans = property_item.find_elements(By.CSS_SELECTOR, 'span[aria-hidden=\"true\"]')\n",
        "    review_score = None\n",
        "    review_count = None\n",
        "\n",
        "    for span in spans:\n",
        "        text = span.text.strip()\n",
        "        if not text:\n",
        "            continue\n",
        "\n",
        "        # Si es un n√∫mero como 4,6 o 4.7 (review score)\n",
        "        if text.replace(\",\", \"\").replace(\".\", \"\").isdigit() and \",\" in text:\n",
        "            review_score = float(text.replace(\",\", \".\"))\n",
        "\n",
        "        # Si contiene la palabra \"comentarios\"\n",
        "        elif \"comentarios\" in text.lower():\n",
        "            try:\n",
        "                review_count = int(text.split()[0].replace(\".\", \"\").replace(\",\", \"\"))\n",
        "            except:\n",
        "                continue\n",
        "    price_text = handle_no_such_element_exception(\n",
        "    lambda: property_item.find_element(By.CSS_SELECTOR, '[data-testid=\"price\"]').text\n",
        "    )\n",
        "    # if not price_text:\n",
        "    #     divs = property_item.find_elements(By.TAG_NAME, 'div')\n",
        "    #     for div in divs:\n",
        "    #         text = div.text.strip()\n",
        "    #         if \"‚Ç¨\" in text:\n",
        "    #             price_text = text\n",
        "    #             break\n",
        "    # if price_text:\n",
        "    #     price = float(price_text.replace(\"‚Ç¨\", \"\").replace(\",\", \".\").strip())\n",
        "    # else:\n",
        "    #     price = None\n",
        "\n",
        "    # print(price)\n",
        "    i = i+1\n",
        "    print(f\"Se hizo el cuadro numero {i}\")\n",
        "    # populate a new item with the scraped data\n",
        "    item = {\n",
        "      \"url\": url,\n",
        "      \"title\": title,\n",
        "      \"review_score\": review_score,\n",
        "      \"review_count\": review_count,\n",
        "      \"price\": price_text\n",
        "    }\n",
        "    # add the new item to the list of scraped items\n",
        "    items.append(item)\n",
        "\n",
        "# specify the name of the output CSV file\n",
        "output_file = \"atracciones_barcelona2.csv\"\n",
        "\n",
        "# export the items list to a CSV file\n",
        "with open(output_file, mode=\"w\", newline=\"\", encoding=\"utf-8\") as file:\n",
        "    #create a CSV writer object\n",
        "    writer = csv.DictWriter(file, fieldnames=[\"url\",  \"title\", \"review_score\", \"review_count\", \"price\"])\n",
        "\n",
        "    # write the header row\n",
        "    writer.writeheader()\n",
        "\n",
        "    # write each item as a row in the CSV\n",
        "    writer.writerows(items)\n",
        "\n",
        "# close the web driver and release its resources\n",
        "driver.quit()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "86645f26-4cdd-4f08-8c10-34f14ba7259e",
      "metadata": {
        "id": "86645f26-4cdd-4f08-8c10-34f14ba7259e"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.7"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3c798e64",
   "metadata": {},
   "source": [
    "\n",
    "# üß© Booking Hoteles \n",
    "**Nota:** Scrapping Hoteles\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a912fc6",
   "metadata": {},
   "source": [
    "## üß∞ Librer√≠as e importaciones"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "49e11f1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from selenium import webdriver\n",
    "from selenium.webdriver.chrome.service import Service\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.common.exceptions import TimeoutException, NoSuchElementException\n",
    "import csv\n",
    "import time"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc2a01e3",
   "metadata": {},
   "source": [
    "## üîß Helpers (funciones auxiliares)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "53d94252",
   "metadata": {},
   "outputs": [],
   "source": [
    "def handle_no_such_element_exception(task):\n",
    "    try:\n",
    "        return task()\n",
    "    except NoSuchElementException:\n",
    "        return None\n",
    "\n",
    "def click_boton_cargar_mas(driver, delay=3, max_clicks=50):\n",
    "    clicks = 0\n",
    "    while clicks < max_clicks:\n",
    "        try:\n",
    "            # Nuevo selector: busca el texto dentro del span anidado\n",
    "            boton = WebDriverWait(driver, 5).until(\n",
    "                EC.element_to_be_clickable((By.XPATH, '//button[.//span[contains(text(), \"Cargar m√°s resultados\")]]'))\n",
    "            )\n",
    "            driver.execute_script(\"arguments[0].scrollIntoView(true);\", boton)\n",
    "            time.sleep(1)\n",
    "            driver.execute_script(\"arguments[0].click();\", boton)\n",
    "            clicks += 1\n",
    "            print(f\"‚úÖ Click n√∫mero {clicks} en 'Cargar m√°s resultados'\")\n",
    "            time.sleep(delay)\n",
    "        except TimeoutException:\n",
    "            print(\"‚ÑπÔ∏è No hay m√°s bot√≥n 'Cargar m√°s resultados'\")\n",
    "            break"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e04b174",
   "metadata": {},
   "source": [
    "## üåê Configuraci√≥n del navegador y apertura de la URL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5efa5e13",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Configuraci√≥n del navegador\n",
    "driver = webdriver.Chrome(service=Service())\n",
    "\n",
    "# Ir a la p√°gina\n",
    "driver.get(\"https://www.booking.com/searchresults.es.html?ss=Barcelona&ssne=Barcelona&ssne_untouched=Barcelona&efdco=1&label=barcelona-nQ97YskHCKS590hgJqwasQS341843104301%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-16185403852%3Alp1005493%3Ali%3Adec%3Adm%3Appccp%3DUmFuZG9tSVYkc2RlIyh9YfpWGnRw6lOGdE15X_QAcTg&aid=1610682&lang=es&sb=1&src_elem=sb&src=searchresults&dest_id=-372490&dest_type=city&checkin=2026-01-14&checkout=2026-01-15&group_adults=1&no_rooms=1&group_children=0\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ac30ff2",
   "metadata": {},
   "source": [
    "## üç™ UX: aceptar cookies y cerrar modal de inicio de sesi√≥n (si aparece)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b5c012b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Aceptar cookies\n",
    "try:\n",
    "    WebDriverWait(driver, 5).until(\n",
    "        EC.element_to_be_clickable((By.ID, \"onetrust-accept-btn-handler\"))\n",
    "    ).click()\n",
    "except:\n",
    "    print(\"No apareci√≥ el banner de cookies.\")\n",
    "\n",
    "# Cerrar modal de inicio de sesi√≥n si aparece\n",
    "try:\n",
    "    WebDriverWait(driver, 5).until(\n",
    "        EC.element_to_be_clickable((By.CSS_SELECTOR, '[aria-label=\"Dismiss sign-in info.\"]'))\n",
    "    ).click()\n",
    "except:\n",
    "    print(\"No apareci√≥ el modal de inicio de sesi√≥n.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a5effc6",
   "metadata": {},
   "source": [
    "## ‚¨áÔ∏èüìú Preparaci√≥n: scroll inicial y expansi√≥n de resultados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91759c0f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Scroll inicial para que cargue el bot√≥n\n",
    "driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n",
    "time.sleep(3)\n",
    "\n",
    "# Clicks en el bot√≥n para cargar m√°s resultados\n",
    "click_boton_cargar_mas(driver, delay=3, max_clicks=50)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c63be9bf",
   "metadata": {},
   "source": [
    "## üîé Scraping de tarjetas de hotel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "879c59c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Scraping\n",
    "items = []\n",
    "property_items = driver.find_elements(By.CSS_SELECTOR, '[data-testid=\"property-card\"]')\n",
    "print(f\"N√∫mero de hoteles encontrados: {len(property_items)}\")\n",
    "\n",
    "for property_item in property_items:\n",
    "    url = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR, 'a[data-testid=\"title-link\"]').get_attribute(\"href\"))\n",
    "    image = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR, 'img[data-testid=\"image\"]').get_attribute(\"src\"))\n",
    "    title = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR, 'a[data-testid=\"title-link\"]').text)\n",
    "    address = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR, '[data-testid=\"address\"]').text)\n",
    "    distance = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR, '[data-testid=\"distance\"]').text)\n",
    "\n",
    "    review_score = None\n",
    "    review_count = None\n",
    "    review_element = handle_no_such_element_exception(\n",
    "        lambda: property_item.find_element(By.CSS_SELECTOR, '[data-testid=\"review-score-link\"]')\n",
    "    )\n",
    "    if review_element:\n",
    "        review_text = review_element.text.strip()\n",
    "        parts = review_text.split('\\\\n')\n",
    "        for part in parts:\n",
    "            try:\n",
    "                score = float(part.replace(\",\", \".\"))\n",
    "                if 0 <= score <= 10:\n",
    "                    review_score = score\n",
    "            except:\n",
    "                pass\n",
    "            if \"comentarios\" in part or \"reviews\" in part:\n",
    "                digits = ''.join([c for c in part if c.isdigit()])\n",
    "                if digits:\n",
    "                    review_count = int(digits)\n",
    "\n",
    "    description = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR, '[data-testid=\"recommended-units\"]').text)\n",
    "\n",
    "    original_price = None\n",
    "    price = None\n",
    "    price_element = handle_no_such_element_exception(lambda: property_item.find_element(By.CSS_SELECTOR,' [data-testid=\"availability-rate-information\"]'))\n",
    "    if price_element:\n",
    "        original_price = handle_no_such_element_exception(lambda: (\n",
    "            price_element.find_element(By.CSS_SELECTOR, '[aria-hidden=\"true\"]:not([data-testid])').text.replace(\",\", \"\")\n",
    "        ))\n",
    "        price = handle_no_such_element_exception(lambda: (\n",
    "            price_element.find_element(By.CSS_SELECTOR, '[data-testid=\"price-and-discounted-price\"]').text.replace(\",\", \"\")\n",
    "        ))\n",
    "\n",
    "    item = {\n",
    "      \"url\": url,\n",
    "      \"image\": image,\n",
    "      \"title\": title,\n",
    "      \"address\": address,\n",
    "      \"distance\": distance,\n",
    "      \"review_score\": review_score,\n",
    "      \"review_count\": review_count,\n",
    "      \"description\": description,\n",
    "      \"original_price\": original_price,\n",
    "      \"price\": price\n",
    "    }\n",
    "    items.append(item)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b27a35b4",
   "metadata": {},
   "source": [
    "## üíæ Guardar resultados en CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea28d053",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Guardar en CSV\n",
    "if items:  # solo si hay datos\n",
    "    with open(\"hoteles_barcelona_enero.csv\", mode=\"w\", newline=\"\", encoding=\"utf-8\") as file:\n",
    "        writer = csv.DictWriter(file, fieldnames=items[0].keys())\n",
    "        writer.writeheader()\n",
    "        writer.writerows(items)\n",
    "    print(f\" CSV guardado con {len(items)} hoteles\")\n",
    "else:\n",
    "    print(\"‚ùå No se encontraron hoteles, CSV no creado\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0079af64",
   "metadata": {},
   "source": [
    "## 8) Cerrar navegador"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d633e8b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Cerrar navegador\n",
    "driver.quit()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

{"cells":[{"cell_type":"markdown","source":["##üìå SCRAPING BOOKING ATRACCIONES\n","Este notebook combina datos de m√∫ltiples archivos CSV de Booking para obtener URLs de atracciones tur√≠sticas. Luego, utiliza Selenium para visitar cada URL, extraer las rese√±as de los usuarios (incluyendo score, texto, pa√≠s, categor√≠a y fecha) y guarda todos los comentarios recopilados en un nuevo archivo CSV."],"metadata":{"id":"Mvbr4NNm-PFu"},"id":"Mvbr4NNm-PFu"},{"cell_type":"markdown","id":"ff1e86b1","metadata":{"id":"ff1e86b1"},"source":["# üì• Imports y librer√≠as"]},{"cell_type":"code","execution_count":null,"id":"865bbc28-432c-4676-8d67-2cd52ad6a84a","metadata":{"id":"865bbc28-432c-4676-8d67-2cd52ad6a84a"},"outputs":[],"source":["import pandas as pd\n","from selenium import webdriver\n","from selenium.webdriver.chrome.service import Service\n","from selenium.webdriver.common.by import By\n","from selenium.webdriver.chrome.options import Options\n","from selenium.webdriver.common.action_chains import ActionChains\n","from selenium.webdriver.common.keys import Keys\n","from selenium.common.exceptions import NoSuchElementException, TimeoutException, ElementClickInterceptedException\n","import time\n","from selenium.webdriver.support.ui import WebDriverWait\n","from selenium.webdriver.support import expected_conditions as EC\n","import glob"]},{"cell_type":"markdown","id":"ade8baca","metadata":{"id":"ade8baca"},"source":["# ‚öôÔ∏è Configuraci√≥n"]},{"cell_type":"code","execution_count":null,"id":"8d224130-813b-40c3-9e92-87542f611b35","metadata":{"id":"8d224130-813b-40c3-9e92-87542f611b35"},"outputs":[],"source":["chrome_options = Options()\n","#chrome_options.add_argument(\"--headless\")  # Quita esto si quieres ver el navegador\n","chrome_options.add_argument(\"--no-sandbox\")\n","chrome_options.add_argument(\"--disable-dev-shm-usage\")\n","driver = webdriver.Chrome(service=Service(), options=chrome_options)\n","actions = ActionChains(driver)"]},{"cell_type":"markdown","id":"87f42f2f","metadata":{"id":"87f42f2f"},"source":["# üìù Bloque de c√≥digo"]},{"cell_type":"code","execution_count":null,"id":"d7df9cfc-247a-4323-a558-cf6bdcc3a953","metadata":{"id":"d7df9cfc-247a-4323-a558-cf6bdcc3a953"},"outputs":[],"source":["\n","# Lista de archivos CSV a procesar\n","csv_files = [\"booking_barcelona_actualizado.csv\", \"booking_grancanaria_actualizado.csv\", \"booking_madrid_actualizado.csv\",\n","             \"booking_malaga_actualizado.csv\", \"booking_mallorca_actualizado.csv\", \"booking_sevilla_actualizado.csv\",\n","             \"booking_tenerife_actualizado.csv\", \"booking_valencia_actualizado.csv\"] # Agrega aqu√≠ los nombres de tus archivos\n","\n","# DataFrame vac√≠o para almacenar todos los datos\n","all_df = pd.DataFrame()\n","\n","# Leer y concatenar cada archivo CSV\n","for file in csv_files:\n","    try:\n","        df = pd.read_csv(file)\n","        all_df = pd.concat([all_df, df], ignore_index=True)\n","    except FileNotFoundError:\n","        print(f\"Error: El archivo {file} no fue encontrado.\")\n","    except Exception as e:\n","        print(f\"Error al leer el archivo {file}: {e}\")\n","\n","df = all_df # Usamos 'df' como el DataFrame principal para mantener la compatibilidad con el resto del c√≥digo"]},{"cell_type":"code","execution_count":null,"id":"c5ab5f9d-4afa-45a5-b892-e8afd6857cf7","metadata":{"id":"c5ab5f9d-4afa-45a5-b892-e8afd6857cf7"},"outputs":[],"source":["comentarios_df = pd.DataFrame(columns=[\"titulo\", \"review_score\", \"comentario\", \"pais\", \"categoria\", \"fecha\"])"]},{"cell_type":"markdown","metadata":{"id":"1a22237e"},"source":["# üìù Funciones usadas\n","\n","Este notebook utiliza las siguientes funciones definidas localmente:\n","\n","*   **`scroll_lentamente(pixeles, pausas, repeticiones)`**: Realiza un scroll suave en la p√°gina web una cantidad espec√≠fica de veces para asegurar que el contenido din√°mico se cargue correctamente. Permite configurar la cantidad de p√≠xeles a desplazar, la pausa entre scrolls y el n√∫mero de repeticiones.\n","*   **`scrapear_experiencia(url)`**: Funci√≥n principal para extraer rese√±as de una URL de Booking. Navega a la p√°gina, maneja pop-ups de cookies, extrae el t√≠tulo, busca y hace click para ver comentarios, itera a trav√©s de las rese√±as extrayendo score, texto, pa√≠s, categor√≠a y fecha, y maneja la paginaci√≥n dentro del modal de rese√±as. Retorna una lista de diccionarios con los datos de las rese√±as."],"id":"1a22237e"},{"cell_type":"markdown","id":"b3b4ebb8","metadata":{"id":"b3b4ebb8"},"source":["# üåê Configuraci√≥n de Selenium / WebDriver"]},{"cell_type":"code","execution_count":null,"id":"546b5f4f-4c70-46cf-8a6e-3e094ce8477e","metadata":{"id":"546b5f4f-4c70-46cf-8a6e-3e094ce8477e"},"outputs":[],"source":["def scroll_lentamente(pixeles=300, pausas=0.5, repeticiones=5):\n","    for _ in range(repeticiones):\n","        driver.execute_script(f\"window.scrollBy(0, {pixeles});\")\n","        time.sleep(pausas)"]},{"cell_type":"markdown","id":"ce37134c","metadata":{"id":"ce37134c"},"source":["# üåê Configuraci√≥n de Selenium / WebDriver"]},{"cell_type":"code","execution_count":null,"id":"32ceb2e0-cab1-470c-bdba-63bbbda5192c","metadata":{"id":"32ceb2e0-cab1-470c-bdba-63bbbda5192c"},"outputs":[],"source":["def scrapear_experiencia(url):\n","    comentarios = []\n","\n","    try:\n","        driver.get(url)\n","        time.sleep(1)\n","\n","        # Cerrar cookies si aparece\n","        try:\n","            aceptar_cookies = driver.find_element(By.ID, \"onetrust-accept-btn-handler\")\n","            aceptar_cookies.click()\n","            time.sleep(1)\n","        except:\n","            pass\n","\n","        # Scroll para que cargue el bot√≥n\n","        scroll_lentamente(pixeles=300, pausas=0.2, repeticiones=2)\n","\n","        # Extraer t√≠tulo\n","        try:\n","            titulo = driver.find_element(By.CLASS_NAME, \"a4ac75716e.css-1mpsda3\").text\n","        except:\n","            titulo = \"Sin t√≠tulo\"\n","\n","        # Ver y hacer click en bot√≥n de comentarios\n","        try:\n","            ver_comentarios_btn = driver.find_element(By.CSS_SELECTOR, '[data-testid=\"reviews-link\"]')\n","            driver.execute_script(\"arguments[0].scrollIntoView(true);\", ver_comentarios_btn)\n","            time.sleep(1)\n","            ver_comentarios_btn.click()\n","            time.sleep(1)\n","        except:\n","            print(f\"Bot√≥n 'ver todos los comentarios' no disponible en: {url}\")\n","            return []\n","\n","        # Esperar que cargue el modal\n","        try:\n","            review_modal = driver.find_element(By.CLASS_NAME, \"a9f1d9ba2c\")\n","        except:\n","            print(\"No se encontr√≥ el modal de rese√±as.\")\n","            return []\n","\n","        # Loop para recorrer p√°ginas\n","        while True:\n","            review_items = review_modal.find_elements(By.CSS_SELECTOR, '[data-testid=\"review-item\"]')\n","            for item in review_items:\n","                try:\n","                    score_raw = item.find_element(By.CSS_SELECTOR, '[data-testid=\"review-star-rating\"]')\n","                    score_text = score_raw.get_attribute(\"aria-label\")\n","                    score = int(score_text.strip()[0])\n","                except:\n","                    score = None\n","\n","                try:\n","                    texto = item.find_element(By.CLASS_NAME, \"b99b6ef58f\").text.strip()\n","                except:\n","                    texto = \"\"\n","\n","                pais = \"\"\n","                categoria = \"\"\n","                fecha = \"\"\n","\n","                try:\n","                    contenedor = item.find_element(By.CSS_SELECTOR, 'div.css-7jm4mj')\n","                    campos = contenedor.find_elements(By.CSS_SELECTOR, 'div.fff1944c52.fb14de7f14')\n","\n","                    if len(campos) > 0:\n","                        pais = campos[0].text.strip()\n","                    if len(campos) > 1:\n","                        categoria = campos[1].text.strip()\n","                    if len(campos) > 2:\n","                        fecha = campos[2].text.strip()\n","                        # Limpieza si incluye el texto completo\n","                        fecha = fecha.replace(\"Publicado el \", \"\").replace(\" en Booking.com\", \"\").strip()\n","\n","                except Exception as e:\n","                    print(\"Error extrayendo pa√≠s/categor√≠a/fecha:\", e)\n","\n","                # Agregar al diccionario final\n","                comentarios.append({\n","                    \"titulo\":     titulo,\n","                    \"review_score\": score,\n","                    \"comentario\": texto,\n","                    \"pais\":       pais,\n","                    \"categoria\":  categoria,\n","                    \"fecha\":      fecha\n","                })\n","\n","            # Bot√≥n \"Siguiente\"\n","            try:\n","                pagination_container = review_modal.find_element(By.CSS_SELECTOR, '[data-testid=\"reviews-pagination\"]')\n","                next_btn = pagination_container.find_element(By.CSS_SELECTOR, 'button[aria-label=\"Siguiente\"]')\n","\n","                if next_btn.get_attribute(\"disabled\") is not None:\n","                    print(\"Fin del paginado.\")\n","                    break\n","\n","                # Scroll dentro del modal\n","                driver.execute_script(\"arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});\", next_btn)\n","                time.sleep(1)\n","                driver.execute_script(\"arguments[0].scrollIntoView(true);\", next_btn)\n","                time.sleep(1)\n","\n","                try:\n","                    next_btn.click()\n","                    time.sleep(1)\n","                except ElementClickInterceptedException:\n","                    break\n","\n","            except NoSuchElementException:\n","                print(\"No se encontr√≥ el bot√≥n 'Siguiente' dentro de la paginaci√≥n.\")\n","                break\n","\n","    except Exception as e:\n","        print(f\"Error general en {url}: {e}\")\n","\n","    return comentarios"]},{"cell_type":"markdown","id":"271f55d5","metadata":{"id":"271f55d5"},"source":["# üìù Extracci√≥n de rese√±as\n","\n","Este c√≥digo itera sobre cada fila de un DataFrame, extrayendo la URL de cada una para raspar (scrapear) los comentarios de cada URL usando la funci√≥n scrapear_experiencia. Los comentarios obtenidos se van agregando a otro DataFrame. Finalmente, guarda todos los comentarios recopilados en un archivo CSV y cierra el navegador de Selenium."]},{"cell_type":"code","execution_count":null,"id":"1ce72b55-c853-4eca-92d8-7324ab9eead3","metadata":{"id":"1ce72b55-c853-4eca-92d8-7324ab9eead3","scrolled":true},"outputs":[],"source":["for idx, row in df.iterrows():\n","    print(f\"Procesando {idx + 1}/{len(df)}: {row['url']}\")\n","    resultados = scrapear_experiencia(row[\"url\"])\n","    if resultados:\n","        comentarios_df = pd.concat([comentarios_df, pd.DataFrame(resultados)], ignore_index=True)\n","    time.sleep(1)\n","\n","# Guardar resultados\n","comentarios_df.to_csv(\"booking_barcelona_comentarios_completos.csv\", index=False)\n","print(\"Archivo final guardado con √©xito.\")\n","\n","# Cerrar navegador\n","driver.quit()"]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.7"}},"nbformat":4,"nbformat_minor":5}
{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a39b391d",
   "metadata": {},
   "source": [
    "# üó∫Ô∏è Booking Reviews\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7ebb743",
   "metadata": {},
   "source": [
    "## üß∞ Librer√≠as e importaciones"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "865bbc28-432c-4676-8d67-2cd52ad6a84a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from selenium import webdriver\n",
    "from selenium.webdriver.chrome.service import Service\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.chrome.options import Options\n",
    "from selenium.webdriver.common.action_chains import ActionChains\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "from selenium.common.exceptions import NoSuchElementException, TimeoutException, ElementClickInterceptedException\n",
    "import time\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3dbe0d5",
   "metadata": {},
   "source": [
    "## üåê Configuraci√≥n del navegador y apertura de la URL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8d224130-813b-40c3-9e92-87542f611b35",
   "metadata": {},
   "outputs": [],
   "source": [
    "chrome_options = Options()\n",
    "#chrome_options.add_argument(\"--headless\")  # Quita esto si quieres ver el navegador\n",
    "chrome_options.add_argument(\"--no-sandbox\")\n",
    "chrome_options.add_argument(\"--disable-dev-shm-usage\")\n",
    "chrome_options.add_argument(\"--disable-blink-features=AutomationControlled\")\n",
    "chrome_options.add_experimental_option(\"excludeSwitches\", [\"enable-automation\"])\n",
    "chrome_options.add_experimental_option('useAutomationExtension', False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9dc43b46-3e32-4440-b6be-de1a84235ec5",
   "metadata": {},
   "outputs": [],
   "source": [
    "driver = webdriver.Chrome(service=Service(), options=chrome_options)\n",
    "driver.execute_script(\"Object.defineProperty(navigator, 'webdriver', {get: () => undefined})\")\n",
    "actions = ActionChains(driver)\n",
    "wait = WebDriverWait(driver, 10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d7df9cfc-247a-4323-a558-cf6bdcc3a953",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"booking_canarias_limpio_agosto.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c5ab5f9d-4afa-45a5-b892-e8afd6857cf7",
   "metadata": {},
   "outputs": [],
   "source": [
    "comentarios_df = pd.DataFrame(columns=[\"titulo\", \"comentario\", \"review_score\", \"region\", \"categoria\", \"fecha\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf275d51",
   "metadata": {},
   "source": [
    "## ‚¨áÔ∏è Preparaci√≥n: scroll y expansi√≥n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "546b5f4f-4c70-46cf-8a6e-3e094ce8477e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def scroll_lentamente(pixeles=300, pausas=0.5, repeticiones=5):\n",
    "    for _ in range(repeticiones):\n",
    "        driver.execute_script(f\"window.scrollBy(0, {pixeles});\")\n",
    "        time.sleep(pausas)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51c27d0e",
   "metadata": {},
   "source": [
    "## üîé Scraping "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "32ceb2e0-cab1-470c-bdba-63bbbda5192c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrapear_experiencia(url):\n",
    "    comentarios = []\n",
    "\n",
    "    try:\n",
    "        driver.get(url)\n",
    "        time.sleep(3)  # Aumentar tiempo de espera inicial\n",
    "\n",
    "        # Cerrar cookies si aparece\n",
    "        try:\n",
    "            aceptar_cookies = wait.until(EC.element_to_be_clickable((By.ID, \"onetrust-accept-btn-handler\")))\n",
    "            aceptar_cookies.click()\n",
    "            time.sleep(1)\n",
    "        except:\n",
    "            pass\n",
    "\n",
    "        # Extraer t√≠tulo - CORREGIR SELECTOR\n",
    "        try:\n",
    "            # Probar varios selectores posibles para el t√≠tulo\n",
    "            selectors_titulo = [\n",
    "                'h1[data-testid=\"title\"]',\n",
    "                'h1.pp-header__title',\n",
    "                '#hp_hotel_name',\n",
    "                'h1'\n",
    "            ]\n",
    "            \n",
    "            titulo = \"Sin t√≠tulo\"\n",
    "            for selector in selectors_titulo:\n",
    "                try:\n",
    "                    titulo_element = driver.find_element(By.CSS_SELECTOR, selector)\n",
    "                    titulo = titulo_element.text.strip()\n",
    "                    break\n",
    "                except:\n",
    "                    continue\n",
    "        except:\n",
    "            titulo = \"Sin t√≠tulo\"\n",
    "\n",
    "        print(f\"T√≠tulo encontrado: {titulo}\")\n",
    "\n",
    "        # Scroll para cargar contenido\n",
    "        scroll_lentamente(pixeles=500, pausas=0.3, repeticiones=3)\n",
    "\n",
    "        # Buscar secci√≥n de comentarios - CORREGIR SELECTORES\n",
    "        try:\n",
    "            # M√∫ltiples selectores para encontrar la secci√≥n de reviews\n",
    "            review_selectors = [\n",
    "                '[data-testid=\"PropertyReviewsRegionBlock\"]',\n",
    "                '[data-testid=\"review-section\"]',\n",
    "                '[id*=\"reviews\"]',\n",
    "                '.reviews-section',\n",
    "                '[data-testid=\"guest-reviews\"]'\n",
    "            ]\n",
    "            \n",
    "            ver_pagina = None\n",
    "            for selector in review_selectors:\n",
    "                try:\n",
    "                    ver_pagina = driver.find_element(By.CSS_SELECTOR, selector)\n",
    "                    print(f\"Secci√≥n de reviews encontrada con selector: {selector}\")\n",
    "                    break\n",
    "                except:\n",
    "                    continue\n",
    "                    \n",
    "            if ver_pagina is None:\n",
    "                print(\"No se encontr√≥ la secci√≥n de reviews\")\n",
    "                return []\n",
    "\n",
    "            # Scroll hacia la secci√≥n de reviews\n",
    "            driver.execute_script(\"arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});\", ver_pagina)\n",
    "            time.sleep(2)\n",
    "\n",
    "            # Buscar bot√≥n de \"ver todos los comentarios\" - M√öLTIPLES SELECTORES\n",
    "            button_selectors = [\n",
    "                '[data-testid=\"fr-read-all-reviews\"]',\n",
    "                'button[data-testid=\"read-all-reviews\"]',\n",
    "                'a[data-testid=\"read-all-reviews\"]',\n",
    "                'button:contains(\"Ver todos\")',\n",
    "                'a:contains(\"Ver todos\")',\n",
    "                'button:contains(\"comentarios\")',\n",
    "                'a:contains(\"comentarios\")'\n",
    "            ]\n",
    "            \n",
    "            ver_comentarios_btn = None\n",
    "            for selector in button_selectors:\n",
    "                try:\n",
    "                    if ':contains(' in selector:\n",
    "                        # Para selectores con contains, usar XPath\n",
    "                        xpath = f\"//button[contains(text(), 'Ver todos')] | //a[contains(text(), 'Ver todos')] | //button[contains(text(), 'comentarios')] | //a[contains(text(), 'comentarios')]\"\n",
    "                        ver_comentarios_btn = driver.find_element(By.XPATH, xpath)\n",
    "                    else:\n",
    "                        ver_comentarios_btn = ver_pagina.find_element(By.CSS_SELECTOR, selector)\n",
    "                    print(f\"Bot√≥n encontrado con selector: {selector}\")\n",
    "                    break\n",
    "                except:\n",
    "                    continue\n",
    "            \n",
    "            if ver_comentarios_btn is None:\n",
    "                print(\"No se encontr√≥ el bot√≥n de 'ver todos los comentarios'\")\n",
    "                # Intentar buscar en toda la p√°gina\n",
    "                try:\n",
    "                    xpath_general = \"//button[contains(text(), 'Ver')] | //a[contains(text(), 'Ver')] | //button[contains(text(), 'comentarios')] | //a[contains(text(), 'comentarios')] | //button[contains(text(), 'rese√±as')] | //a[contains(text(), 'rese√±as')]\"\n",
    "                    ver_comentarios_btn = driver.find_element(By.XPATH, xpath_general)\n",
    "                    print(\"Bot√≥n encontrado con b√∫squeda general\")\n",
    "                except:\n",
    "                    print(\"No se pudo encontrar ning√∫n bot√≥n de comentarios\")\n",
    "                    return []\n",
    "\n",
    "            # Hacer click en el bot√≥n\n",
    "            try:\n",
    "                driver.execute_script(\"arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});\", ver_comentarios_btn)\n",
    "                time.sleep(1)\n",
    "                \n",
    "                # Intentar click normal primero\n",
    "                try:\n",
    "                    ver_comentarios_btn.click()\n",
    "                except:\n",
    "                    # Si falla, usar JavaScript click\n",
    "                    driver.execute_script(\"arguments[0].click();\", ver_comentarios_btn)\n",
    "                \n",
    "                time.sleep(3)\n",
    "                print(\"Click en bot√≥n de comentarios exitoso\")\n",
    "                \n",
    "            except Exception as e:\n",
    "                print(f\"Error haciendo click en bot√≥n: {e}\")\n",
    "                return []\n",
    "\n",
    "        except Exception as e:\n",
    "            print(f\"Error buscando secci√≥n de comentarios: {e}\")\n",
    "            return []\n",
    "\n",
    "        # Esperar que cargue el modal o nueva p√°gina\n",
    "        try:\n",
    "            # M√∫ltiples selectores para el contenedor de reviews\n",
    "            modal_selectors = [\n",
    "                '[data-testid=\"review-list-container\"]',\n",
    "                '[data-testid=\"reviews-modal\"]',\n",
    "                '.review-list',\n",
    "                '[id*=\"review\"]'\n",
    "            ]\n",
    "            \n",
    "            review_modal = None\n",
    "            for selector in modal_selectors:\n",
    "                try:\n",
    "                    review_modal = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, selector)))\n",
    "                    print(f\"Modal/contenedor de reviews encontrado: {selector}\")\n",
    "                    break\n",
    "                except:\n",
    "                    continue\n",
    "                    \n",
    "            if review_modal is None:\n",
    "                print(\"No se encontr√≥ el modal/contenedor de rese√±as\")\n",
    "                return []\n",
    "                \n",
    "        except Exception as e:\n",
    "            print(f\"Error esperando modal de rese√±as: {e}\")\n",
    "            return []\n",
    "\n",
    "        # Loop para recorrer p√°ginas de comentarios\n",
    "        page_count = 0\n",
    "        max_pages = 50  # L√≠mite de seguridad\n",
    "        \n",
    "        while page_count < max_pages:\n",
    "            print(f\"Procesando p√°gina {page_count + 1}\")\n",
    "            \n",
    "            # Selectores para tarjetas de review\n",
    "            card_selectors = [\n",
    "                '[data-testid=\"review-card\"]',\n",
    "                '.review-card',\n",
    "                '[data-testid=\"review\"]',\n",
    "                '.review-item'\n",
    "            ]\n",
    "            \n",
    "            review_items = []\n",
    "            for selector in card_selectors:\n",
    "                try:\n",
    "                    review_items = review_modal.find_elements(By.CSS_SELECTOR, selector)\n",
    "                    if review_items:\n",
    "                        print(f\"Encontradas {len(review_items)} reviews con selector: {selector}\")\n",
    "                        break\n",
    "                except:\n",
    "                    continue\n",
    "            \n",
    "            if not review_items:\n",
    "                print(\"No se encontraron elementos de review\")\n",
    "                break\n",
    "                \n",
    "            for item in review_items:\n",
    "                try:\n",
    "                    # Extraer puntuaci√≥n\n",
    "                    score = None\n",
    "                    score_selectors = [\n",
    "                        '[data-testid=\"review-score\"]',\n",
    "                        '.review-score',\n",
    "                        '[aria-label*=\"puntuaci√≥n\"]',\n",
    "                        '[aria-label*=\"score\"]'\n",
    "                    ]\n",
    "                    \n",
    "                    for score_sel in score_selectors:\n",
    "                        try:\n",
    "                            score_element = item.find_element(By.CSS_SELECTOR, score_sel)\n",
    "                            score_text = score_element.get_attribute(\"aria-label\") or score_element.text\n",
    "                            # Extraer n√∫mero de la puntuaci√≥n\n",
    "                            import re\n",
    "                            score_match = re.search(r'(\\d+(?:\\.\\d+)?)', score_text)\n",
    "                            if score_match:\n",
    "                                score = float(score_match.group(1))\n",
    "                                break\n",
    "                        except:\n",
    "                            continue\n",
    "\n",
    "                    # Extraer texto del comentario\n",
    "                    texto = \"\"\n",
    "                    text_selectors = [\n",
    "                        '[data-testid=\"review-positive-text\"]',\n",
    "                        '[data-testid=\"review-negative-text\"]',\n",
    "                        '.review-text',\n",
    "                        '[data-testid=\"review-content\"]'\n",
    "                    ]\n",
    "                    \n",
    "                    for text_sel in text_selectors:\n",
    "                        try:\n",
    "                            text_elements = item.find_elements(By.CSS_SELECTOR, text_sel)\n",
    "                            for element in text_elements:\n",
    "                                texto += element.text.strip() + \" \"\n",
    "                        except:\n",
    "                            continue\n",
    "                    \n",
    "                    texto = texto.strip()\n",
    "\n",
    "                    # Extraer metadatos (pa√≠s, categor√≠a, fecha)\n",
    "                    pais = \"\"\n",
    "                    categoria = \"\"\n",
    "                    fecha = \"\"\n",
    "                    \n",
    "                    try:\n",
    "                        # Buscar elementos de fecha/metadata\n",
    "                        metadata_selectors = [\n",
    "                            '[data-testid=\"review-date\"]',\n",
    "                            '.review-date',\n",
    "                            '.review-metadata'\n",
    "                        ]\n",
    "                        \n",
    "                        for meta_sel in metadata_selectors:\n",
    "                            try:\n",
    "                                metadata_elements = item.find_elements(By.CSS_SELECTOR, meta_sel)\n",
    "                                for elem in metadata_elements:\n",
    "                                    text = elem.text.strip()\n",
    "                                    if text:\n",
    "                                        # Intentar identificar qu√© tipo de dato es\n",
    "                                        if any(month in text.lower() for month in ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', \n",
    "                                                                                  'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre',\n",
    "                                                                                  'january', 'february', 'march', 'april', 'may', 'june',\n",
    "                                                                                  'july', 'august', 'september', 'october', 'november', 'december']):\n",
    "                                            fecha = text\n",
    "                                        elif len(text) < 50 and not fecha:  # Posible pa√≠s o categor√≠a\n",
    "                                            if not pais:\n",
    "                                                pais = text\n",
    "                                            elif not categoria:\n",
    "                                                categoria = text\n",
    "                                break\n",
    "                            except:\n",
    "                                continue\n",
    "                                \n",
    "                    except Exception as e:\n",
    "                        print(f\"Error extrayendo metadatos: {e}\")\n",
    "\n",
    "                    # Solo agregar si tiene contenido √∫til\n",
    "                    if texto or score is not None:\n",
    "                        comentarios.append({\n",
    "                            \"titulo\": titulo,\n",
    "                            \"review_score\": score,\n",
    "                            \"comentario\": texto,\n",
    "                            \"pais\": pais,\n",
    "                            \"categoria\": categoria,\n",
    "                            \"fecha\": fecha\n",
    "                        })\n",
    "\n",
    "                except Exception as e:\n",
    "                    print(f\"Error procesando review individual: {e}\")\n",
    "                    continue\n",
    "\n",
    "            # Buscar bot√≥n \"Siguiente\" con m√∫ltiples estrategias\n",
    "            try:\n",
    "                next_button_found = False\n",
    "                \n",
    "                # Selectores para bot√≥n siguiente\n",
    "                next_selectors = [\n",
    "                    'button[aria-label=\"P√°gina siguiente\"]',\n",
    "                    'button[aria-label=\"Next page\"]',\n",
    "                    'button:contains(\"Siguiente\")',\n",
    "                    'a:contains(\"Siguiente\")',\n",
    "                    '[data-testid=\"pagination-next\"]',\n",
    "                    '.pagination-next',\n",
    "                    'button[aria-label*=\"siguiente\"]'\n",
    "                ]\n",
    "                \n",
    "                for next_sel in next_selectors:\n",
    "                    try:\n",
    "                        if ':contains(' in next_sel:\n",
    "                            xpath = \"//button[contains(text(), 'Siguiente')] | //a[contains(text(), 'Siguiente')] | //button[contains(@aria-label, 'siguiente')] | //button[contains(@aria-label, 'Next')]\"\n",
    "                            next_btn = driver.find_element(By.XPATH, xpath)\n",
    "                        else:\n",
    "                            next_btn = driver.find_element(By.CSS_SELECTOR, next_sel)\n",
    "                        \n",
    "                        # Verificar si est√° habilitado\n",
    "                        if next_btn.get_attribute(\"disabled\") is not None or \"disabled\" in next_btn.get_attribute(\"class\") or \"\":\n",
    "                            print(\"Bot√≥n siguiente deshabilitado - fin del paginado\")\n",
    "                            return comentarios\n",
    "                        \n",
    "                        # Scroll hacia el bot√≥n\n",
    "                        driver.execute_script(\"arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});\", next_btn)\n",
    "                        time.sleep(1)\n",
    "                        \n",
    "                        # Intentar click\n",
    "                        try:\n",
    "                            wait.until(EC.element_to_be_clickable(next_btn))\n",
    "                            next_btn.click()\n",
    "                            print(\"Click en 'Siguiente' exitoso\")\n",
    "                            next_button_found = True\n",
    "                            break\n",
    "                        except:\n",
    "                            # Intentar con JavaScript\n",
    "                            driver.execute_script(\"arguments[0].click();\", next_btn)\n",
    "                            print(\"Click con JavaScript en 'Siguiente' exitoso\")\n",
    "                            next_button_found = True\n",
    "                            break\n",
    "                            \n",
    "                    except:\n",
    "                        continue\n",
    "                \n",
    "                if not next_button_found:\n",
    "                    print(\"No se encontr√≥ bot√≥n 'Siguiente' - fin del paginado\")\n",
    "                    break\n",
    "                    \n",
    "                time.sleep(2)  # Esperar que cargue la siguiente p√°gina\n",
    "                page_count += 1\n",
    "                \n",
    "            except Exception as e:\n",
    "                print(f\"Error en paginaci√≥n: {e}\")\n",
    "                break\n",
    "\n",
    "    except Exception as e:\n",
    "        print(f\"Error general en {url}: {e}\")\n",
    "\n",
    "    return comentarios"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a476fa00",
   "metadata": {},
   "source": [
    "## üíæ Guardado a CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1ce72b55-c853-4eca-92d8-7324ab9eead3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== Procesando 1/490: https://www.booking.com/hotel/es/dona-rose-surf-hostel.es.html?label=canary-islands-_cErSRutz9ZwI2zHpFaB0gS349826210110%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-319830933545%3Alp1005493%3Ali%3Adec%3Adm%3Appccp%3DUmFuZG9tSVYkc2RlIyh9YTiRJUvwM0AZDoPI6XBbFtM&aid=1610834&ucfs=1&arphpl=1&checkin=2025-08-19&checkout=2025-08-20&dest_id=754&dest_type=region&group_adults=1&req_adults=1&no_rooms=1&group_children=0&req_children=0&hpos=1&hapos=1&sr_order=popularity&srpvid=7ed95cd4918a0151&srepoch=1755436429&all_sr_blocks=1265626006_401380197_1_0_0&highlighted_blocks=1265626006_401380197_1_0_0&matching_block_id=1265626006_401380197_1_0_0&sr_pri_blocks=1265626006_401380197_1_0_0__1570&from=searchresults ===\n",
      "T√≠tulo encontrado: Playa\n",
      "Do√±a Rose Surf Hostel\n",
      "Secci√≥n de reviews encontrada con selector: [data-testid=\"PropertyReviewsRegionBlock\"]\n",
      "Bot√≥n encontrado con selector: [data-testid=\"fr-read-all-reviews\"]\n",
      "Click en bot√≥n de comentarios exitoso\n",
      "Modal/contenedor de reviews encontrado: [data-testid=\"review-list-container\"]\n",
      "Procesando p√°gina 1\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 2\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 3\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 4\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 5\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 6\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 7\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 8\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 9\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 10\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 11\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 12\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 13\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 14\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 15\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 16\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 17\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 18\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 19\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 20\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 21\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 22\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 23\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 24\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 25\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 26\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 27\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 28\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Bot√≥n siguiente deshabilitado - fin del paginado\n",
      "No se obtuvieron comentarios\n",
      "\n",
      "=== Procesando 2/490: https://www.booking.com/hotel/es/triana-rooms-eh.es.html?label=canary-islands-_cErSRutz9ZwI2zHpFaB0gS349826210110%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-319830933545%3Alp1005493%3Ali%3Adec%3Adm%3Appccp%3DUmFuZG9tSVYkc2RlIyh9YTiRJUvwM0AZDoPI6XBbFtM&aid=1610834&ucfs=1&arphpl=1&checkin=2025-08-19&checkout=2025-08-20&dest_id=754&dest_type=region&group_adults=1&req_adults=1&no_rooms=1&group_children=0&req_children=0&hpos=2&hapos=2&sr_order=popularity&srpvid=7ed95cd4918a0151&srepoch=1755436429&all_sr_blocks=1085335905_381399619_1_0_0&highlighted_blocks=1085335905_381399619_1_0_0&matching_block_id=1085335905_381399619_1_0_0&sr_pri_blocks=1085335905_381399619_1_0_0__5143&from=searchresults ===\n",
      "T√≠tulo encontrado: Triana Rooms EH\n",
      "Secci√≥n de reviews encontrada con selector: [data-testid=\"PropertyReviewsRegionBlock\"]\n",
      "Bot√≥n encontrado con selector: [data-testid=\"fr-read-all-reviews\"]\n",
      "Click en bot√≥n de comentarios exitoso\n",
      "Modal/contenedor de reviews encontrado: [data-testid=\"review-list-container\"]\n",
      "Procesando p√°gina 1\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 2\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 3\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 4\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 5\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 6\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 7\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 8\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 9\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 10\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 11\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 12\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 13\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 14\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 15\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 16\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 17\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 18\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 19\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 20\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 21\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 22\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 23\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 24\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 25\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 26\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 27\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 28\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 29\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n",
      "Click con JavaScript en 'Siguiente' exitoso\n",
      "Procesando p√°gina 30\n",
      "Encontradas 10 reviews con selector: [data-testid=\"review-card\"]\n"
     ]
    }
   ],
   "source": [
    "for idx, row in df.iterrows():\n",
    "    print(f\"\\n=== Procesando {idx + 1}/{len(df)}: {row['url']} ===\")\n",
    "    try:\n",
    "        resultados = scrapear_experiencia(row[\"url\"])\n",
    "        if resultados:\n",
    "            print(f\"Obtenidos {len(resultados)} comentarios\")\n",
    "            comentarios_df = pd.concat([comentarios_df, pd.DataFrame(resultados)], ignore_index=True)\n",
    "        else:\n",
    "            print(\"No se obtuvieron comentarios\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error procesando hotel {idx + 1}: {e}\")\n",
    "    \n",
    "    time.sleep(2)\n",
    "\n",
    "# Guardar resultados\n",
    "comentarios_df.to_csv(\"hoteles_canarias_completos.csv\", index=False)\n",
    "print(f\"\\nArchivo final guardado con {len(comentarios_df)} comentarios totales.\")\n",
    "\n",
    "# Cerrar navegador\n",
    "driver.quit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fff57b9c-5bf8-40f4-a2e9-5f65bf5052e0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

{"cells":[{"cell_type":"markdown","id":"f5953064","metadata":{"id":"f5953064"},"source":["#  Scraping de Civitatis"]},{"cell_type":"markdown","id":"1f20b1c6","metadata":{"id":"1f20b1c6"},"source":["[texto del enlace](https://)## üì¶ Instalaci√≥n"]},{"cell_type":"code","execution_count":null,"id":"8cdfe7f6-4b0d-4232-b711-2ef14e7fb32b","metadata":{"id":"8cdfe7f6-4b0d-4232-b711-2ef14e7fb32b"},"outputs":[],"source":["pip install selenium"]},{"cell_type":"markdown","id":"490af44d","metadata":{"id":"490af44d"},"source":["## ‚öôÔ∏è Configuraci√≥n de destinos\n","\n","Elegimos los 8 destinos de nuestro estudio\n"]},{"cell_type":"code","execution_count":null,"id":"ce931ce4","metadata":{"id":"ce931ce4"},"outputs":[],"source":["# Lista y mapeo de ciudades ‚ûú slugs Civitatis (ES)\n","CITY_ORDER = [\n","    \"Tenerife\", \"Barcelona\", \"Madrid\", \"Malaga\",\n","    \"Gran Canaria\", \"Seville\", \"Valencia\", \"Palma de Mallorca\"\n","]\n","\n","SLUG_MAP = {\n","    \"Tenerife\": \"tenerife\",\n","    \"Barcelona\": \"barcelona\",\n","    \"Madrid\": \"madrid\",\n","    \"Malaga\": \"malaga\",\n","    \"Gran Canaria\": \"gran-canaria\",\n","    \"Sevilla\": \"sevilla\",\n","    \"Valencia\": \"valencia\",\n","    \"Palma de Mallorca\": \"palma-de-mallorca\"\n","}\n","\n","BASE_URL = \"https://www.civitatis.com/es/{slug}/\"\n","\n","# Carpeta de salida (opcional). Por defecto guardamos en el directorio de trabajo.\n","OUTPUT_DIR = \".\"\n"]},{"cell_type":"markdown","id":"87f024c2","metadata":{"id":"87f024c2"},"source":["## üß∞ Librer√≠as e importaciones"]},{"cell_type":"code","execution_count":null,"id":"2fe3f014","metadata":{"id":"2fe3f014"},"outputs":[],"source":["import os\n","import re\n","import csv\n","import time\n","import random\n","from pathlib import Path\n","from typing import List, Dict, Any, Optional\n","\n","from selenium import webdriver\n","from selenium.webdriver.chrome.service import Service\n","from selenium.webdriver.common.by import By\n","from selenium.webdriver.support.ui import WebDriverWait\n","from selenium.webdriver.support import expected_conditions as EC\n","from selenium.common.exceptions import (\n","    NoSuchElementException, TimeoutException, StaleElementReferenceException\n",")\n"]},{"cell_type":"markdown","id":"e986faae","metadata":{"id":"e986faae"},"source":["## üîß Funciones auxiliares\n","\n","Funciones para navegar por la web, auto scroll y avisos\n","\n"]},{"cell_type":"code","execution_count":null,"id":"a0a5f408","metadata":{"id":"a0a5f408"},"outputs":[],"source":["def handle_no_such_element_exception(func):\n","    \"\"\"Devuelve el resultado de `func()` o None si el elemento no est√° disponible todav√≠a.\"\"\"\n","    try:\n","        return func()\n","    except (NoSuchElementException, TimeoutException, StaleElementReferenceException):\n","        return None\n","\n","\n","def auto_scroll(driver, pause_time: float = 2.0, max_scrolls: int = 10) -> None:\n","    \"\"\"Desplaza hacia abajo para forzar la carga perezosa del listado.\"\"\"\n","    last_height = driver.execute_script(\"return document.body.scrollHeight\")\n","    for _ in range(max_scrolls):\n","        driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n","        time.sleep(pause_time)\n","        new_height = driver.execute_script(\"return document.body.scrollHeight\")\n","        if new_height == last_height:\n","            break\n","        last_height = new_height\n"]},{"cell_type":"markdown","id":"5d6b12b0","metadata":{"id":"5d6b12b0"},"source":["## üöó Driver y utilidades de navegaci√≥n"]},{"cell_type":"code","execution_count":null,"id":"10fbb6c9","metadata":{"id":"10fbb6c9"},"outputs":[],"source":["def make_driver(headless: bool = False):\n","    \"\"\"Crea el driver de Chrome. Si necesitas modo headless, pon `headless=True`.\"\"\"\n","    options = webdriver.ChromeOptions()\n","    if headless:\n","        options.add_argument(\"--headless=new\")\n","    options.add_argument(\"--start-maximized\")\n","    options.add_argument(\"--disable-gpu\")\n","    options.add_argument(\"--no-sandbox\")\n","    options.add_argument(\"--window-size=1920,1080\")\n","    # Si necesitas desactivar im√°genes/JS, puedes a√±adir preferencias aqu√≠.\n","    driver = webdriver.Chrome(service=Service(), options=options)\n","    return driver\n","\n","\n","def accept_cookies_if_present(driver, timeout: int = 10) -> None:\n","    \"\"\"Intenta aceptar el banner de cookies de Didomi si aparece.\"\"\"\n","    try:\n","        btn = WebDriverWait(driver, timeout).until(\n","            EC.element_to_be_clickable((By.ID, \"didomi-notice-agree-button\"))\n","        )\n","        btn.click()\n","        time.sleep(1)\n","    except Exception:\n","        pass  # no hay cookies o ya aceptadas\n"]},{"cell_type":"markdown","id":"fa0aa93e","metadata":{"id":"fa0aa93e"},"source":["## üï∑Ô∏è Scraper de una ciudad\n","\n","1. Abre la URL de la ciudad.\n","2. Acepta cookies (si aparecen).\n","3. Carga el listado y realiza *auto scroll*.\n","4. Recorre **todas las tarjetas** (`article.comfort-card`), entrando por t√≠tulo o card para capturar la **URL de detalle**, vuelve atr√°s y extrae:\n","   - `title`, `address` (texto de la card), `review_score`, `review_count`, `description`, `price`.\n","5. Avanza con el bot√≥n `#activity-list-next-page` hasta agotar p√°ginas.\n","6. Guarda los datos en `CSV` con el **mismo esquema** de columnas.\n"]},{"cell_type":"code","execution_count":null,"id":"51be62b4","metadata":{"id":"51be62b4"},"outputs":[],"source":["def scrape_civitatis_city(city_name: str, slug: str, base_url: str = BASE_URL, out_dir: str = OUTPUT_DIR) -> str:\n","    url = base_url.format(slug=slug)\n","    print(f\"üåê {city_name} ‚Üí {url}\")\n","\n","    driver = make_driver(headless=False)\n","    items: List[Dict[str, Any]] = []\n","    seen_ids = set()\n","\n","    try:\n","        driver.get(url)\n","        accept_cookies_if_present(driver)\n","        WebDriverWait(driver, 10).until(\n","            EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'article.comfort-card'))\n","        )\n","\n","        page = 1\n","        while True:\n","            print(f\"üìÑ P√°gina {page}: cargando y desplazando...\")\n","            auto_scroll(driver, pause_time=2, max_scrolls=10)\n","\n","            activities = driver.find_elements(By.CSS_SELECTOR, 'article.comfort-card')\n","            print(f\"üîç Se encontraron {len(activities)} actividades en esta p√°gina.\")\n","\n","            i = 0\n","            while i < len(activities):\n","                activities = driver.find_elements(By.CSS_SELECTOR, 'article.comfort-card')\n","                if i >= len(activities):\n","                    break\n","                activity = activities[i]\n","\n","                activity_id = activity.get_attribute(\"data-cs-override-id\")\n","                if not activity_id or activity_id in seen_ids:\n","                    i += 1\n","                    continue\n","                seen_ids.add(activity_id)\n","\n","                # Intentar entrar en el detalle para capturar URL\n","                url_detail = \"\"\n","                try:\n","                    driver.execute_script(\"arguments[0].scrollIntoView(true);\", activity)\n","                    try:\n","                        title_elem = activity.find_element(By.CSS_SELECTOR, \".comfort-card__title\")\n","                        driver.execute_script(\"arguments[0].click();\", title_elem)\n","                    except Exception:\n","                        driver.execute_script(\"arguments[0].click();\", activity)\n","                    time.sleep(2)\n","                    url_detail = driver.current_url\n","                    driver.back()\n","                    time.sleep(2)\n","                    WebDriverWait(driver, 10).until(\n","                        EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'article.comfort-card'))\n","                    )\n","                except Exception as e:\n","                    print(f\"No se pudo hacer clic en {activity_id}: {e}\")\n","                    url_detail = \"\"\n","\n","                # Extraer info desde la tarjeta (como en el original)\n","                activities = driver.find_elements(By.CSS_SELECTOR, 'article.comfort-card')\n","                if i < len(activities):\n","                    activity = activities[i]\n","                    title = handle_no_such_element_exception(lambda: activity.find_element(By.CSS_SELECTOR, '.comfort-card__title').text)\n","                    address = handle_no_such_element_exception(lambda: activity.find_element(By.CSS_SELECTOR, '.__city').text)\n","                    review_score = handle_no_such_element_exception(lambda: activity.find_element(By.CSS_SELECTOR, '.m-rating--text').text)\n","                    review_count = handle_no_such_element_exception(lambda: activity.find_element(By.CSS_SELECTOR, '.text--rating-total').text)\n","                    if review_count:\n","                        numbers = re.findall(r'\\d[\\d\\.]*', review_count)\n","                        review_count = numbers[0] if numbers else None\n","                    description = handle_no_such_element_exception(lambda: activity.find_element(By.CSS_SELECTOR, '.comfort-card__text').text)\n","                    price = handle_no_such_element_exception(lambda: WebDriverWait(activity, 2).until(\n","                        lambda d: activity.find_element(By.CSS_SELECTOR, '.comfort-card__price__text__wrapper')\n","                    ).text)\n","                else:\n","                    title = address = review_score = review_count = description = price = None\n","\n","                items.append({\n","                    \"id\": activity_id,\n","                    \"url\": url_detail,\n","                    \"title\": title,\n","                    \"address\": address,\n","                    \"review_score\": review_score,\n","                    \"review_count\": review_count,\n","                    \"description\": description,\n","                    \"price\": price\n","                })\n","                i += 1\n","\n","            # Paginaci√≥n\n","            try:\n","                next_button = driver.find_element(By.ID, 'activity-list-next-page')\n","                if \"disabled\" in next_button.get_attribute(\"class\"):\n","                    print(\"üö´ Bot√≥n 'Siguiente' desactivado. Fin.\")\n","                    break\n","                driver.execute_script(\"arguments[0].click();\", next_button)\n","                print(\"‚û° Pasando a la siguiente p√°gina...\")\n","                time.sleep(random.uniform(2, 4))\n","                page += 1\n","            except NoSuchElementException:\n","                print(\"üö´ Bot√≥n 'Siguiente' no encontrado. Fin.\")\n","                break\n","\n","    finally:\n","        driver.quit()\n","\n","    # Guardado con el mismo esquema de columnas\n","    out_path = os.path.join(out_dir, f\"atracciones_{slug}.csv\")\n","    with open(out_path, mode=\"w\", newline=\"\", encoding=\"utf-8\") as f:\n","        writer = csv.DictWriter(f, fieldnames=[\n","            \"id\",\"url\",\"title\",\"address\",\"review_score\",\"review_count\",\"description\",\"price\"\n","        ])\n","        writer.writeheader()\n","        writer.writerows(items)\n","\n","    print(f\"‚úÖ Guardado: {out_path} ({len(items)} filas)\")\n","    return out_path\n"]},{"cell_type":"markdown","id":"f655f660","metadata":{"id":"f655f660"},"source":["## üè∑Ô∏è Post-proceso: normalizar `address` a la ciudad\n","\n","Guardamos cada csv con su nombre correspondiente\n"]},{"cell_type":"code","execution_count":null,"id":"520188e0","metadata":{"id":"520188e0"},"outputs":[],"source":["def force_address_to_city(csv_in: str, city_name: str) -> str:\n","    rows = []\n","    with open(csv_in, \"r\", encoding=\"utf-8\") as infile:\n","        reader = csv.DictReader(infile)\n","        for row in reader:\n","            row[\"address\"] = city_name\n","            rows.append(row)\n","\n","    csv_out = os.path.splitext(csv_in)[0] + \"_ciudad_.csv\"\n","    with open(csv_out, \"w\", newline=\"\", encoding=\"utf-8\") as outfile:\n","        writer = csv.DictWriter(outfile, fieldnames=[\n","            \"id\",\"url\",\"title\",\"address\",\"review_score\",\"review_count\",\"description\",\"price\"\n","        ])\n","        writer.writeheader()\n","        writer.writerows(rows)\n","    print(f\"üè∑Ô∏è Address normalizado ‚Üí {csv_out}\")\n","    return csv_out\n"]},{"cell_type":"markdown","id":"f86bbf1b","metadata":{"id":"f86bbf1b"},"source":["## ‚ñ∂Ô∏è Ejecutar para las 8 ciudades\n","\n","El siguiente bloque recorre las 8 ciudades **en el orden indicado**. Tras cada scraping,\n","tambi√©n genera el CSV con `address` normalizado al nombre de ciudad.\n"]},{"cell_type":"code","execution_count":null,"id":"c8c11a03","metadata":{"id":"c8c11a03"},"outputs":[],"source":["def run_all_cities(city_order = CITY_ORDER, slug_map = SLUG_MAP):\n","    resultados = []\n","    for city in city_order:\n","        slug = slug_map[city]\n","        try:\n","            raw_csv = scrape_civitatis_city(city, slug)\n","            final_csv = force_address_to_city(raw_csv, city)\n","            resultados.append((city, raw_csv, final_csv))\n","        except Exception as e:\n","            print(f\"‚ùå Error con {city}: {e}\")\n","    return resultados\n","\n","\n","run_all_cities()\n"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.7"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}
{"cells":[{"cell_type":"markdown","id":"49e0474c","metadata":{"id":"49e0474c"},"source":["[link text](https://)\n","# üìå Scraping de Facebook\n","\n","Este notebook realiza scraping en **Facebook** para recorrer distintas **ciudades** y varias **palabras clave**.\n","\n","**Incluye:**\n","- Uso de Playwright para la automatizaci√≥n de navegaci√≥n en Facebook, incluyendo login con sesi√≥n guardada y aceptaci√≥n de cookies.\n","- Implementaci√≥n de scroll infinito para cargar m√°s resultados en las p√°ginas y recolectar publicaciones.\n","- Extracci√≥n de texto y fecha de cada publicaci√≥n, junto con la asociaci√≥n a una ciudad y una keyword.\n","- Ejecuci√≥n en forma as√≠ncrona (async/await) para procesar m√∫ltiples combinaciones de ciudad √ó keyword de manera m√°s r√°pida y eficiente.\n"]},{"cell_type":"markdown","id":"a193df48","metadata":{"id":"a193df48"},"source":["# Scraping de Facebook (Playwright)"]},{"cell_type":"markdown","id":"1240bdc7","metadata":{"id":"1240bdc7"},"source":["## üß∞ Librer√≠as e importaciones"]},{"cell_type":"code","execution_count":null,"id":"33c8d463-0bad-44eb-8246-c1a4b3cfd259","metadata":{"id":"33c8d463-0bad-44eb-8246-c1a4b3cfd259"},"outputs":[],"source":["import asyncio\n","from playwright.async_api import async_playwright\n","import json\n","from datetime import datetime"]},{"cell_type":"markdown","id":"04afd448","metadata":{"id":"04afd448"},"source":["## üîê Guardar sesi√≥n en Facebook (Playwright)"]},{"cell_type":"code","execution_count":null,"id":"9cf46ff8-78dd-4c52-adad-3e6ec8d99f91","metadata":{"id":"9cf46ff8-78dd-4c52-adad-3e6ec8d99f91","outputId":"102115ee-1bd8-49c1-cf3c-2f078aafb1af"},"outputs":[{"name":"stdout","output_type":"stream","text":["Inicia sesi√≥n manualmente...\n","Error durante la navegaci√≥n tras login: Page.wait_for_selector: Target page, context or browser has been closed\n","Call log:\n","  - waiting for locator(\"a[role=\\\"link\\\"][aria-label=\\\"Inicio\\\"]\") to be visible\n","\n","Puedes cerrar el navegador manualmente cuando termines.\n"]}],"source":["async def guardar_sesion_facebook():\n","    async with async_playwright() as p:\n","        browser = await p.chromium.launch(headless=False)\n","        context = await browser.new_context()\n","        page = await context.new_page()\n","\n","        await page.goto(\"https://www.facebook.com/login\")\n","        print(\"Inicia sesi√≥n manualmente...\")\n","\n","        try:\n","            # Espera a que aparezca el bot√≥n \"Inicio\"\n","            await page.wait_for_selector('a[role=\"link\"][aria-label=\"Inicio\"]', timeout=120_000)\n","            print(\"Bot√≥n 'Inicio' detectado. Navegando al feed principal...\")\n","\n","            # Haz clic en \"Inicio\"\n","            await page.click('a[role=\"link\"][aria-label=\"Inicio\"]')\n","\n","            # Guardar sesi√≥n\n","            await context.storage_state(path=\"facebook_sesion.json\")\n","            print(\"Sesi√≥n guardada correctamente en 'facebook_sesion.json'.\")\n","\n","        except Exception as e:\n","            print(f\"Error durante la navegaci√≥n tras login: {e}\")\n","\n","        print(\"Puedes cerrar el navegador manualmente cuando termines.\")\n","\n","# Ejecuta esto una vez:\n","await guardar_sesion_facebook()"]},{"cell_type":"markdown","id":"6e43f623","metadata":{"id":"6e43f623"},"source":["## üï∑Ô∏è Scraper: buscar publicaciones por consulta"]},{"cell_type":"code","execution_count":null,"id":"acff552e-530c-4b11-bf75-bf2a4ac06a62","metadata":{"id":"acff552e-530c-4b11-bf75-bf2a4ac06a62"},"outputs":[],"source":["async def scrape_facebook_posts(query, max_posts=50):\n","    async with async_playwright() as p:\n","        browser = await p.chromium.launch(headless=False)\n","        context = await browser.new_context(storage_state=\"facebook_sesion.json\")\n","        page = await context.new_page()\n","\n","        # Armar URL de b√∫squeda en Facebook\n","        url = f\"https://www.facebook.com/search/posts/?q={query.replace(' ', '%20')}\"\n","        await page.goto(url)\n","        print(f\"Buscando: {query}\")\n","        await asyncio.sleep(5)\n","\n","        posts = set()\n","        scrolls = 0\n","\n","        while len(posts) < max_posts and scrolls < 30:\n","            await page.mouse.wheel(0, 5000)\n","            await asyncio.sleep(3)\n","\n","            post_elements = await page.query_selector_all('[data-ad-preview=\"message\"]')\n","            for el in post_elements:\n","                try:\n","                    text = await el.inner_text()\n","                    posts.add(text.strip())\n","                except:\n","                    continue\n","\n","            scrolls += 1\n","\n","        await browser.close()\n","        return list(posts)[:max_posts]"]},{"cell_type":"markdown","id":"4ec7fe19","metadata":{"id":"4ec7fe19"},"source":["## ‚öôÔ∏è Par√°metros de b√∫squeda (ciudades y palabras clave)"]},{"cell_type":"code","execution_count":null,"id":"3a6969f0-90c5-480f-b314-7ae575eee715","metadata":{"id":"3a6969f0-90c5-480f-b314-7ae575eee715"},"outputs":[],"source":["ciudades = ['Tenerife', 'Barcelona', 'Madrid', 'Malaga', 'Gran Canaria', 'Seville', 'Valencia', 'Palma de Mallorca']\n","palabras_clave = [\"turismo\", \"viajar\", \"qu√© hacer\", \"actividades\", \"atracciones\",\n","    \"hoteles\", \"restaurantes\", \"experiencias\", \"vacaciones\", \"monumentos\", \"lugares\"]"]},{"cell_type":"markdown","id":"a1e13754","metadata":{"id":"a1e13754"},"source":["## üîÅ Orquestaci√≥n: combinaciones ciudad √ó palabra clave"]},{"cell_type":"code","execution_count":null,"id":"557da0a6-5f13-4491-b489-d3c7e17133d5","metadata":{"id":"557da0a6-5f13-4491-b489-d3c7e17133d5"},"outputs":[],"source":["async def recolectar_facebook_posts_por_combinacion():\n","    for ciudad in ciudades:\n","        print(f\"Procesando ciudad: {ciudad}\")\n","        posts_totales = []\n","\n","        for keyword in palabras_clave:\n","            await asyncio.sleep(3)\n","            query = f\"{ciudad} {keyword}\"\n","            print(f\"Buscando: {query}\")\n","\n","            try:\n","                posts = await scrape_facebook_posts(query, max_posts=200)\n","            except Exception as e:\n","                print(f\"Error con '{query}': {e}\")\n","                posts = []\n","\n","            for texto in posts:\n","                posts_totales.append({\n","                    \"ciudad\": ciudad,\n","                    \"keyword\": keyword,\n","                    \"query\": query,\n","                    \"texto\": texto\n","                })\n","\n","            print(f\"{len(posts)} posts extra√≠dos de '{query}'\")\n","\n","        # Guardar en archivo por ciudad\n","        timestamp = datetime.now().strftime(\"%Y%m%d\")\n","        filename = f\"{ciudad.replace(' ', '_')}_facebook_posts_{timestamp}.json\"\n","        with open(filename, \"w\", encoding=\"utf-8\") as f:\n","            json.dump(posts_totales, f, ensure_ascii=False, indent=2)\n","\n","        print(f\"Guardado {len(posts_totales)} posts en {filename}\\n\")"]},{"cell_type":"markdown","id":"27515762","metadata":{"id":"27515762"},"source":["## ‚ñ∂Ô∏è Ejecuci√≥n"]},{"cell_type":"code","execution_count":null,"id":"b854a08d-4ca0-460d-97c6-25eea17adca6","metadata":{"id":"b854a08d-4ca0-460d-97c6-25eea17adca6","outputId":"e5267548-fc0e-4841-c90b-b828de088146"},"outputs":[{"name":"stdout","output_type":"stream","text":["Procesando ciudad: Tenerife\n","Buscando: Tenerife turismo\n","Error con 'Tenerife turismo': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife turismo'\n","Buscando: Tenerife viajar\n","Error con 'Tenerife viajar': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife viajar'\n","Buscando: Tenerife qu√© hacer\n","Error con 'Tenerife qu√© hacer': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife qu√© hacer'\n","Buscando: Tenerife actividades\n","Error con 'Tenerife actividades': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife actividades'\n","Buscando: Tenerife atracciones\n","Error con 'Tenerife atracciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife atracciones'\n","Buscando: Tenerife hoteles\n","Error con 'Tenerife hoteles': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife hoteles'\n","Buscando: Tenerife restaurantes\n","Error con 'Tenerife restaurantes': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife restaurantes'\n","Buscando: Tenerife experiencias\n","Error con 'Tenerife experiencias': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife experiencias'\n","Buscando: Tenerife vacaciones\n","Error con 'Tenerife vacaciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife vacaciones'\n","Buscando: Tenerife monumentos\n","Error con 'Tenerife monumentos': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife monumentos'\n","Buscando: Tenerife lugares\n","Error con 'Tenerife lugares': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Tenerife lugares'\n","Guardado 0 posts en Tenerife_facebook_posts_20250916.json\n","\n","Procesando ciudad: Barcelona\n","Buscando: Barcelona turismo\n","Error con 'Barcelona turismo': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona turismo'\n","Buscando: Barcelona viajar\n","Error con 'Barcelona viajar': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona viajar'\n","Buscando: Barcelona qu√© hacer\n","Error con 'Barcelona qu√© hacer': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona qu√© hacer'\n","Buscando: Barcelona actividades\n","Error con 'Barcelona actividades': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona actividades'\n","Buscando: Barcelona atracciones\n","Error con 'Barcelona atracciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona atracciones'\n","Buscando: Barcelona hoteles\n","Error con 'Barcelona hoteles': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona hoteles'\n","Buscando: Barcelona restaurantes\n","Error con 'Barcelona restaurantes': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona restaurantes'\n","Buscando: Barcelona experiencias\n","Error con 'Barcelona experiencias': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona experiencias'\n","Buscando: Barcelona vacaciones\n","Error con 'Barcelona vacaciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona vacaciones'\n","Buscando: Barcelona monumentos\n","Error con 'Barcelona monumentos': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona monumentos'\n","Buscando: Barcelona lugares\n","Error con 'Barcelona lugares': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Barcelona lugares'\n","Guardado 0 posts en Barcelona_facebook_posts_20250916.json\n","\n","Procesando ciudad: Madrid\n","Buscando: Madrid turismo\n","Error con 'Madrid turismo': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid turismo'\n","Buscando: Madrid viajar\n","Error con 'Madrid viajar': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid viajar'\n","Buscando: Madrid qu√© hacer\n","Error con 'Madrid qu√© hacer': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid qu√© hacer'\n","Buscando: Madrid actividades\n","Error con 'Madrid actividades': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid actividades'\n","Buscando: Madrid atracciones\n","Error con 'Madrid atracciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid atracciones'\n","Buscando: Madrid hoteles\n","Error con 'Madrid hoteles': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid hoteles'\n","Buscando: Madrid restaurantes\n","Error con 'Madrid restaurantes': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid restaurantes'\n","Buscando: Madrid experiencias\n","Error con 'Madrid experiencias': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid experiencias'\n","Buscando: Madrid vacaciones\n","Error con 'Madrid vacaciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid vacaciones'\n","Buscando: Madrid monumentos\n","Error con 'Madrid monumentos': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid monumentos'\n","Buscando: Madrid lugares\n","Error con 'Madrid lugares': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Madrid lugares'\n","Guardado 0 posts en Madrid_facebook_posts_20250916.json\n","\n","Procesando ciudad: Malaga\n","Buscando: Malaga turismo\n","Error con 'Malaga turismo': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga turismo'\n","Buscando: Malaga viajar\n","Error con 'Malaga viajar': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga viajar'\n","Buscando: Malaga qu√© hacer\n","Error con 'Malaga qu√© hacer': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga qu√© hacer'\n","Buscando: Malaga actividades\n","Error con 'Malaga actividades': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga actividades'\n","Buscando: Malaga atracciones\n","Error con 'Malaga atracciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga atracciones'\n","Buscando: Malaga hoteles\n","Error con 'Malaga hoteles': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga hoteles'\n","Buscando: Malaga restaurantes\n","Error con 'Malaga restaurantes': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga restaurantes'\n","Buscando: Malaga experiencias\n","Error con 'Malaga experiencias': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga experiencias'\n","Buscando: Malaga vacaciones\n","Error con 'Malaga vacaciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga vacaciones'\n","Buscando: Malaga monumentos\n","Error con 'Malaga monumentos': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga monumentos'\n","Buscando: Malaga lugares\n","Error con 'Malaga lugares': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Malaga lugares'\n","Guardado 0 posts en Malaga_facebook_posts_20250916.json\n","\n","Procesando ciudad: Gran Canaria\n","Buscando: Gran Canaria turismo\n","Error con 'Gran Canaria turismo': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria turismo'\n","Buscando: Gran Canaria viajar\n","Error con 'Gran Canaria viajar': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria viajar'\n","Buscando: Gran Canaria qu√© hacer\n","Error con 'Gran Canaria qu√© hacer': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria qu√© hacer'\n","Buscando: Gran Canaria actividades\n","Error con 'Gran Canaria actividades': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria actividades'\n","Buscando: Gran Canaria atracciones\n","Error con 'Gran Canaria atracciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria atracciones'\n","Buscando: Gran Canaria hoteles\n","Error con 'Gran Canaria hoteles': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria hoteles'\n","Buscando: Gran Canaria restaurantes\n","Error con 'Gran Canaria restaurantes': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria restaurantes'\n","Buscando: Gran Canaria experiencias\n","Error con 'Gran Canaria experiencias': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria experiencias'\n","Buscando: Gran Canaria vacaciones\n","Error con 'Gran Canaria vacaciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria vacaciones'\n","Buscando: Gran Canaria monumentos\n","Error con 'Gran Canaria monumentos': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria monumentos'\n","Buscando: Gran Canaria lugares\n","Error con 'Gran Canaria lugares': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Gran Canaria lugares'\n","Guardado 0 posts en Gran_Canaria_facebook_posts_20250916.json\n","\n","Procesando ciudad: Seville\n","Buscando: Seville turismo\n","Error con 'Seville turismo': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville turismo'\n","Buscando: Seville viajar\n","Error con 'Seville viajar': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville viajar'\n","Buscando: Seville qu√© hacer\n","Error con 'Seville qu√© hacer': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville qu√© hacer'\n","Buscando: Seville actividades\n","Error con 'Seville actividades': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville actividades'\n","Buscando: Seville atracciones\n","Error con 'Seville atracciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville atracciones'\n","Buscando: Seville hoteles\n","Error con 'Seville hoteles': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville hoteles'\n","Buscando: Seville restaurantes\n","Error con 'Seville restaurantes': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville restaurantes'\n","Buscando: Seville experiencias\n","Error con 'Seville experiencias': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville experiencias'\n","Buscando: Seville vacaciones\n","Error con 'Seville vacaciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville vacaciones'\n","Buscando: Seville monumentos\n","Error con 'Seville monumentos': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville monumentos'\n","Buscando: Seville lugares\n","Error con 'Seville lugares': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Seville lugares'\n","Guardado 0 posts en Seville_facebook_posts_20250916.json\n","\n","Procesando ciudad: Valencia\n","Buscando: Valencia turismo\n","Error con 'Valencia turismo': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia turismo'\n","Buscando: Valencia viajar\n","Error con 'Valencia viajar': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia viajar'\n","Buscando: Valencia qu√© hacer\n","Error con 'Valencia qu√© hacer': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia qu√© hacer'\n","Buscando: Valencia actividades\n","Error con 'Valencia actividades': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia actividades'\n","Buscando: Valencia atracciones\n","Error con 'Valencia atracciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia atracciones'\n","Buscando: Valencia hoteles\n","Error con 'Valencia hoteles': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia hoteles'\n","Buscando: Valencia restaurantes\n","Error con 'Valencia restaurantes': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia restaurantes'\n","Buscando: Valencia experiencias\n","Error con 'Valencia experiencias': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia experiencias'\n","Buscando: Valencia vacaciones\n","Error con 'Valencia vacaciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia vacaciones'\n","Buscando: Valencia monumentos\n","Error con 'Valencia monumentos': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia monumentos'\n","Buscando: Valencia lugares\n","Error con 'Valencia lugares': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Valencia lugares'\n","Guardado 0 posts en Valencia_facebook_posts_20250916.json\n","\n","Procesando ciudad: Palma de Mallorca\n","Buscando: Palma de Mallorca turismo\n","Error con 'Palma de Mallorca turismo': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca turismo'\n","Buscando: Palma de Mallorca viajar\n","Error con 'Palma de Mallorca viajar': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca viajar'\n","Buscando: Palma de Mallorca qu√© hacer\n","Error con 'Palma de Mallorca qu√© hacer': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca qu√© hacer'\n","Buscando: Palma de Mallorca actividades\n","Error con 'Palma de Mallorca actividades': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca actividades'\n","Buscando: Palma de Mallorca atracciones\n","Error con 'Palma de Mallorca atracciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca atracciones'\n","Buscando: Palma de Mallorca hoteles\n","Error con 'Palma de Mallorca hoteles': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca hoteles'\n","Buscando: Palma de Mallorca restaurantes\n","Error con 'Palma de Mallorca restaurantes': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca restaurantes'\n","Buscando: Palma de Mallorca experiencias\n","Error con 'Palma de Mallorca experiencias': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca experiencias'\n","Buscando: Palma de Mallorca vacaciones\n","Error con 'Palma de Mallorca vacaciones': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca vacaciones'\n","Buscando: Palma de Mallorca monumentos\n","Error con 'Palma de Mallorca monumentos': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca monumentos'\n","Buscando: Palma de Mallorca lugares\n","Error con 'Palma de Mallorca lugares': [Errno 2] No such file or directory: 'facebook_sesion.json'\n","0 posts extra√≠dos de 'Palma de Mallorca lugares'\n","Guardado 0 posts en Palma_de_Mallorca_facebook_posts_20250916.json\n","\n"]}],"source":["await recolectar_facebook_posts_por_combinacion()"]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python [conda env:base] *","language":"python","name":"conda-base-py"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.7"}},"nbformat":4,"nbformat_minor":5}
{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "902da9e1-4ca9-4e84-8fb8-43a694ace440",
   "metadata": {},
   "source": [
    "#  üìà  GOOGLE TRENDS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f413695c-e241-47b1-98fe-2861042c9db1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pytrends in c:\\users\\karina\\anaconda3\\lib\\site-packages (4.9.2)\n",
      "Requirement already satisfied: requests>=2.0 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from pytrends) (2.32.3)\n",
      "Requirement already satisfied: pandas>=0.25 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from pytrends) (2.2.2)\n",
      "Requirement already satisfied: lxml in c:\\users\\karina\\anaconda3\\lib\\site-packages (from pytrends) (5.2.1)\n",
      "Requirement already satisfied: numpy>=1.26.0 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from pandas>=0.25->pytrends) (1.26.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from pandas>=0.25->pytrends) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from pandas>=0.25->pytrends) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from pandas>=0.25->pytrends) (2023.3)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from requests>=2.0->pytrends) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from requests>=2.0->pytrends) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from requests>=2.0->pytrends) (2.2.3)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from requests>=2.0->pytrends) (2024.8.30)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas>=0.25->pytrends) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution ~ympy (C:\\Users\\Karina\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~ympy (C:\\Users\\Karina\\anaconda3\\Lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution ~ympy (C:\\Users\\Karina\\anaconda3\\Lib\\site-packages)\n"
     ]
    }
   ],
   "source": [
    "pip install pytrends"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "78b591f7-0907-45d1-9f73-9289d039f22e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pytrends.request import TrendReq\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from datetime import datetime\n",
    "import time\n",
    "from datetime import datetime, timedelta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "63d3c65a-926b-422f-b037-fdd539786602",
   "metadata": {},
   "outputs": [],
   "source": [
    "pytrends = TrendReq(hl='en-US', tz=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e5ecea9-d48f-415a-baf8-d1b686b49eeb",
   "metadata": {},
   "source": [
    "### 1.Recomendaciones por temporada "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "f0664a59-1191-4e7c-95ef-be8a8276f4c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 1/40: ['turismo Barcelona', 'vacaciones Barcelona', 'viajar a Barcelona', 'qu√© ver en Barcelona', 'hoteles en Barcelona']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 2/40: ['tourism Barcelona', 'vacation Barcelona', 'travel to Barcelona', 'things to do in Barcelona', 'hotels in Barcelona']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 3/40: ['tourisme Barcelona', 'vacances Barcelona', 'voyager √† Barcelona', 'que faire √† Barcelona', 'h√¥tels √† Barcelona']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 4/40: ['tourismus Barcelona', 'urlaub Barcelona', 'reisen nach Barcelona', 'sehensw√ºrdigkeiten in Barcelona', 'hotels in Barcelona']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 5/40: ['turismo Barcelona', 'vacanze Barcelona', 'viaggiare a Barcelona', 'cosa vedere a Barcelona', 'hotel a Barcelona']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 6/40: ['turismo Madrid', 'vacaciones Madrid', 'viajar a Madrid', 'qu√© ver en Madrid', 'hoteles en Madrid']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 7/40: ['tourism Madrid', 'vacation Madrid', 'travel to Madrid', 'things to do in Madrid', 'hotels in Madrid']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 8/40: ['tourisme Madrid', 'vacances Madrid', 'voyager √† Madrid', 'que faire √† Madrid', 'h√¥tels √† Madrid']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 9/40: ['tourismus Madrid', 'urlaub Madrid', 'reisen nach Madrid', 'sehensw√ºrdigkeiten in Madrid', 'hotels in Madrid']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 10/40: ['turismo Madrid', 'vacanze Madrid', 'viaggiare a Madrid', 'cosa vedere a Madrid', 'hotel a Madrid']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 11/40: ['turismo M√°laga', 'vacaciones M√°laga', 'viajar a M√°laga', 'qu√© ver en M√°laga', 'hoteles en M√°laga']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 12/40: ['tourism M√°laga', 'vacation M√°laga', 'travel to M√°laga', 'things to do in M√°laga', 'hotels in M√°laga']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 13/40: ['tourisme M√°laga', 'vacances M√°laga', 'voyager √† M√°laga', 'que faire √† M√°laga', 'h√¥tels √† M√°laga']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 14/40: ['tourismus M√°laga', 'urlaub M√°laga', 'reisen nach M√°laga', 'sehensw√ºrdigkeiten in M√°laga', 'hotels in M√°laga']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 15/40: ['turismo M√°laga', 'vacanze M√°laga', 'viaggiare a M√°laga', 'cosa vedere a M√°laga', 'hotel a M√°laga']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 16/40: ['turismo Sevilla', 'vacaciones Sevilla', 'viajar a Sevilla', 'qu√© ver en Sevilla', 'hoteles en Sevilla']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 17/40: ['tourism Sevilla', 'vacation Sevilla', 'travel to Sevilla', 'things to do in Sevilla', 'hotels in Sevilla']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 18/40: ['tourisme Sevilla', 'vacances Sevilla', 'voyager √† Sevilla', 'que faire √† Sevilla', 'h√¥tels √† Sevilla']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 19/40: ['tourismus Sevilla', 'urlaub Sevilla', 'reisen nach Sevilla', 'sehensw√ºrdigkeiten in Sevilla', 'hotels in Sevilla']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 20/40: ['turismo Sevilla', 'vacanze Sevilla', 'viaggiare a Sevilla', 'cosa vedere a Sevilla', 'hotel a Sevilla']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 21/40: ['turismo Valencia', 'vacaciones Valencia', 'viajar a Valencia', 'qu√© ver en Valencia', 'hoteles en Valencia']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 22/40: ['tourism Valencia', 'vacation Valencia', 'travel to Valencia', 'things to do in Valencia', 'hotels in Valencia']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 23/40: ['tourisme Valencia', 'vacances Valencia', 'voyager √† Valencia', 'que faire √† Valencia', 'h√¥tels √† Valencia']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 24/40: ['tourismus Valencia', 'urlaub Valencia', 'reisen nach Valencia', 'sehensw√ºrdigkeiten in Valencia', 'hotels in Valencia']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 25/40: ['turismo Valencia', 'vacanze Valencia', 'viaggiare a Valencia', 'cosa vedere a Valencia', 'hotel a Valencia']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 26/40: ['turismo Tenerife', 'vacaciones Tenerife', 'viajar a Tenerife', 'qu√© ver en Tenerife', 'hoteles en Tenerife']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 27/40: ['tourism Tenerife', 'vacation Tenerife', 'travel to Tenerife', 'things to do in Tenerife', 'hotels in Tenerife']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 28/40: ['tourisme Tenerife', 'vacances Tenerife', 'voyager √† Tenerife', 'que faire √† Tenerife', 'h√¥tels √† Tenerife']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 29/40: ['tourismus Tenerife', 'urlaub Tenerife', 'reisen nach Tenerife', 'sehensw√ºrdigkeiten in Tenerife', 'hotels in Tenerife']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 30/40: ['turismo Tenerife', 'vacanze Tenerife', 'viaggiare a Tenerife', 'cosa vedere a Tenerife', 'hotel a Tenerife']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 31/40: ['turismo Gran Canaria', 'vacaciones Gran Canaria', 'viajar a Gran Canaria', 'qu√© ver en Gran Canaria', 'hoteles en Gran Canaria']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 32/40: ['tourism Gran Canaria', 'vacation Gran Canaria', 'travel to Gran Canaria', 'things to do in Gran Canaria', 'hotels in Gran Canaria']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 33/40: ['tourisme Gran Canaria', 'vacances Gran Canaria', 'voyager √† Gran Canaria', 'que faire √† Gran Canaria', 'h√¥tels √† Gran Canaria']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 34/40: ['tourismus Gran Canaria', 'urlaub Gran Canaria', 'reisen nach Gran Canaria', 'sehensw√ºrdigkeiten in Gran Canaria', 'hotels in Gran Canaria']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 35/40: ['turismo Gran Canaria', 'vacanze Gran Canaria', 'viaggiare a Gran Canaria', 'cosa vedere a Gran Canaria', 'hotel a Gran Canaria']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 36/40: ['turismo Palma de Mallorca', 'vacaciones Palma de Mallorca', 'viajar a Palma de Mallorca', 'qu√© ver en Palma de Mallorca', 'hoteles en Palma de Mallorca']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 37/40: ['tourism Palma de Mallorca', 'vacation Palma de Mallorca', 'travel to Palma de Mallorca', 'things to do in Palma de Mallorca', 'hotels in Palma de Mallorca']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 38/40: ['tourisme Palma de Mallorca', 'vacances Palma de Mallorca', 'voyager √† Palma de Mallorca', 'que faire √† Palma de Mallorca', 'h√¥tels √† Palma de Mallorca']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 39/40: ['tourismus Palma de Mallorca', 'urlaub Palma de Mallorca', 'reisen nach Palma de Mallorca', 'sehensw√ºrdigkeiten in Palma de Mallorca', 'hotels in Palma de Mallorca']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚è≥ Consultando grupo 40/40: ['turismo Palma de Mallorca', 'vacanze Palma de Mallorca', 'viaggiare a Palma de Mallorca', 'cosa vedere a Palma de Mallorca', 'hotel a Palma de Mallorca']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Karina\\anaconda3\\Lib\\site-packages\\pytrends\\request.py:260: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df = df.fillna(False)\n",
      "C:\\Users\\Karina\\AppData\\Local\\Temp\\ipykernel_42520\\3646524899.py:69: FutureWarning: 'M' is deprecated and will be removed in a future version, please use 'ME' instead.\n",
      "  interes_ciudades_mensual = interes_ciudades.resample('M').mean()\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Lista de ciudades\n",
    "ciudades = [\n",
    "    \"Barcelona\", \"Madrid\", \"M√°laga\", \"Sevilla\",\n",
    "    \"Valencia\", \"Tenerife\", \"Gran Canaria\", \"Palma de Mallorca\"\n",
    "]\n",
    "\n",
    "# Palabras clave por idioma\n",
    "keywords_por_idioma = {\n",
    "    \"es\": [\"turismo\", \"vacaciones\", \"viajar a\", \"qu√© ver en\", \"hoteles en\"],\n",
    "    \"en\": [\"tourism\", \"vacation\", \"travel to\", \"things to do in\", \"hotels in\"],\n",
    "    \"fr\": [\"tourisme\", \"vacances\", \"voyager √†\", \"que faire √†\", \"h√¥tels √†\"],\n",
    "    \"de\": [\"tourismus\", \"urlaub\", \"reisen nach\", \"sehensw√ºrdigkeiten in\", \"hotels in\"],\n",
    "    \"it\": [\"turismo\", \"vacanze\", \"viaggiare a\", \"cosa vedere a\", \"hotel a\"]\n",
    "}\n",
    "\n",
    "# Crear combinaciones\n",
    "combinaciones = []\n",
    "mapa_ciudad_combinaciones = {}\n",
    "\n",
    "for ciudad in ciudades:\n",
    "    combinaciones_ciudad = []\n",
    "    for idioma, frases in keywords_por_idioma.items():\n",
    "        for frase in frases:\n",
    "            combinacion = f\"{frase} {ciudad}\"\n",
    "            combinaciones.append(combinacion)\n",
    "            combinaciones_ciudad.append(combinacion)\n",
    "    mapa_ciudad_combinaciones[ciudad] = combinaciones_ciudad\n",
    "\n",
    "# Dividir en bloques de 5\n",
    "def dividir_lista(lista, tama√±o=5):\n",
    "    return [lista[i:i + tama√±o] for i in range(0, len(lista), tama√±o)]\n",
    "\n",
    "bloques = dividir_lista(combinaciones, tama√±o=5)\n",
    "timeframe = '2022-01-01 2025-07-24'\n",
    "dataframes = []\n",
    "\n",
    "# Cargar los datos en bloques con delay y control de errores\n",
    "for i, grupo in enumerate(bloques):\n",
    "    try:\n",
    "        print(f\"‚è≥ Consultando grupo {i + 1}/{len(bloques)}: {grupo}\")\n",
    "        pytrends.build_payload(grupo, timeframe=timeframe, cat=67)\n",
    "        data = pytrends.interest_over_time()\n",
    "        if not data.empty:\n",
    "            dataframes.append(data[grupo])\n",
    "            # Guardado progresivo\n",
    "            parcial = pd.concat(dataframes, axis=1)\n",
    "            parcial = parcial.loc[:, ~parcial.columns.duplicated()]\n",
    "            parcial.to_csv(\"parcial.csv\")\n",
    "    except Exception as e:\n",
    "        print(f\"‚ö†Ô∏è Error en grupo {i + 1}: {e}\")\n",
    "    time.sleep(5)  # Espera entre peticiones\n",
    "\n",
    "# Combinar todos los resultados\n",
    "datos_combinados = pd.concat(dataframes, axis=1)\n",
    "datos_combinados = datos_combinados.loc[:, ~datos_combinados.columns.duplicated()]  # eliminar duplicados\n",
    "\n",
    "# Calcular promedio por ciudad\n",
    "interes_ciudades = pd.DataFrame()\n",
    "\n",
    "for ciudad, frases in mapa_ciudad_combinaciones.items():\n",
    "    frases_presentes = [col for col in frases if col in datos_combinados.columns]\n",
    "    if frases_presentes:\n",
    "        interes_ciudades[ciudad] = datos_combinados[frases_presentes].mean(axis=1)\n",
    "\n",
    "# ‚úÖ Asegurarse de que el √≠ndice es de tipo datetime\n",
    "interes_ciudades.index = pd.to_datetime(interes_ciudades.index)\n",
    "        \n",
    "# Agrupar por mes\n",
    "interes_ciudades_mensual = interes_ciudades.resample('M').mean()\n",
    "\n",
    "# Guardar resultados\n",
    "interes_ciudades.to_csv(\"interes_turistico_multilingue_por_ciudad.csv\")\n",
    "interes_ciudades_mensual.to_csv(\"interes_turistico_mensual_por_ciudad.csv\")\n",
    "\n",
    "# Mostrar gr√°fico mensual\n",
    "interes_ciudades_mensual.plot(figsize=(14, 6))\n",
    "plt.title(\"Inter√©s tur√≠stico mensual por ciudad (2022 - 2025)\\nCombinaciones en 5 idiomas\")\n",
    "plt.ylabel(\"Inter√©s relativo promedio\")\n",
    "plt.xlabel(\"Mes\")\n",
    "plt.legend(title=\"Ciudad\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "389db6f1-be12-4981-bf81-1a7268fc0828",
   "metadata": {},
   "source": [
    "### 2.Recomendaciones por nacionalidad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8cb3208c-2ca0-4273-9a88-8ddb4699038f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "üîç Buscando: Barcelona\n",
      "üîç Buscando: Madrid\n",
      "üîç Buscando: M√°laga\n",
      "üîç Buscando: Sevilla\n",
      "üîç Buscando: Valencia\n",
      "üîç Buscando: Tenerife\n",
      "üîç Buscando: Gran Canaria\n",
      "üîç Buscando: Palma de Mallorca\n",
      "‚úÖ Archivo global generado: interes_turistico_global_por_pais.csv\n",
      "                Barcelona  Madrid  M√°laga  Sevilla  Valencia  Tenerife  \\\n",
      "geoName                                                                  \n",
      "Afghanistan             1       0       0        0         0         0   \n",
      "Albania                 2       1       0        1         1         2   \n",
      "Algeria                 0       1       0        0         0         0   \n",
      "American Samoa          0       0       0        0         0         0   \n",
      "Andorra               100      53       0       23        56        12   \n",
      "\n",
      "                Gran Canaria  Palma de Mallorca  \n",
      "geoName                                          \n",
      "Afghanistan                0                  0  \n",
      "Albania                    1                 19  \n",
      "Algeria                    0                  0  \n",
      "American Samoa             0                  0  \n",
      "Andorra                   16                 95  \n"
     ]
    }
   ],
   "source": [
    "# Lista de ciudades (usadas directamente como t√©rminos de b√∫squeda)\n",
    "ciudades = [\n",
    "    \"Barcelona\",\n",
    "    \"Madrid\",\n",
    "    \"M√°laga\",\n",
    "    \"Sevilla\",\n",
    "    \"Valencia\",\n",
    "    \"Tenerife\",\n",
    "    \"Gran Canaria\",\n",
    "    \"Palma de Mallorca\"\n",
    "]\n",
    "\n",
    "# Funci√≥n para obtener inter√©s por pa√≠s (global)\n",
    "def interes_geografico_global(termino, desde='2022-01-01', hasta=None):\n",
    "    if hasta is None:\n",
    "        hasta = datetime.today().strftime('%Y-%m-%d')\n",
    "    timeframe = f\"{desde} {hasta}\"\n",
    "    \n",
    "    try:\n",
    "        pytrends.build_payload([termino], timeframe=timeframe, geo='', cat=208)  # Categor√≠a viajes\n",
    "        data = pytrends.interest_by_region(resolution='COUNTRY', inc_low_vol=True, inc_geo_code=False)\n",
    "        \n",
    "        if termino in data.columns:\n",
    "            return data[[termino]]\n",
    "        else:\n",
    "            return pd.DataFrame()\n",
    "    except Exception as e:\n",
    "        print(f\"‚ùå Error con '{termino}': {e}\")\n",
    "        return pd.DataFrame()\n",
    "\n",
    "# Construir tabla combinada\n",
    "df_total = pd.DataFrame()\n",
    "\n",
    "for ciudad in ciudades:\n",
    "    print(f\"üîç Buscando: {ciudad}\")\n",
    "    df_ciudad = interes_geografico_global(ciudad)\n",
    "    \n",
    "    if not df_ciudad.empty:\n",
    "        df_ciudad = df_ciudad.rename(columns={ciudad: ciudad})\n",
    "        if df_total.empty:\n",
    "            df_total = df_ciudad\n",
    "        else:\n",
    "            df_total = df_total.join(df_ciudad, how='outer')\n",
    "    else:\n",
    "        print(f\"‚ö†Ô∏è Sin datos globales para {ciudad}\")\n",
    "\n",
    "# Limpiar\n",
    "df_total = df_total.dropna(how='all').fillna(0)\n",
    "\n",
    "# Guardar CSV global\n",
    "df_total.to_csv(\"recomendaciones_por_pais.csv\")\n",
    "\n",
    "print(\"‚úÖ Archivo global generado: interes_turistico_global_por_pais.csv\")\n",
    "print(df_total.head())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bab0168a-3298-473f-aef4-2097aa5b1bf5",
   "metadata": {},
   "source": [
    "### 3. Tendencias de b√∫squeda tur√≠stica por ciudad ‚Äì Actividades e intereses relacionados "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7fedb9ad-abe7-401d-8e22-9eb3b33b9b50",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "üîç Buscando t√©rminos relacionados para: Barcelona\n",
      "üîç Buscando t√©rminos relacionados para: Madrid\n",
      "üîç Buscando t√©rminos relacionados para: M√°laga\n",
      "üîç Buscando t√©rminos relacionados para: Sevilla\n",
      "üîç Buscando t√©rminos relacionados para: Valencia\n",
      "üîç Buscando t√©rminos relacionados para: Tenerife\n",
      "üîç Buscando t√©rminos relacionados para: Gran Canaria\n",
      "üîç Buscando t√©rminos relacionados para: Palma de Mallorca\n",
      "üîç Buscando t√©rminos relacionados para: Granada\n",
      "\n",
      "‚úÖ Archivo generado: busquedas_relacionadas_actuales.csv\n",
      "                       query  value     ciudad\n",
      "0          sagrada barcelona    100  Barcelona\n",
      "1  familia sagrada barcelona     86  Barcelona\n",
      "2            familia sagrada     81  Barcelona\n",
      "3            sagrada familia     80  Barcelona\n",
      "4            hotel barcelona     41  Barcelona\n"
     ]
    }
   ],
   "source": [
    "# Lista de ciudades\n",
    "ciudades = [\n",
    "    \"Barcelona\", \"Madrid\", \"M√°laga\", \"Sevilla\",\n",
    "    \"Valencia\", \"Tenerife\", \"Gran Canaria\", \"Palma de Mallorca\", \"Granada\"\n",
    "]\n",
    "\n",
    "# Funci√≥n para obtener b√∫squedas relacionadas actuales\n",
    "def busquedas_relacionadas_actuales(ciudad):\n",
    "    try:\n",
    "        pytrends.build_payload([ciudad], timeframe='today 3-m', geo='', cat=208)\n",
    "        related = pytrends.related_queries()\n",
    "        if ciudad in related or related[ciudad].get('top') is not None:\n",
    "            df = related[ciudad]['top'].copy()\n",
    "            df[\"ciudad\"] = ciudad\n",
    "            return df\n",
    "        else:\n",
    "            return pd.DataFrame()\n",
    "    except Exception as e:\n",
    "        print(f\"‚ùå Error con {ciudad}: {e}\")\n",
    "        return pd.DataFrame()\n",
    "\n",
    "# Ejecutar para cada ciudad\n",
    "todas_relacionadas = pd.DataFrame()\n",
    "\n",
    "for ciudad in ciudades:\n",
    "    print(f\"üîç Buscando t√©rminos relacionados para: {ciudad}\")\n",
    "    df = busquedas_relacionadas_actuales(ciudad)\n",
    "    if not df.empty:\n",
    "        todas_relacionadas = pd.concat([todas_relacionadas, df], ignore_index=True)\n",
    "    else:\n",
    "        print(f\"‚ö†Ô∏è No hay datos para {ciudad}\")\n",
    "    time.sleep(1.5)  # Protecci√≥n contra bloqueo\n",
    "\n",
    "# Guardar resultado\n",
    "nombre_archivo = \"busquedas_relacionadas_actuales.csv\"\n",
    "todas_relacionadas.to_csv(nombre_archivo, index=False)\n",
    "\n",
    "print(f\"\\n‚úÖ Archivo generado: {nombre_archivo}\")\n",
    "print(todas_relacionadas.head())"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

{"cells":[{"cell_type":"markdown","id":"8ea052c9","metadata":{"id":"8ea052c9"},"source":["# üéüÔ∏è Get Your Guide\n","\n","- **Setup:** importa Selenium crea el `driver` de Chrome con esperas.\n","- **Abrir & UX:** abre la URL objetivo; acepta **cookies**.\n","- **Preparaci√≥n:** ejecuta **scroll** / **paginaci√≥n** para cargar m√°s elementos.\n","- **Scraping:** recorre tarjetas de **rese√±as** y extrae campos clave (puntuaci√≥n, fecha, texto...).\n","- **Guardado:** exporta los resultados a **CSV** y **cierra** el navegador."]},{"cell_type":"markdown","id":"737303ce","metadata":{"id":"737303ce"},"source":["## üß∞ Librer√≠as e importaciones"]},{"cell_type":"code","execution_count":1,"id":"5159ab42","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":393},"id":"5159ab42","executionInfo":{"status":"error","timestamp":1758138890562,"user_tz":-120,"elapsed":39,"user":{"displayName":"Thalia Camargo","userId":"14090234297230241374"}},"outputId":"35c3002e-f1bb-4b33-9b72-3792fa1ade10"},"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'playwright'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-3516763469.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnest_asyncio\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0masyncio\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mplaywright\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_api\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0masync_playwright\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcsv\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mre\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'playwright'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["import nest_asyncio\n","import asyncio\n","from playwright.async_api import async_playwright\n","import csv\n","import re\n","\n","nest_asyncio.apply()"]},{"cell_type":"markdown","id":"e209b7fa","metadata":{"id":"e209b7fa"},"source":["## üß© Helpers / utilidades"]},{"cell_type":"code","execution_count":null,"id":"728b81ce","metadata":{"id":"728b81ce","executionInfo":{"status":"aborted","timestamp":1758138890603,"user_tz":-120,"elapsed":1,"user":{"displayName":"Thalia Camargo","userId":"14090234297230241374"}}},"outputs":[],"source":["def limpiar_num_comentarios(texto):\n","    if texto:\n","        num = re.sub(r'[^\\d]', '', texto)\n","        return int(num) if num.isdigit() else None\n","    return None\n","\n","async def main():\n","    url = \"https://www.getyourguide.es/valencia-l49/\"\n","\n","    async with async_playwright() as p:\n","        browser = await p.chromium.launch(headless=False)\n","        context = await browser.new_context()\n","        await context.clear_"]},{"cell_type":"markdown","id":"b20a1160","metadata":{"id":"b20a1160"},"source":["## üç™‚úÖ UX: aceptar cookies (si aparece)"]},{"cell_type":"code","execution_count":null,"id":"fa3aa491","metadata":{"id":"fa3aa491","executionInfo":{"status":"aborted","timestamp":1758138890604,"user_tz":-120,"elapsed":2,"user":{"displayName":"Thalia Camargo","userId":"14090234297230241374"}}},"outputs":[],"source":["        await context.clear_cookies()\n","        page = await context.new_page()\n","        page.set_default_timeout(30000)\n","\n","        await page.goto(url)\n","\n","        # Intentar cerrar banner de\n","        # Intentar cerrar banner de cookies\n","        try:\n","            await page.click('button:has-text(\"Aceptar\")', timeout=5000)\n","            print(\" Bot√≥n de\n","            print(\" Bot√≥n de cookies aceptado.\")\n","        except:\n","            print(\" No se mostr√≥ banner de\n","            print(\" No se mostr√≥ banner de cookies.\")\n","\n","        # Esperar a que cargue al menos una tarjeta\n","        try:\n","            await page.wait_for_selector('a.vertical-activity-card__container', timeout=30000)\n","            print(\" Tarjetas detectadas en la p√°gina.\")\n","        except:\n","            print(\" No se detectaron tarjetas en el tiempo esperado.\")\n","            await browser.close()\n","            return\n","\n","        # Pulsar repetidamente el bot√≥n \"Ver m√°s\" mientras est√© activo\n","        while True:\n","            try:\n","                boton_ver_mas = await page.query_selector('button:has-text(\"Ver m√°s\")')\n","                if not boton_ver_mas:\n","                    print(\" No se encontr√≥ bot√≥n 'Ver m√°s', finalizando carga.\")\n","                    break\n","\n","                is_disabled = await boton_ver_mas.get_property('disabled')\n","                if await is_disabled.json_value():\n","                    print(\" Bot√≥n 'Ver m√°s' est√° deshabilitado, finalizando carga.\")\n","                    break\n","\n","                print(\" Pulsando bot√≥n 'Ver m√°s' para"]},{"cell_type":"markdown","id":"99216cc3","metadata":{"id":"99216cc3"},"source":["## ‚¨áÔ∏è‚Üª Preparaci√≥n: scroll y paginaci√≥n"]},{"cell_type":"code","execution_count":null,"id":"ff804fd9","metadata":{"id":"ff804fd9","executionInfo":{"status":"aborted","timestamp":1758138890619,"user_tz":-120,"elapsed":16,"user":{"displayName":"Thalia Camargo","userId":"14090234297230241374"}}},"outputs":[],"source":["                print(\" Pulsando bot√≥n 'Ver m√°s' para cargar m√°s resultados...\")\n","                await boton_ver_mas.click()\n","                await page.wait_for_timeout(3000)  # Esperar a que carguen resultados nuevos\n","\n","            except Exception as e:\n","                print(f\" Error al intentar pulsar 'Ver m√°s': {e}\")\n","                break\n","\n","        # Hacer\n","        # Hacer scroll para forzar carga adicional (opcional)\n","        tarjetas_previas = 0\n","        max_\n","        max_scrolls = 50\n","        for i in range(max_\n","        for i in range(max_scrolls):\n","            await page.mouse.wheel(0, 3000)\n","            await page.wait_for_timeout(2500)\n","            tarjetas = await page.query_selector_all('a.vertical-activity-card__container')\n","            print(f\" Scroll {i+1}: tarjetas encontradas = {len(tarjetas)}\")\n","            if len(tarjetas) == tarjetas_previas:\n","                break\n","            tarjetas_previas = len(tarjetas)\n","\n","        # Extraer datos de las tarjetas\n","        experiencias = []\n","        for tarjeta in tarjetas:\n","            try:\n","                nombre_el = await tarjeta.query_selector('h3[data-test-id=\"activity-card-title\"] span')\n","                nombre = await nombre_el.inner_text() if nombre_el else None\n","            except:\n","                nombre = None\n","\n","            try:\n","                puntuacion_el = await tarjeta.query_selector('div.c-activity-rating__rating')\n","                puntuacion = await puntuacion_el.inner_text() if puntuacion_el else None\n","            except:\n","                puntuacion = None\n","\n","            try:\n","                comentarios_el = await tarjeta.query_selector('div.c-activity-rating__label')\n","                num_comentarios_texto = await comentarios_el.inner_text() if comentarios_el else None\n","                num_comentarios = limpiar_num_comentarios(num_comentarios_texto)\n","            except:\n","                num_comentarios = None\n","\n","            try:\n","                precio_el = await tarjeta.query_selector('span.activity-price__text-price')\n","                precio = await precio_el.inner_text() if precio_el else None\n","            except:\n","                precio = None\n","\n","            try:\n","                imagen_el = await tarjeta.query_selector('img.c-image__img')\n","                imagen = await imagen_el.get_attribute('src') if imagen_el else None\n","            except:\n","                imagen = None\n","\n","            try:\n","                enlace = await tarjeta.get_attribute('href')\n","                if enlace:\n","                    enlace = \"https://www.getyourguide.es\" + enlace\n","            except:\n","                enlace = None\n","\n","            experiencias.append({\n","                \"nombre\": nombre,\n","                \"puntuacion\": puntuacion,\n","                \"num_comentarios\": num_comentarios,\n","                \"precio\": precio,\n","                \"imagen\": imagen,\n","                \"enlace\": enlace\n","            })\n","\n","        # Guardar CSV correctamente\n","        archivo = \"experiencias_getyourguide_Valencia.csv\"\n","        with open(archivo, mode='w', newline='', encoding='utf-8') as f:\n","            campos = [\"nombre\", \"puntuacion\", \"num_comentarios\", \"precio\", \"imagen\", \"enlace\"]\n","            writer ="]},{"cell_type":"markdown","id":"5cfc0b4b","metadata":{"id":"5cfc0b4b"},"source":["## üíæ Guardado de resultados"]},{"cell_type":"code","execution_count":null,"id":"822a1b70","metadata":{"id":"822a1b70","executionInfo":{"status":"aborted","timestamp":1758138890620,"user_tz":-120,"elapsed":2,"user":{"displayName":"Thalia Camargo","userId":"14090234297230241374"}}},"outputs":[],"source":["            writer = csv.DictWriter(f, fieldnames=campos)\n","            writer.writeheader()\n","            writer.\n","            writer.writerows(experiencias)\n","\n","        print(f\" Scraping completado. {len(experiencias)} experiencias guardadas en {archivo}\")\n","        await browser.close()\n","\n","asyncio.run(main())"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.2"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}
{"cells":[{"cell_type":"markdown","id":"c5842e69","metadata":{"id":"c5842e69"},"source":["# üìù GYG Reviews\n","\n"]},{"cell_type":"markdown","id":"45ce6fd0","metadata":{"id":"45ce6fd0"},"source":["## üß∞ Librer√≠as e importaciones"]},{"cell_type":"code","execution_count":null,"id":"2d0911ea","metadata":{"id":"2d0911ea"},"outputs":[],"source":["import time\n","import os\n","import pandas as pd\n","from selenium import webdriver\n","from selenium.webdriver.common.by import By\n","from selenium.webdriver.chrome.service import Service\n","from selenium.webdriver.chrome.options import Options\n","from selenium.webdriver.support.ui import WebDriverWait\n","from selenium.webdriver.support import expected_conditions as EC\n","from selenium.common.exceptions import TimeoutException\n","from webdriver_manager.chrome import ChromeDriverManager"]},{"cell_type":"markdown","id":"bdd0a278","metadata":{"id":"bdd0a278"},"source":["## üõ†Ô∏èüíª Configuraci√≥n del navegador"]},{"cell_type":"code","execution_count":null,"id":"26efc68e","metadata":{"id":"26efc68e"},"outputs":[],"source":["options = Options()\n","options.add_argument(\"--start-maximized\")\n","driver =\n","driver = webdriver.Chrome(service=\n","driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)"]},{"cell_type":"markdown","id":"9716e388","metadata":{"id":"9716e388"},"source":["## üß© Funciones auxiliares"]},{"cell_type":"code","execution_count":null,"id":"b23a88ae","metadata":{"id":"b23a88ae"},"outputs":[],"source":["def safe_text(el, selector):\n","    elems = el.find_elements(By.CSS_SELECTOR, selector)\n","    return elems[0].text.strip() if elems else \"\"\n","\n","def cargar_todas_rese√±as(max_scroll=100):\n","    \"\"\"Clic en 'Ver m√°s' y scroll hasta que no se carguen m√°s rese√±as\"\"\"\n","    tarjetas = []\n","    scroll_intentos = 0\n","    tarjetas_anteriores = 0\n","\n","    while scroll_intentos < max_scroll:\n","        # clic en \"Ver m√°s\" si aparece\n","        try:\n","            boton = WebDriverWait(driver, 5).until(\n","                EC.element_to_be_clickable((By.CSS_SELECTOR, \"button[data-test-id='activity-review-see-more-reviews-button']\"))\n","            )\n","            driver.execute_script(\"arguments[0].scrollIntoView(true);\", boton)\n","            time.sleep(2)  # espera antes de clicar\n","            driver.execute_script(\"arguments[0].click();\", boton)\n","            print(\"üü¢ Clic en 'Ver m√°s rese√±as'\")\n","            time.sleep(4)  # espera extra despu√©s del clic\n","        except TimeoutException:\n","            pass  # si no hay bot√≥n, seguimos al scroll\n","\n","        # scroll lento\n","        driver.execute_script(\"window.scrollBy(0, 800);\")\n","        time.sleep(3)\n","\n","        # actualizar tarjetas\n","        tarjetas = driver.find_elements(By.CSS_SELECTOR, \"section.review-card[data-test-id='activity-review-card']\")\n","        print(f\"üîç Tarjetas encontradas hasta ahora: {len(tarjetas)}\")\n","\n","        # detener si no hay tarjetas nuevas\n","        if len(tarjetas) == tarjetas_anteriores:\n","            print(\"‚ö†Ô∏è No se cargaron nuevas rese√±as, deteniendo scroll\")\n","            break\n","\n","        tarjetas_anteriores = len(tarjetas)\n","        scroll_intentos += 1\n","\n","    return tarjetas"]},{"cell_type":"markdown","id":"01466f98","metadata":{"id":"01466f98"},"source":["## ‚û°Ô∏è Archivo de salida"]},{"cell_type":"code","execution_count":null,"id":"d7b637c0","metadata":{"id":"d7b637c0"},"outputs":[],"source":["OUTPUT_FILE = \"experiencias_reviews_getyourguide_mallorca.csv\"\n","\n","# Si ya existe, lo seguimos completando\n","file_exists = os.path.exists(OUTPUT_FILE)"]},{"cell_type":"markdown","id":"136bc461","metadata":{"id":"136bc461"},"source":["## üß© CSV CON URLS"]},{"cell_type":"code","execution_count":null,"id":"3f1161c2","metadata":{"id":"3f1161c2"},"outputs":[],"source":["df = pd.read_csv(\"experiencias_getyourguide_Mallorca.csv\")  # columna 'enlace'\n","urls = df[\"enlace\"].dropna().tolist()"]},{"cell_type":"markdown","id":"e309c921","metadata":{"id":"e309c921"},"source":["## üîé Loop Principal"]},{"cell_type":"code","execution_count":null,"id":"ac049877","metadata":{"id":"ac049877"},"outputs":[],"source":["for idx, url in enumerate(urls, 1):\n","    print(f\"\\nüîó Procesando {idx}/{len(urls)}: {url}\")\n","    driver.get(url)\n","    time.sleep(3)  # espera inicial lenta\n","\n","    # T√≠tulo actualizado seg√∫n tu HTML\n","    try:\n","        titulo = driver.find_element(By.CSS_SELECTOR, \"h1#adp-title-text\").text.strip()\n","    except:\n","        titulo = \"\"\n","\n","    tarjetas = cargar_todas_rese√±as()  # funci√≥n que descarga todas las rese√±as\n","    print(f\"üîç Procesando {len(tarjetas)} rese√±as de {titulo}\")\n","\n","    rese√±as_temp = []\n","\n","    for t in tarjetas:\n","        review_score = safe_text(t, \"span.rating-star__label\")\n","        autor_pais = safe_text(t, \"span.review-card__author-details-name\")\n","        if \"‚Äì\" in autor_pais:\n","            autor, pais = map(str.strip, autor_pais.split(\"‚Äì\", 1))\n","        else:\n","            autor, pais = autor_pais, \"\"\n","        fecha = safe_text(t, \"span.review-card___author-date\")\n","        comentario = safe_text(t, \"div.toggle-content__content\")\n","        categoria = safe_text(t, \"span.review-card__author-verified-label\")\n","\n","        if comentario:\n","            rese√±as_temp.append([titulo, autor, pais, fecha, categoria, review_score, comentario, url])\n","\n","    # Guardar al CSV inmediatamente\n","    if rese√±as_temp:\n","        temp_df = pd.DataFrame(\n","            rese√±as_temp,\n","            columns=[\"titulo\", \"autor\", \"pais\", \"fecha\", \"categoria\", \"review_score\", \"comentario\", \"enlace\"]\n","        )\n","        temp_df.to_csv(\n","            OUTPUT_FILE,\n","            mode=\"a\",\n","            index=False,\n","            header=not os.path.exists(OUTPUT_FILE) if not file_exists else False,\n","            encoding=\"utf-8-sig\"\n","        )\n","        print(f\"‚úÖ {len(temp_df)} rese√±as guardadas de {titulo}\")\n","\n","print(\"\\n‚úÖ Proceso terminado, todas las rese√±as guardadas en CSV\")\n","driver.quit()"]},{"cell_type":"markdown","id":"f34022bc","metadata":{"id":"f34022bc"},"source":["## üñ±Ô∏è‚¨áÔ∏è‚Üª Preparaci√≥n: scroll y paginaci√≥n"]},{"cell_type":"code","execution_count":null,"id":"8f1abfc8","metadata":{"id":"8f1abfc8"},"outputs":[],"source":["    tarjetas = cargar_todas_rese√±as()  # funci√≥n que descarga todas las\n","    tarjetas = cargar_todas_rese√±as()  # funci√≥n que descarga todas las rese√±as\n","    print(f\"üîç Procesando {len(tarjetas)}\n","    print(f\"üîç Procesando {len(tarjetas)} rese√±as de {titulo}\")\n","\n","\n","    rese√±as_temp = []\n","\n","    for t in tarjetas:\n","\n","        review_score = safe_text(t, \"span.rating-star__label\")\n","        autor_pais = safe_text(t, \"span.\n","        autor_pais = safe_text(t, \"span.review-card__author-details-name\")\n","        if \"‚Äì\" in autor_pais:\n","            autor, pais = map(str.strip, autor_pais.split(\"‚Äì\", 1))\n","        else:\n","            autor, pais = autor_pais, \"\"\n","        fecha = safe_text(t, \"span.\n","        fecha = safe_text(t, \"span.review-card___author-date\")\n","        comentario = safe_text(t, \"div.toggle-content__content\")\n","        categoria = safe_text(t, \"span.\n","        categoria = safe_text(t, \"span.review-card__author-verified-label\")\n","\n","        if comentario:\n","\n","            rese√±as_temp.append([titulo, autor, pais, fecha, categoria,\n","            rese√±as_temp.append([titulo, autor, pais, fecha, categoria, review_score, comentario, url])\n","\n","    # Guardar al CSV inmediatamente\n","    if\n","    if rese√±as_temp:\n","        temp_df ="]},{"cell_type":"markdown","id":"ebdb0058","metadata":{"id":"ebdb0058"},"source":["## üßºüìä Limpieza / transformaci√≥n"]},{"cell_type":"code","execution_count":null,"id":"5bbb5bd3","metadata":{"id":"5bbb5bd3"},"outputs":[],"source":["        temp_df = pd.DataFrame(\n",""]},{"cell_type":"markdown","id":"cd8959ea","metadata":{"id":"cd8959ea"},"source":["## üìùüîé Scraping de reviews"]},{"cell_type":"code","execution_count":null,"id":"145ab06b","metadata":{"id":"145ab06b"},"outputs":[],"source":["            rese√±as_temp,\n","            columns=[\"titulo\", \"autor\", \"pais\", \"fecha\", \"categoria\", \"\n","            columns=[\"titulo\", \"autor\", \"pais\", \"fecha\", \"categoria\", \"review_score\", \"comentario\", \"enlace\"]\n","        )\n","        temp_"]},{"cell_type":"markdown","id":"059841cd","metadata":{"id":"059841cd"},"source":["## üßºüìä Limpieza / transformaci√≥n"]},{"cell_type":"code","execution_count":null,"id":"aa373fe0","metadata":{"id":"aa373fe0"},"outputs":[],"source":["        temp_df."]},{"cell_type":"markdown","id":"092a1cc2","metadata":{"id":"092a1cc2"},"source":["## üíæüìÑ Guardado de resultados"]},{"cell_type":"code","execution_count":null,"id":"a7bba929","metadata":{"id":"a7bba929"},"outputs":[],"source":["        temp_df.to_csv(\n","            OUTPUT_FILE,\n","            mode=\"a\",\n","            index=False,\n","            header=not os.path.exists(OUTPUT_FILE) if not file_exists else False,\n","            encoding=\"utf-8-sig\"\n","        )\n","        print(f\"‚úÖ {len(temp_df)}"]},{"cell_type":"markdown","id":"9e934940","metadata":{"id":"9e934940"},"source":["## üìùüîé Scraping de reviews"]},{"cell_type":"code","execution_count":null,"id":"10b79af0","metadata":{"id":"10b79af0"},"outputs":[],"source":["        print(f\"‚úÖ {len(temp_df)} rese√±as guardadas de {titulo}\")\n","\n","print(\"\\n‚úÖ Proceso terminado, todas las\n","print(\"\\n‚úÖ Proceso terminado, todas las rese√±as guardadas en CSV\")"]},{"cell_type":"markdown","id":"4a0bf426","metadata":{"id":"4a0bf426"},"source":["## ‚úñÔ∏èüíª Cerrar navegador"]},{"cell_type":"code","execution_count":null,"id":"65471df5","metadata":{"id":"65471df5"},"outputs":[],"source":["driver.quit()"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.2"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}
{"cells":[{"cell_type":"markdown","id":"e1090cff","metadata":{"id":"e1090cff"},"source":["# üìå Scraping de Instagram - 8 Ciudades\n","\n","Este notebook realiza scraping en **Instagram** usando Playwright para recorrer **8 ciudades** y varias **palabras clave**.\n","\n","Incluye:\n","- Guardado de sesi√≥n en `instagram_sesion.json`.\n","- Manejo de errores 429 (Too Many Requests) con backoff exponencial.\n","- Scroll infinito para recolectar posts.\n","- Extracci√≥n de `texto` y `fecha`.\n","- Likes/DMs aleatorios.\n","- Limpieza de duplicados.\n","- Guardado en un √∫nico JSON estructurado por ciudad."]},{"cell_type":"markdown","source":["## üì¶ Instalaci√≥n"],"metadata":{"id":"smH4jh6rjs4M"},"id":"smH4jh6rjs4M"},{"cell_type":"code","execution_count":null,"id":"f5265ce3-c429-48f3-9307-ddd87297cfbc","metadata":{"id":"f5265ce3-c429-48f3-9307-ddd87297cfbc","outputId":"78adfaf3-59c0-4403-d19d-d95992bf7993"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: playwright in c:\\users\\karina\\anaconda3\\lib\\site-packages (1.54.0)\n","Requirement already satisfied: pyee<14,>=13 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from playwright) (13.0.0)\n","Requirement already satisfied: greenlet<4.0.0,>=3.1.1 in c:\\users\\karina\\anaconda3\\lib\\site-packages (from playwright) (3.2.4)\n","Requirement already satisfied: typing-extensions in c:\\users\\karina\\anaconda3\\lib\\site-packages (from pyee<14,>=13->playwright) (4.14.1)\n"]},{"name":"stderr","output_type":"stream","text":["WARNING: Ignoring invalid distribution ~ympy (C:\\Users\\Karina\\anaconda3\\Lib\\site-packages)\n","WARNING: Ignoring invalid distribution ~ympy (C:\\Users\\Karina\\anaconda3\\Lib\\site-packages)\n","WARNING: Ignoring invalid distribution ~ympy (C:\\Users\\Karina\\anaconda3\\Lib\\site-packages)\n"]}],"source":["!pip install playwright\n","!playwright install"]},{"cell_type":"markdown","id":"0569a2ce","metadata":{"id":"0569a2ce"},"source":["## 1Ô∏è‚É£ Importar librer√≠as"]},{"cell_type":"code","execution_count":null,"id":"0ea02fd0","metadata":{"id":"0ea02fd0"},"outputs":[],"source":["import asyncio\n","from playwright.async_api import async_playwright\n","import json\n","import random\n","from datetime import datetime"]},{"cell_type":"markdown","id":"d86215b3","metadata":{"id":"d86215b3"},"source":["## 2Ô∏è‚É£ Definir ciudades y palabras clave"]},{"cell_type":"code","execution_count":null,"id":"9b83af45","metadata":{"id":"9b83af45"},"outputs":[],"source":["ciudades = [\n","    'Tenerife',\n","    'Barcelona',\n","    'Madrid',\n","    'Malaga',\n","    'Gran Canaria',\n","    'Sevilla',\n","    'Valencia',\n","    'Mallorca'\n","]\n","\n","palabras_clave = [\n","    'turismo',\n","    'viajar',\n","    'que hacer',\n","    'actividades',\n","    'atracciones',\n","    'tourism',\n","    'travel',\n","    'what to do'\n","]"]},{"cell_type":"markdown","id":"a7be8bf4","metadata":{"id":"a7be8bf4"},"source":["## 3Ô∏è‚É£ Guardar sesi√≥n de Instagram"]},{"cell_type":"code","execution_count":null,"id":"dc109e94","metadata":{"id":"dc109e94"},"outputs":[],"source":["async def guardar_sesion_instagram():\n","    async with async_playwright() as p:\n","        browser = await p.chromium.launch(headless=False)\n","        context = await browser.new_context()\n","        page = await context.new_page()\n","\n","        await page.goto(\"https://www.instagram.com/accounts/login/\")\n","        print(\"üëâ Inicia sesi√≥n manualmente en la ventana abierta.\")\n","\n","        try:\n","            await page.wait_for_selector('article', timeout=120_000)\n","            print(\"‚úÖ Sesi√≥n iniciada correctamente.\")\n","            await context.storage_state(path=\"instagram_sesion.json\")\n","            print(\"üíæ Sesi√≥n guardada en 'instagram_sesion.json'.\")\n","        except Exception as e:\n","            print(f\"Error durante el login: {e}\")\n","\n","        print(\"Puedes cerrar el navegador manualmente si quieres.\")\n","\n","# Ejecutar una vez para guardar sesi√≥n\n","# await guardar_sesion_instagram()"]},{"cell_type":"markdown","id":"cf9391a2","metadata":{"id":"cf9391a2"},"source":["## 4Ô∏è‚É£ Manejo de error 429 (Too Many Requests)"]},{"cell_type":"code","execution_count":null,"id":"d4ffbcaf","metadata":{"id":"d4ffbcaf"},"outputs":[],"source":["async def handle_429(page, max_attempts=5):\n","    for attempt in range(max_attempts):\n","        try:\n","            error_429 = await page.query_selector('text=\"429\"') or await page.query_selector('text=\"Too Many Requests\"')\n","            if error_429:\n","                wait_time = 2 ** (attempt + 6)\n","                print(f\"‚ö†Ô∏è Error 429 detectado. Esperando {wait_time} segundos (intento {attempt+1}/{max_attempts})...\")\n","                await asyncio.sleep(wait_time)\n","                return False\n","            return True\n","        except Exception as e:\n","            print(f\"Error verificando 429: {e}\")\n","            wait_time = 2 ** (attempt + 6)\n","            print(f\"Esperando {wait_time} segundos...\")\n","            await asyncio.sleep(wait_time)\n","            return False\n","    print(\"‚ùå M√°ximo de reintentos alcanzado para 429.\")\n","    return True"]},{"cell_type":"markdown","id":"25eb6571","metadata":{"id":"25eb6571"},"source":["## 5Ô∏è‚É£ Funci√≥n para scrapear posts de un hashtag"]},{"cell_type":"code","execution_count":null,"id":"d638ce92","metadata":{"jupyter":{"source_hidden":true},"id":"d638ce92"},"outputs":[],"source":["async def scrape_instagram_posts(query, max_posts=50):\n","    hashtag = query.replace(' ', '').lower()\n","    async with async_playwright() as p:\n","        browser = await p.chromium.launch(headless=False)\n","        context = await browser.new_context(storage_state=\"instagram_sesion.json\")\n","        page = await context.new_page()\n","\n","        hashtag_url = f\"https://www.instagram.com/explore/tags/{hashtag}/\"\n","        try:\n","            await page.goto(hashtag_url)\n","            if not await handle_429(page):\n","                await browser.close()\n","                return []\n","            print(f\"üîé Navegando a hashtag: #{hashtag}\")\n","        except Exception as e:\n","            print(f\"Error navegando a {hashtag_url}: {e}\")\n","            await browser.close()\n","            return []\n","\n","        try:\n","            await page.wait_for_selector('main[role=\"main\"]', timeout=30_000)\n","            await page.wait_for_timeout(random.uniform(10000, 15000))\n","        except Exception as e:\n","            print(f\"Error cargando p√°gina de posts: {e}\")\n","            await browser.close()\n","            return []\n","\n","        post_links = set()\n","        scrolls = 0\n","        sin_cambios = 0\n","\n","        while len(post_links) < max_posts and scrolls < 50:\n","            nuevos_links_count = len(post_links)\n","            await page.mouse.wheel(0, random.randint(1000, 3000))\n","            await page.wait_for_timeout(random.uniform(5000, 10000))\n","            await page.mouse.wheel(0, 5000)\n","            await page.wait_for_timeout(random.uniform(20000, 40000))\n","            links = await page.query_selector_all('a[role=\"link\"][tabindex=\"0\"]')\n","            for link in links:\n","                href = await link.get_attribute('href')\n","                if href and (\"/p/\" in href or \"/reel/\" in href):\n","                    post_links.add(href)\n","                    if len(post_links) >= max_posts:\n","                        break\n","            if len(post_links) == nuevos_links_count:\n","                sin_cambios += 1\n","            else:\n","                sin_cambios = 0\n","            if sin_cambios >= 3:\n","                print(\"No hay m√°s posts nuevos, deteniendo.\")\n","                break\n","            scrolls += 1\n","            print(f\"Scroll {scrolls}: {len(post_links)} links recopilados\")\n","\n","        posts = []\n","        for i, href in enumerate(list(post_links)[:max_posts], 1):\n","            full_url = f\"https://www.instagram.com{href}\"\n","            print(f\"Procesando post {i}/{min(len(post_links), max_posts)}: {full_url}\")\n","            post_page = await context.new_page()\n","            try:\n","                await post_page.goto(full_url)\n","                if not await handle_429(post_page):\n","                    await post_page.close()\n","                    continue\n","                await post_page.wait_for_load_state('networkidle', timeout=30_000)\n","                await post_page.wait_for_timeout(random.uniform(5000, 10000))\n","\n","                texto_el = await post_page.query_selector('span[class*=\"x193iq5w\"]')\n","                texto = (await texto_el.inner_text()).strip() if texto_el else \"\"\n","                fecha_el = await post_page.query_selector('time[datetime]')\n","                fecha_text = await fecha_el.get_attribute('datetime') if fecha_el else datetime.now().strftime(\"%Y-%m-%dT%H:%M:%S\")\n","\n","                if texto:\n","                    posts.append({\"texto\": texto, \"fecha\": fecha_text})\n","            except Exception as e:\n","                print(f\"Error extrayendo {full_url}: {e}\")\n","            finally:\n","                await post_page.close()\n","\n","        await browser.close()\n","        print(f\"‚úÖ Total posts registrados: {len(posts)}\")\n","        return posts"]},{"cell_type":"markdown","id":"a886e2ec","metadata":{"id":"a886e2ec"},"source":["## 6Ô∏è‚É£ Ejecutar scraping para todas las ciudades y guardar JSON"]},{"cell_type":"code","execution_count":null,"id":"e4e9a2ba","metadata":{"id":"e4e9a2ba"},"outputs":[],"source":["async def main():\n","    resultados = {}\n","    for ciudad in ciudades:\n","        print(f\"\\nüåç Procesando ciudad: {ciudad}\")\n","        posts_ciudad = []\n","        for palabra in palabras_clave:\n","            query = f\"{ciudad} {palabra}\"\n","            print(f\"   ‚û°Ô∏è Buscando: {query}\")\n","            posts = await scrape_instagram_posts(query, max_posts=30)\n","            posts_ciudad.extend(posts)\n","        # limpiar duplicados (texto+fecha)\n","        vistos = set()\n","        posts_unicos = []\n","        for p in posts_ciudad:\n","            key = (p['texto'], p['fecha'])\n","            if key not in vistos:\n","                vistos.add(key)\n","                posts_unicos.append(p)\n","        resultados[ciudad] = posts_unicos\n","        print(f\"‚úÖ {ciudad}: {len(posts_unicos)} posts √∫nicos guardados\")\n","\n","    with open(\"instagram_resultados.json\", \"w\", encoding=\"utf-8\") as f:\n","        json.dump(resultados, f, indent=4, ensure_ascii=False)\n","    print(\"\\nüéâ Scraping finalizado. Resultados guardados en instagram_resultados.json\")\n"]},{"cell_type":"markdown","id":"f0cd7780-bcbc-4a06-9359-7a2cabae0192","metadata":{"id":"f0cd7780-bcbc-4a06-9359-7a2cabae0192"},"source":["## 5Ô∏è‚É£ Ejecutar el programa"]},{"cell_type":"code","execution_count":null,"id":"77f6a2ca-f28f-4a9b-ab83-5cdea723d5c4","metadata":{"id":"77f6a2ca-f28f-4a9b-ab83-5cdea723d5c4","outputId":"2f1213d0-f0e9-4fe4-e797-dc825feade18"},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","üåç Procesando ciudad: Tenerife\n","   ‚û°Ô∏è Buscando: Tenerife turismo\n","üîé Navegando a hashtag: #tenerifeturismo\n","Scroll 1: 30 links recopilados\n","Procesando post 1/30: https://www.instagram.com/p/CiVJHqqobac/\n","Error extrayendo https://www.instagram.com/p/CiVJHqqobac/: Timeout 30000ms exceeded.\n","Procesando post 2/30: https://www.instagram.com/p/CXKDQZfoJI-/\n","Procesando post 3/30: https://www.instagram.com/p/CTu1E0qqd5r/\n","Procesando post 4/30: https://www.instagram.com/p/CnM5mvAtkol/\n","Procesando post 5/30: https://www.instagram.com/p/DGkXzz6o1jr/\n","Procesando post 6/30: https://www.instagram.com/p/DBmW0lZIs8j/\n","Procesando post 7/30: https://www.instagram.com/p/CVIAXL0tPQA/\n","Procesando post 8/30: https://www.instagram.com/p/CrXw70sNUsb/\n","Procesando post 9/30: https://www.instagram.com/p/CsRPvl_Nkbk/\n","Procesando post 10/30: https://www.instagram.com/p/Cab105PMKSL/\n","Procesando post 11/30: https://www.instagram.com/p/C9zQzmdob8b/\n","Procesando post 12/30: https://www.instagram.com/p/C55q1qgo6Oe/\n","Procesando post 13/30: https://www.instagram.com/p/CT66QJJLO_y/\n","Procesando post 14/30: https://www.instagram.com/p/ClO7JnEov_i/\n","Procesando post 15/30: https://www.instagram.com/p/CpktFjjtx3o/\n","Procesando post 16/30: https://www.instagram.com/p/Ctqib5roe2B/\n","Procesando post 17/30: https://www.instagram.com/p/CYU0_mYMC-X/\n","Procesando post 18/30: https://www.instagram.com/p/DFpSTEjC46j/\n","Procesando post 19/30: https://www.instagram.com/p/C_21ggTMyq6/\n","Procesando post 20/30: https://www.instagram.com/p/CPjYyxOMY7V/\n","Procesando post 21/30: https://www.instagram.com/p/CZyjm3gslLE/\n","Procesando post 22/30: https://www.instagram.com/p/CUqLy3CIJ59/\n","Procesando post 23/30: https://www.instagram.com/p/B4lEPh-IDas/\n","Procesando post 24/30: https://www.instagram.com/p/ClETNVCoFj9/\n","Procesando post 25/30: https://www.instagram.com/p/DIhp28Uid_Y/\n"]}],"source":["await main()"]},{"cell_type":"code","execution_count":null,"id":"ae3a5203-c6e4-44f8-8e0d-5ad803ae13b6","metadata":{"id":"ae3a5203-c6e4-44f8-8e0d-5ad803ae13b6"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.7"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}
{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "53bb1156",
   "metadata": {},
   "source": [
    "# üìò Reddit ‚Äî *t√≠tulos y explicaciones por celda*\n",
    "_Tu l√≥gica se mantiene intacta; solo a√±ad√≠ encabezados y una breve explicaci√≥n antes de cada celda de c√≥digo._"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f4046d2",
   "metadata": {},
   "source": [
    "## üì¶ Dependencias\n",
    "- Importa librer√≠as requeridas. Incluye: praw."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "22a972ae-0b5d-4bd1-a86c-cf4b4122393e",
   "metadata": {
    "id": "22a972ae-0b5d-4bd1-a86c-cf4b4122393e"
   },
   "outputs": [],
   "source": [
    "import praw"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ced6a98",
   "metadata": {},
   "source": [
    "## üì¶ Dependencias\n",
    "- Importa librer√≠as requeridas. Incluye: datetime."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "44d31f0c-bda3-4c09-ae84-94dd404ac4d3",
   "metadata": {
    "id": "44d31f0c-bda3-4c09-ae84-94dd404ac4d3"
   },
   "outputs": [],
   "source": [
    "from datetime import datetime\n",
    "import json\n",
    "from langdetect import detect"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd8473c1",
   "metadata": {},
   "source": [
    "## üîë Autenticaci√≥n y sesi√≥n de Reddit (PRAW)\n",
    "- Configura `Reddit(client_id, client_secret, user_agent)` para acceder a la API."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d397b108-6bd6-4481-9929-03819a34c248",
   "metadata": {
    "id": "d397b108-6bd6-4481-9929-03819a34c248"
   },
   "outputs": [],
   "source": [
    "reddit = praw.Reddit(\n",
    "    client_id=\"0HAMZIgeCyxEjt61rbilyA\",\n",
    "    client_secret=\"iL6VAggmYaMq7AR0T6n94opTJx8sNQ\",\n",
    "    user_agent=\"Turismo1675\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "173d7ea0",
   "metadata": {},
   "source": [
    "## üß™ Bloque de c√≥digo\n",
    "- Ejecuci√≥n/operaciones auxiliares del flujo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec77fb23-5449-493f-b95d-51ee9d7df554",
   "metadata": {
    "id": "ec77fb23-5449-493f-b95d-51ee9d7df554"
   },
   "outputs": [],
   "source": [
    "ciudades = ['Tenerife', 'Barcelona', 'Madrid', 'Malaga', 'Gran Canaria', 'Seville', 'Valencia', 'Palma de Mallorca']\n",
    "palabras_clave = ['turismo', 'atracciones', 'qu√© hacer', 'hoteles', 'viaje', 'lugares tur√≠sticos', 'vacaciones', 'tourism', 'things to do', 'attractions', 'hotels']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93f63cf0",
   "metadata": {},
   "source": [
    "## üß≠ Par√°metros de b√∫squeda (subreddit/consulta/fechas)\n",
    "- Define el subreddit objetivo.\n",
    "- Establece t√©rminos de b√∫squeda/filtrado.\n",
    "- Controla el n√∫mero de posts/comentarios a recuperar.\n",
    "- Ventana temporal para la consulta."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d0a2fdf-8068-4779-a5f4-ff5aa4a63b38",
   "metadata": {
    "id": "2d0a2fdf-8068-4779-a5f4-ff5aa4a63b38"
   },
   "outputs": [],
   "source": [
    "  def buscar_posts_reddit(ciudad, keyword, max_posts=200):\n",
    "      query = f\"{ciudad} {keyword}\"\n",
    "      print(f\"Buscando: {query}\")\n",
    "      resultados = []\n",
    "\n",
    "      for post in reddit.subreddit(\"all\").search(query, sort=\"new\", limit=500):\n",
    "          try:\n",
    "              texto_completo = f\"{post.title} {post.selftext}\".strip()\n",
    "              if not texto_completo:\n",
    "                  continue\n",
    "\n",
    "              idioma = detect(texto_completo)\n",
    "              if idioma not in ['es', 'en']:\n",
    "                  continue\n",
    "\n",
    "              resultados.append({\n",
    "                  \"titulo\": post.title,\n",
    "                  \"texto\": post.selftext,\n",
    "                  \"url\": post.url,\n",
    "                  \"fecha\": datetime.utcfromtimestamp(post.created_utc).strftime(\"%Y-%m-%d %H:%M:%S\"),\n",
    "                  \"autor\": str(post.author),\n",
    "                  \"ciudad\": ciudad,\n",
    "                  \"keyword\": keyword,\n",
    "                  \"query\": query,\n",
    "                  \"idioma\": idioma\n",
    "              })\n",
    "\n",
    "              if len(resultados) >= max_posts:\n",
    "                  break\n",
    "\n",
    "          except Exception:\n",
    "              continue  # si no detecta idioma o hay error, lo ignora\n",
    "\n",
    "      print(f\"{len(resultados)} posts v√°lidos para '{query}'\")\n",
    "      return resultados"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91f17e72",
   "metadata": {},
   "source": [
    "## üíæ Guardado de resultados\n",
    "- Exporta a: )}_reddit_posts_{timestamp}.json."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8a374d80-8494-44e3-baa7-4f28109c1311",
   "metadata": {
    "id": "8a374d80-8494-44e3-baa7-4f28109c1311"
   },
   "outputs": [],
   "source": [
    "def recolectar_posts_reddit():\n",
    "    for ciudad in ciudades:\n",
    "        print(f\"\\nProcesando ciudad: {ciudad}\")\n",
    "        posts_totales = []\n",
    "\n",
    "        for keyword in palabras_clave:\n",
    "            try:\n",
    "                posts = buscar_posts_reddit(ciudad, keyword, max_posts=600)\n",
    "            except Exception as e:\n",
    "                print(f\"Error con '{ciudad} {keyword}': {e}\")\n",
    "                posts = []\n",
    "\n",
    "            posts_totales.extend(posts)\n",
    "\n",
    "        # Guardar archivo por ciudad\n",
    "        timestamp = datetime.now().strftime(\"%Y%m%d\")\n",
    "        filename = f\"{ciudad.replace(' ', '_')}_reddit_posts_{timestamp}.json\"\n",
    "        with open(filename, \"w\", encoding=\"utf-8\") as f:\n",
    "            json.dump(posts_totales, f, ensure_ascii=False, indent=2)\n",
    "\n",
    "        print(f\"Guardado {len(posts_totales)} posts en {filename}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "411a9644",
   "metadata": {},
   "source": [
    "## üß™ Bloque de c√≥digo\n",
    "- Ejecuci√≥n/operaciones auxiliares del flujo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c51de394-07da-48c0-ba53-046f43531a86",
   "metadata": {
    "id": "c51de394-07da-48c0-ba53-046f43531a86",
    "outputId": "98a71210-4724-4191-c2b8-315bdbc98790"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Procesando ciudad: Tenerife\n",
      "Buscando: Tenerife turismo\n",
      "0 posts v√°lidos para 'Tenerife turismo'\n",
      "Buscando: Tenerife atracciones\n",
      "4 posts v√°lidos para 'Tenerife atracciones'\n",
      "Buscando: Tenerife qu√© hacer\n",
      "249 posts v√°lidos para 'Tenerife qu√© hacer'\n",
      "Buscando: Tenerife hoteles\n",
      "225 posts v√°lidos para 'Tenerife hoteles'\n",
      "Buscando: Tenerife viaje\n",
      "56 posts v√°lidos para 'Tenerife viaje'\n",
      "Buscando: Tenerife lugares tur√≠sticos\n",
      "173 posts v√°lidos para 'Tenerife lugares tur√≠sticos'\n",
      "Buscando: Tenerife vacaciones\n",
      "31 posts v√°lidos para 'Tenerife vacaciones'\n",
      "Buscando: Tenerife tourism\n",
      "87 posts v√°lidos para 'Tenerife tourism'\n",
      "Buscando: Tenerife things to do\n",
      "216 posts v√°lidos para 'Tenerife things to do'\n",
      "Buscando: Tenerife attractions\n",
      "63 posts v√°lidos para 'Tenerife attractions'\n",
      "Buscando: Tenerife hotels\n",
      "225 posts v√°lidos para 'Tenerife hotels'\n",
      "Guardado 1329 posts en Tenerife_reddit_posts_20250810.json\n",
      "\n",
      "Procesando ciudad: Barcelona\n",
      "Buscando: Barcelona turismo\n",
      "196 posts v√°lidos para 'Barcelona turismo'\n",
      "Buscando: Barcelona atracciones\n",
      "38 posts v√°lidos para 'Barcelona atracciones'\n",
      "Buscando: Barcelona qu√© hacer\n",
      "249 posts v√°lidos para 'Barcelona qu√© hacer'\n",
      "Buscando: Barcelona hoteles\n",
      "235 posts v√°lidos para 'Barcelona hoteles'\n",
      "Buscando: Barcelona viaje\n",
      "0 posts v√°lidos para 'Barcelona viaje'\n",
      "Buscando: Barcelona lugares tur√≠sticos\n",
      "191 posts v√°lidos para 'Barcelona lugares tur√≠sticos'\n",
      "Buscando: Barcelona vacaciones\n",
      "99 posts v√°lidos para 'Barcelona vacaciones'\n",
      "Buscando: Barcelona tourism\n",
      "228 posts v√°lidos para 'Barcelona tourism'\n",
      "Buscando: Barcelona things to do\n",
      "249 posts v√°lidos para 'Barcelona things to do'\n",
      "Buscando: Barcelona attractions\n",
      "240 posts v√°lidos para 'Barcelona attractions'\n",
      "Buscando: Barcelona hotels\n",
      "236 posts v√°lidos para 'Barcelona hotels'\n",
      "Guardado 1961 posts en Barcelona_reddit_posts_20250810.json\n",
      "\n",
      "Procesando ciudad: Madrid\n",
      "Buscando: Madrid turismo\n",
      "191 posts v√°lidos para 'Madrid turismo'\n",
      "Buscando: Madrid atracciones\n",
      "80 posts v√°lidos para 'Madrid atracciones'\n",
      "Buscando: Madrid qu√© hacer\n",
      "249 posts v√°lidos para 'Madrid qu√© hacer'\n",
      "Buscando: Madrid hoteles\n",
      "219 posts v√°lidos para 'Madrid hoteles'\n",
      "Buscando: Madrid viaje\n",
      "247 posts v√°lidos para 'Madrid viaje'\n",
      "Buscando: Madrid lugares tur√≠sticos\n",
      "192 posts v√°lidos para 'Madrid lugares tur√≠sticos'\n",
      "Buscando: Madrid vacaciones\n",
      "153 posts v√°lidos para 'Madrid vacaciones'\n",
      "Buscando: Madrid tourism\n",
      "233 posts v√°lidos para 'Madrid tourism'\n",
      "Buscando: Madrid things to do\n",
      "243 posts v√°lidos para 'Madrid things to do'\n",
      "Buscando: Madrid attractions\n",
      "242 posts v√°lidos para 'Madrid attractions'\n",
      "Buscando: Madrid hotels\n",
      "219 posts v√°lidos para 'Madrid hotels'\n",
      "Guardado 2268 posts en Madrid_reddit_posts_20250810.json\n",
      "\n",
      "Procesando ciudad: Malaga\n",
      "Buscando: Malaga turismo\n",
      "25 posts v√°lidos para 'Malaga turismo'\n",
      "Buscando: Malaga atracciones\n",
      "3 posts v√°lidos para 'Malaga atracciones'\n",
      "Buscando: Malaga qu√© hacer\n",
      "249 posts v√°lidos para 'Malaga qu√© hacer'\n",
      "Buscando: Malaga hoteles\n",
      "238 posts v√°lidos para 'Malaga hoteles'\n",
      "Buscando: Malaga viaje\n",
      "40 posts v√°lidos para 'Malaga viaje'\n",
      "Buscando: Malaga lugares tur√≠sticos\n",
      "174 posts v√°lidos para 'Malaga lugares tur√≠sticos'\n",
      "Buscando: Malaga vacaciones\n",
      "26 posts v√°lidos para 'Malaga vacaciones'\n",
      "Buscando: Malaga tourism\n",
      "97 posts v√°lidos para 'Malaga tourism'\n",
      "Buscando: Malaga things to do\n",
      "235 posts v√°lidos para 'Malaga things to do'\n",
      "Buscando: Malaga attractions\n",
      "209 posts v√°lidos para 'Malaga attractions'\n",
      "Buscando: Malaga hotels\n",
      "238 posts v√°lidos para 'Malaga hotels'\n",
      "Guardado 1534 posts en Malaga_reddit_posts_20250810.json\n",
      "\n",
      "Procesando ciudad: Gran Canaria\n",
      "Buscando: Gran Canaria turismo\n",
      "221 posts v√°lidos para 'Gran Canaria turismo'\n",
      "Buscando: Gran Canaria atracciones\n",
      "217 posts v√°lidos para 'Gran Canaria atracciones'\n",
      "Buscando: Gran Canaria qu√© hacer\n",
      "247 posts v√°lidos para 'Gran Canaria qu√© hacer'\n",
      "Buscando: Gran Canaria hoteles\n",
      "220 posts v√°lidos para 'Gran Canaria hoteles'\n",
      "Buscando: Gran Canaria viaje\n",
      "230 posts v√°lidos para 'Gran Canaria viaje'\n",
      "Buscando: Gran Canaria lugares tur√≠sticos\n",
      "225 posts v√°lidos para 'Gran Canaria lugares tur√≠sticos'\n",
      "Buscando: Gran Canaria vacaciones\n",
      "227 posts v√°lidos para 'Gran Canaria vacaciones'\n",
      "Buscando: Gran Canaria tourism\n",
      "213 posts v√°lidos para 'Gran Canaria tourism'\n",
      "Buscando: Gran Canaria things to do\n",
      "243 posts v√°lidos para 'Gran Canaria things to do'\n",
      "Buscando: Gran Canaria attractions\n",
      "224 posts v√°lidos para 'Gran Canaria attractions'\n",
      "Buscando: Gran Canaria hotels\n",
      "221 posts v√°lidos para 'Gran Canaria hotels'\n",
      "Guardado 2488 posts en Gran_Canaria_reddit_posts_20250810.json\n",
      "\n",
      "Procesando ciudad: Seville\n",
      "Buscando: Seville turismo\n",
      "9 posts v√°lidos para 'Seville turismo'\n",
      "Buscando: Seville atracciones\n",
      "3 posts v√°lidos para 'Seville atracciones'\n",
      "Buscando: Seville qu√© hacer\n",
      "249 posts v√°lidos para 'Seville qu√© hacer'\n",
      "Buscando: Seville hoteles\n",
      "242 posts v√°lidos para 'Seville hoteles'\n",
      "Buscando: Seville viaje\n",
      "10 posts v√°lidos para 'Seville viaje'\n",
      "Buscando: Seville lugares tur√≠sticos\n",
      "173 posts v√°lidos para 'Seville lugares tur√≠sticos'\n",
      "Buscando: Seville vacaciones\n",
      "1 posts v√°lidos para 'Seville vacaciones'\n",
      "Buscando: Seville tourism\n",
      "102 posts v√°lidos para 'Seville tourism'\n",
      "Buscando: Seville things to do\n",
      "245 posts v√°lidos para 'Seville things to do'\n",
      "Buscando: Seville attractions\n",
      "246 posts v√°lidos para 'Seville attractions'\n",
      "Buscando: Seville hotels\n",
      "242 posts v√°lidos para 'Seville hotels'\n",
      "Guardado 1522 posts en Seville_reddit_posts_20250810.json\n",
      "\n",
      "Procesando ciudad: Valencia\n",
      "Buscando: Valencia turismo\n",
      "104 posts v√°lidos para 'Valencia turismo'\n",
      "Buscando: Valencia atracciones\n",
      "13 posts v√°lidos para 'Valencia atracciones'\n",
      "Buscando: Valencia qu√© hacer\n",
      "249 posts v√°lidos para 'Valencia qu√© hacer'\n",
      "Buscando: Valencia hoteles\n",
      "234 posts v√°lidos para 'Valencia hoteles'\n",
      "Buscando: Valencia viaje\n",
      "172 posts v√°lidos para 'Valencia viaje'\n",
      "Buscando: Valencia lugares tur√≠sticos\n",
      "185 posts v√°lidos para 'Valencia lugares tur√≠sticos'\n",
      "Buscando: Valencia vacaciones\n",
      "113 posts v√°lidos para 'Valencia vacaciones'\n",
      "Buscando: Valencia tourism\n",
      "184 posts v√°lidos para 'Valencia tourism'\n",
      "Buscando: Valencia things to do\n",
      "246 posts v√°lidos para 'Valencia things to do'\n",
      "Buscando: Valencia attractions\n",
      "245 posts v√°lidos para 'Valencia attractions'\n",
      "Buscando: Valencia hotels\n",
      "234 posts v√°lidos para 'Valencia hotels'\n",
      "Guardado 1979 posts en Valencia_reddit_posts_20250810.json\n",
      "\n",
      "Procesando ciudad: Palma de Mallorca\n",
      "Buscando: Palma de Mallorca turismo\n",
      "176 posts v√°lidos para 'Palma de Mallorca turismo'\n",
      "Buscando: Palma de Mallorca atracciones\n",
      "190 posts v√°lidos para 'Palma de Mallorca atracciones'\n",
      "Buscando: Palma de Mallorca qu√© hacer\n",
      "249 posts v√°lidos para 'Palma de Mallorca qu√© hacer'\n",
      "Buscando: Palma de Mallorca hoteles\n",
      "196 posts v√°lidos para 'Palma de Mallorca hoteles'\n",
      "Buscando: Palma de Mallorca viaje\n",
      "234 posts v√°lidos para 'Palma de Mallorca viaje'\n",
      "Buscando: Palma de Mallorca lugares tur√≠sticos\n",
      "160 posts v√°lidos para 'Palma de Mallorca lugares tur√≠sticos'\n",
      "Buscando: Palma de Mallorca vacaciones\n",
      "230 posts v√°lidos para 'Palma de Mallorca vacaciones'\n",
      "Buscando: Palma de Mallorca tourism\n",
      "181 posts v√°lidos para 'Palma de Mallorca tourism'\n",
      "Buscando: Palma de Mallorca things to do\n",
      "245 posts v√°lidos para 'Palma de Mallorca things to do'\n",
      "Buscando: Palma de Mallorca attractions\n",
      "213 posts v√°lidos para 'Palma de Mallorca attractions'\n",
      "Buscando: Palma de Mallorca hotels\n",
      "197 posts v√°lidos para 'Palma de Mallorca hotels'\n",
      "Guardado 2271 posts en Palma_de_Mallorca_reddit_posts_20250810.json\n"
     ]
    }
   ],
   "source": [
    "recolectar_posts_reddit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5197f131",
   "metadata": {},
   "source": [
    "## üß™ Bloque de c√≥digo\n",
    "- Ejecuci√≥n/operaciones auxiliares del flujo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f8a4fd1f-eaaf-4e81-9923-75087c9a26c3",
   "metadata": {
    "id": "f8a4fd1f-eaaf-4e81-9923-75087c9a26c3"
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 5
}

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3ae868b4-3131-414c-9d22-a7007547e3db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: requests in c:\\users\\usuario\\anaconda3\\lib\\site-packages (2.32.5)\n",
      "Requirement already satisfied: charset_normalizer<4,>=2 in c:\\users\\usuario\\anaconda3\\lib\\site-packages (from requests) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\usuario\\anaconda3\\lib\\site-packages (from requests) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\usuario\\anaconda3\\lib\\site-packages (from requests) (2.5.0)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\usuario\\anaconda3\\lib\\site-packages (from requests) (2025.7.14)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install requests"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b79c141e-769d-4b6b-be55-7e6299bbabd8",
   "metadata": {},
   "source": [
    "# üéüÔ∏èSCRAPING TICKET MASTER"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2aebd8d4-cb9a-4391-b3ba-7b3fb598cea2",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Usuario\\AppData\\Local\\Temp\\ipykernel_23860\\1740471630.py:28: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n",
      "  start_dt = datetime.utcnow().strftime('%Y-%m-%dT00:00:00Z')\n",
      "C:\\Users\\Usuario\\AppData\\Local\\Temp\\ipykernel_23860\\1740471630.py:29: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n",
      "  end_dt = (datetime.utcnow() + timedelta(days=365)).strftime('%Y-%m-%dT00:00:00Z')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "üèôÔ∏è  Santa Cruz de Tenerife: extracci√≥n combinada (city + geo)\n",
      "   ‚Üí nuevos √∫nicos a√±adidos: 2\n",
      "\n",
      "üèôÔ∏è  Barcelona: extracci√≥n combinada (city + geo)\n",
      "   ‚Üí nuevos √∫nicos a√±adidos: 150\n",
      "\n",
      "üèôÔ∏è  Madrid: extracci√≥n combinada (city + geo)\n",
      "   ‚Üí nuevos √∫nicos a√±adidos: 318\n",
      "\n",
      "üèôÔ∏è  Malaga: extracci√≥n combinada (city + geo)\n",
      "   ‚Üí nuevos √∫nicos a√±adidos: 9\n",
      "\n",
      "üèôÔ∏è  Las Palmas de Gran Canaria: extracci√≥n combinada (city + geo)\n",
      "   ‚Üí nuevos √∫nicos a√±adidos: 1\n",
      "\n",
      "üèôÔ∏è  Sevilla: extracci√≥n combinada (city + geo)\n",
      "   ‚Üí nuevos √∫nicos a√±adidos: 17\n",
      "\n",
      "üèôÔ∏è  Valencia: extracci√≥n combinada (city + geo)\n",
      "   ‚Üí nuevos √∫nicos a√±adidos: 26\n",
      "\n",
      "üèôÔ∏è  Palma de Mallorca: extracci√≥n combinada (city + geo)\n",
      "   ‚Üí nuevos √∫nicos a√±adidos: 4\n",
      "\n",
      "‚úÖ Archivo guardado: 'eventos_ticketmaster.csv'\n",
      "Total eventos √∫nicos: 527\n",
      "\n",
      "üìä Eventos por ciudad (√∫nicos):\n",
      " - Santa Cruz de Tenerife: 2\n",
      " - Barcelona: 150\n",
      " - Madrid: 318\n",
      " - Malaga: 9\n",
      " - Las Palmas de Gran Canaria: 1\n",
      " - Sevilla: 17\n",
      " - Valencia: 26\n",
      " - Palma de Mallorca: 4\n"
     ]
    }
   ],
   "source": [
    "# üì• Imports y configuraci√≥n inicial\n",
    "import os\n",
    "import time\n",
    "import requests\n",
    "import pandas as pd\n",
    "from random import random\n",
    "from datetime import datetime, timedelta\n",
    "\n",
    "API_KEY = 'AsIPMT0pnI4AdbyDWkMWRHBbaG2i8vba'  # ‚Üê poner aqu√≠ API key\n",
    "\n",
    "BASE_URL = 'https://app.ticketmaster.com/discovery/v2/events.json'\n",
    "\n",
    "# üìç Definici√≥n de ciudades y radios de b√∫squeda\n",
    "\n",
    "CITY_GEO = {\n",
    "    'Santa Cruz de Tenerife': {'lat': 28.4636, 'lon': -16.2518, 'radius_km': 40},\n",
    "    'Barcelona':              {'lat': 41.3874, 'lon':   2.1686,  'radius_km': 45},\n",
    "    'Madrid':                 {'lat': 40.4168, 'lon':  -3.7038,  'radius_km': 50},\n",
    "    'Malaga':                 {'lat': 36.7213, 'lon':  -4.4213,  'radius_km': 40},\n",
    "    'Las Palmas de Gran Canaria': {'lat': 28.1235, 'lon': -15.4363, 'radius_km': 40},\n",
    "    'Sevilla':                {'lat': 37.3891, 'lon':  -5.9845,  'radius_km': 45},\n",
    "    'Valencia':               {'lat': 39.4699, 'lon':  -0.3763,  'radius_km': 45},\n",
    "    'Palma de Mallorca':      {'lat': 39.5696, 'lon':   2.6502,  'radius_km': 35},\n",
    "}\n",
    "\n",
    "# ‚è±Ô∏è Rango temporal de b√∫squeda: desde hoy hasta un a√±o\n",
    "\n",
    "start_dt = datetime.utcnow().strftime('%Y-%m-%dT00:00:00Z')\n",
    "end_dt = (datetime.utcnow() + timedelta(days=365)).strftime('%Y-%m-%dT00:00:00Z')\n",
    "\n",
    "# üåê Sesi√≥n de requests para la API\n",
    "\n",
    "session = requests.Session()\n",
    "session.headers.update({'Accept': 'application/json'})\n",
    "\n",
    "# üîÑ Funci√≥n para pedir una p√°gina a la API con reintentos\n",
    "\n",
    "def fetch_page(params, max_retries=5):\n",
    "    delay = 1.0\n",
    "    for _ in range(max_retries):\n",
    "        try:\n",
    "            r = session.get(BASE_URL, params=params, timeout=20)\n",
    "            if r.status_code in (429, 500, 502, 503, 504):\n",
    "                time.sleep(delay + random())\n",
    "                delay = min(delay * 2, 16)\n",
    "                continue\n",
    "            r.raise_for_status()\n",
    "            return r.json()\n",
    "        except requests.RequestException:\n",
    "            time.sleep(delay + random())\n",
    "            delay = min(delay * 2, 16)\n",
    "    return None\n",
    "\n",
    "# üìë Funci√≥n para descargar todas las p√°ginas de resultados\n",
    "\n",
    "def fetch_all(params_base):\n",
    "    results = []\n",
    "    page = 0\n",
    "    while True:\n",
    "        params = {**params_base, 'page': page, 'size': 200, 'sort': 'date,asc'}\n",
    "        data = fetch_page(params)\n",
    "        if not data:\n",
    "            break\n",
    "        events = (data.get('_embedded') or {}).get('events', [])\n",
    "        results.extend(events)\n",
    "        p = data.get('page') or {}\n",
    "        if (p.get('number', 0) >= (p.get('totalPages', 1) - 1)):\n",
    "            break\n",
    "        page += 1\n",
    "    return results\n",
    "\n",
    "# üßπ Normalizaci√≥n de cada evento en un diccionario plano\n",
    "\n",
    "def normalize(e, ciudad_buscada):\n",
    "    venue = (e.get('_embedded', {}).get('venues') or [{}])[0]\n",
    "    address = venue.get('address', {}) or {}\n",
    "    city_info = venue.get('city', {}) or {}\n",
    "    country = venue.get('country', {}) or {}\n",
    "    price = (e.get('priceRanges') or [{}])[0]\n",
    "    classification = (e.get('classifications') or [{}])[0]\n",
    "\n",
    "    return {\n",
    "        'ciudad_buscada': ciudad_buscada,\n",
    "        'id_evento': e.get('id'),\n",
    "        'nombre': e.get('name'),\n",
    "        'fecha': (e.get('dates') or {}).get('start', {}).get('localDate'),\n",
    "        'hora': (e.get('dates') or {}).get('start', {}).get('localTime'),\n",
    "        'estado_evento': (e.get('dates') or {}).get('status', {}).get('code'),\n",
    "        'fecha_venta': (e.get('sales') or {}).get('public', {}).get('startDateTime'),\n",
    "        'url': e.get('url'),\n",
    "        'tipo_evento': classification.get('segment', {}).get('name'),\n",
    "        'genero': classification.get('genre', {}).get('name'),\n",
    "        'subgenero': classification.get('subGenre', {}).get('name'),\n",
    "        'precio_min': price.get('min'),\n",
    "        'precio_max': price.get('max'),\n",
    "        'promotor': (e.get('promoter') or {}).get('name'),\n",
    "        'ciudad_real': city_info.get('name'),\n",
    "        'pais': country.get('name'),\n",
    "        'lugar': venue.get('name'),\n",
    "        'direccion': address.get('line1'),\n",
    "        'latitud': (venue.get('location') or {}).get('latitude'),\n",
    "        'longitud': (venue.get('location') or {}).get('longitude'),\n",
    "        'codigo_postal': venue.get('postalCode'),\n",
    "    }\n",
    "\n",
    "# üöÄ Bucle principal: recorrer ciudades, combinar b√∫squedas city+geo y acumular resultados\n",
    "\n",
    "resultados = []\n",
    "vistos = set()  \n",
    "contador_ciudades = {}  # ‚Üê nuevo dict para contar\n",
    "\n",
    "for ciudad, geo in CITY_GEO.items():\n",
    "    print(f\"\\nüèôÔ∏è  {ciudad}: extracci√≥n combinada (city + geo)\")\n",
    "\n",
    "    params_city = {\n",
    "        'apikey': API_KEY,\n",
    "        'locale': '*',\n",
    "        'countryCode': 'ES',\n",
    "        'city': ciudad,\n",
    "        'startDateTime': start_dt,\n",
    "        'endDateTime': end_dt,\n",
    "    }\n",
    "    eventos_city = fetch_all(params_city)\n",
    "\n",
    "    params_geo = {\n",
    "        'apikey': API_KEY,\n",
    "        'locale': '*',\n",
    "        'countryCode': 'ES',\n",
    "        'latlong': f\"{geo['lat']},{geo['lon']}\",\n",
    "        'radius': geo['radius_km'],\n",
    "        'unit': 'km',\n",
    "        'startDateTime': start_dt,\n",
    "        'endDateTime': end_dt,\n",
    "    }\n",
    "    eventos_geo = fetch_all(params_geo)\n",
    "\n",
    "    total_ciudad = 0\n",
    "    for e in (eventos_city + eventos_geo):\n",
    "        eid = e.get('id')\n",
    "        if not eid or eid in vistos:\n",
    "            continue\n",
    "        vistos.add(eid)\n",
    "        resultados.append(normalize(e, ciudad))\n",
    "        total_ciudad += 1\n",
    "\n",
    "    contador_ciudades[ciudad] = total_ciudad\n",
    "    print(f\"   ‚Üí nuevos √∫nicos a√±adidos: {total_ciudad}\")\n",
    "\n",
    "# üíæ Guardar resultados en CSV y mostrar resumen\n",
    "\n",
    "df = pd.DataFrame(resultados)\n",
    "df.to_csv('eventos_ticketmaster.csv', index=False, encoding='utf-8')\n",
    "print(\"\\n‚úÖ Archivo guardado: 'eventos_ticketmaster.csv'\")\n",
    "print(f\"Total eventos √∫nicos: {len(df)}\")\n",
    "\n",
    "# üìä Mostrar contador por ciudad\n",
    "\n",
    "print(\"\\nüìä Eventos por ciudad (√∫nicos):\")\n",
    "for ciudad, cuenta in contador_ciudades.items():\n",
    "    print(f\" - {ciudad}: {cuenta}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
